[
  {
    "qualifiedSignature": "android.app.Dialog.requireViewById(int)",
    "exception": "throw new IllegalArgumentException(\"ID does not reference a View inside this Dialog\");",
    "pathCojunction": "(view == null)",
    "symbolicPathConjunction": "(findViewById(id)) && (view == null)",
    "backwardsPathConjunction": "(mWindow.findViewById(id) == null)",
    "simplifiedPathConjunction": "mWindow.findViewById(id) == null",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nid0 = Int('id0')\nview0_isNull = Bool('view0_isNull')\n\nconstraints = [\n  view0 == mWindow0.findViewById(id0),\n  view0_isNull\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nid = Symbol('id', integer=True)\nmWindow = Symbol('mWindow')\nmWindow_findViewById = Symbol('mWindow_findViewById')\nnull = Symbol('null')\npath_conjunction = (Eq(mWindow_findViewById, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": true,
    "line": 556,
    "throwingLine": 559,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/Dialog.java"
  },
  {
    "qualifiedSignature": "android.app.Instrumentation.start()",
    "exception": "throw new RuntimeException(\"Instrumentation already started\");",
    "pathCojunction": "(mRunner != null)",
    "symbolicPathConjunction": "(mRunner != null)",
    "backwardsPathConjunction": "(mRunner != null)",
    "simplifiedPathConjunction": "mRunner != null",
    "z3Inputs": "[mRunner0_isNull = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmRunner0_isNull = Bool('mRunner0_isNull')\n\nconstraints = [\n  Not(mRunner0_isNull)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmRunner = Symbol('mRunner')\nnull = Symbol('null')\npath_conjunction = (Ne(mRunner, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 159,
    "throwingLine": 161,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/Instrumentation.java"
  }
]