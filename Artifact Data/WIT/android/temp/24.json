[
  {
    "qualifiedSignature": "android.app.backup.BackupDataInput.getKey()",
    "exception": "throw new IllegalStateException(\"Entity header not read\");",
    "pathCojunction": "(!(mHeaderReady))",
    "symbolicPathConjunction": "(!(mHeaderReady))",
    "backwardsPathConjunction": "(!(mHeaderReady))",
    "simplifiedPathConjunction": "!mHeaderReady",
    "z3Inputs": "[mHeaderReady0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmHeaderReady0 = Bool('mHeaderReady0')\n\nconstraints = [\n  Not(mHeaderReady0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmHeaderReady = Symbol('mHeaderReady')\npath_conjunction = (~(mHeaderReady))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 128,
    "throwingLine": 132,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/backup/BackupDataInput.java"
  },
  {
    "qualifiedSignature": "android.app.backup.BackupDataInput.getDataSize()",
    "exception": "throw new IllegalStateException(\"Entity header not read\");",
    "pathCojunction": "(!(mHeaderReady))",
    "symbolicPathConjunction": "(!(mHeaderReady))",
    "backwardsPathConjunction": "(!(mHeaderReady))",
    "simplifiedPathConjunction": "!mHeaderReady",
    "z3Inputs": "[mHeaderReady0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmHeaderReady0 = Bool('mHeaderReady0')\n\nconstraints = [\n  Not(mHeaderReady0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmHeaderReady = Symbol('mHeaderReady')\npath_conjunction = (~(mHeaderReady))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 143,
    "throwingLine": 147,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/backup/BackupDataInput.java"
  },
  {
    "qualifiedSignature": "android.app.backup.BackupDataInput.skipEntityData()",
    "exception": "throw new IllegalStateException(\"Entity header not read\");",
    "pathCojunction": "(!(mHeaderReady))",
    "symbolicPathConjunction": "(!(mHeaderReady))",
    "backwardsPathConjunction": "(!(mHeaderReady))",
    "simplifiedPathConjunction": "!mHeaderReady",
    "z3Inputs": "[mHeaderReady0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmHeaderReady0 = Bool('mHeaderReady0')\n\nconstraints = [\n  Not(mHeaderReady0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmHeaderReady = Symbol('mHeaderReady')\npath_conjunction = (~(mHeaderReady))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 187,
    "throwingLine": 191,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/backup/BackupDataInput.java"
  }
]