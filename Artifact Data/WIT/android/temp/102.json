[
  {
    "qualifiedSignature": "android.view.ViewStub.setVisibility(int)",
    "exception": "throw new IllegalStateException(\"setVisibility called on un-referenced view\");",
    "pathCojunction": "(mInflatedViewRef != null) && (!(view != null))",
    "symbolicPathConjunction": "(mInflatedViewRef != null) && (!(view != null))",
    "backwardsPathConjunction": "(mInflatedViewRef != null) && (!(view != null))",
    "simplifiedPathConjunction": "null == view && mInflatedViewRef != null",
    "z3Inputs": "[mInflatedViewRef0_isNull = False, view0_isNull = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nvisibility0 = Int('visibility0')\nmInflatedViewRef0_isNull = Bool('mInflatedViewRef0_isNull')\nview0_isNull = Bool('view0_isNull')\n\nconstraints = [\n  And(Not(mInflatedViewRef0_isNull), Not(Not(view0_isNull)))\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmInflatedViewRef = Symbol('mInflatedViewRef')\nview = Symbol('view')\nnull = Symbol('null')\npath_conjunction = ((Ne(mInflatedViewRef, null)) & (~((Ne(view, null)))))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 239,
    "throwingLine": 245,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewStub.java"
  }
]