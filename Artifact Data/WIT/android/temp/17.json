[
  {
    "qualifiedSignature": "android.app.prediction.AppTarget.Builder.setRank(int)",
    "exception": "throw new IllegalArgumentException(\"rank cannot be a negative value\");",
    "pathCojunction": "(rank < 0)",
    "symbolicPathConjunction": "(rank < 0)",
    "backwardsPathConjunction": "(rank < 0)",
    "simplifiedPathConjunction": "rank < 0",
    "z3Inputs": "[rank0 = -1]\n[rank0 = -2]\n[rank0 = -3]\n[rank0 = -4]\n[rank0 = -5]\n[rank0 = -6]\n[rank0 = -7]\n[rank0 = -8]\n[rank0 = -9]\n[rank0 = -10]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nrank0 = Int('rank0')\n\nconstraints = [\n  rank0 < 0\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nrank = Symbol('rank', integer=True)\npath_conjunction = (StrictLessThan(rank, 0))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 286,
    "throwingLine": 288,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/prediction/AppTarget.java"
  },
  {
    "qualifiedSignature": "android.app.prediction.AppTarget.Builder.build()",
    "exception": "throw new IllegalStateException(\"No target is set\");",
    "pathCojunction": "(mPackageName == null)",
    "symbolicPathConjunction": "(mPackageName == null)",
    "backwardsPathConjunction": "(mPackageName == null)",
    "simplifiedPathConjunction": "mPackageName == null",
    "z3Inputs": "[mPackageName0_isNull = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmPackageName0_isNull = Bool('mPackageName0_isNull')\n\nconstraints = [\n  mPackageName0_isNull\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmPackageName = Symbol('mPackageName')\nnull = Symbol('null')\npath_conjunction = (Eq(mPackageName, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 302,
    "throwingLine": 304,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/prediction/AppTarget.java"
  }
]