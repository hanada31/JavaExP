[
  {
    "qualifiedSignature": "android.view.MagnificationSpec.initialize(float, float, float)",
    "exception": "throw new IllegalArgumentException(\"Scale must be greater than or equal to one!\");",
    "pathCojunction": "(scale < 1)",
    "symbolicPathConjunction": "(scale < 1)",
    "backwardsPathConjunction": "(scale < 1)",
    "simplifiedPathConjunction": "scale < 1",
    "z3Inputs": "[scale0 = 0]\n[scale0 = -1]\n[scale0 = -2]\n[scale0 = -3]\n[scale0 = -4]\n[scale0 = -5]\n[scale0 = -6]\n[scale0 = -7]\n[scale0 = -8]\n[scale0 = -9]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nscale0 = Real('scale0')\noffsetX0 = Real('offsetX0')\noffsetY0 = Real('offsetY0')\n\nconstraints = [\n  scale0 < 1\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nscale = Symbol('scale', integer=True)\npath_conjunction = (StrictLessThan(scale, 1))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 52,
    "throwingLine": 54,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/MagnificationSpec.java"
  }
]