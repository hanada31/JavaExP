[
  {
    "qualifiedSignature": "android.bluetooth.BluetoothOutputStream.write(byte[], int, int)",
    "exception": "throw new NullPointerException(\"buffer is null\");",
    "pathCojunction": "(b == null)",
    "symbolicPathConjunction": "(b == null)",
    "backwardsPathConjunction": "(b == null)",
    "simplifiedPathConjunction": "b == null",
    "z3Inputs": "[b0_isNull = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\noffset0 = Int('offset0')\ncount0 = Int('count0')\nb0_isNull = Bool('b0_isNull')\n\nconstraints = [\n  b0_isNull\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nb = Symbol('b')\nnull = Symbol('null')\npath_conjunction = (Eq(b, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 69,
    "throwingLine": 71,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/bluetooth/BluetoothOutputStream.java"
  },
  {
    "qualifiedSignature": "android.bluetooth.BluetoothOutputStream.write(byte[], int, int)",
    "exception": "throw new IndexOutOfBoundsException(\"invalid offset or length\");",
    "pathCojunction": "(!(b == null)) && ((offset | count) < 0 || count > b.length - offset)",
    "symbolicPathConjunction": "(!(b == null)) && ((offset | count) < 0 || count > b.length - offset)",
    "backwardsPathConjunction": "(!(b == null)) && ((offset | count) < 0 || count > b.length - offset)",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\noffset0 = Int('offset0')\ncount0 = Int('count0')\nb0_isNull = Bool('b0_isNull')\nb0_length = Int('b0_length')\n\nconstraints = [\n  b0_length >= 0, # implicit\n  And(Not(b0_isNull), Or(offset0 | count0 < 0, count0 > b0_length - offset0))\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nb = Symbol('b')\noffset = Symbol('offset', integer=True)\ncount = Symbol('count', integer=True)\nb_length = Symbol('b_length', integer=True)\nnull = Symbol('null')\npath_conjunction = ((~((Eq(b, null)))) & ((StrictLessThan((offset | count), 0)) | (StrictGreaterThan(count, (b_length - offset)))))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": true,
    "line": 69,
    "throwingLine": 74,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/bluetooth/BluetoothOutputStream.java"
  },
  {
    "qualifiedSignature": "android.bluetooth.le.PeriodicAdvertisingParameters.Builder.setInterval(int)",
    "exception": "throw new IllegalArgumentException(\"Invalid interval (must be \" + INTERVAL_MIN + \"-\" + INTERVAL_MAX + \")\");",
    "pathCojunction": "(interval < INTERVAL_MIN || interval > INTERVAL_MAX)",
    "symbolicPathConjunction": "(interval < INTERVAL_MIN || interval > INTERVAL_MAX)",
    "backwardsPathConjunction": "(interval < INTERVAL_MIN || interval > INTERVAL_MAX)",
    "simplifiedPathConjunction": "interval > 65519 || interval < 80",
    "z3Inputs": "[interval0 = 65520,\n INTERVAL_MAX0 = 65519,\n INTERVAL_MIN0 = 80]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = 0]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -1]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -2]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -3]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -4]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -5]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -6]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -7]\n[INTERVAL_MIN0 = 80, INTERVAL_MAX0 = 65519, interval0 = -8]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\ninterval0 = Int('interval0')\nINTERVAL_MIN0 = Int('INTERVAL_MIN0')\nINTERVAL_MAX0 = Int('INTERVAL_MAX0')\n\nconstraints = [\n  INTERVAL_MIN0 == 80,\n  INTERVAL_MAX0 == 65519,\n  Or(interval0 < INTERVAL_MIN0, interval0 > INTERVAL_MAX0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\ninterval = Symbol('interval', integer=True)\npath_conjunction = ((StrictLessThan(interval, 80)) | (StrictGreaterThan(interval, 65519)))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 105,
    "throwingLine": 107,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/bluetooth/le/PeriodicAdvertisingParameters.java"
  }
]