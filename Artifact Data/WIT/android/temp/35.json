[
  {
    "qualifiedSignature": "android.app.TabActivity.onContentChanged()",
    "exception": "throw new RuntimeException(\"Your content must have a TabHost whose id attribute is \" + \"'android.R.id.tabhost'\");",
    "pathCojunction": "(mTabHost == null)",
    "symbolicPathConjunction": "(mTabHost == null)",
    "backwardsPathConjunction": "(mTabHost == null)",
    "simplifiedPathConjunction": "mTabHost == null",
    "z3Inputs": "[mTabHost0_isNull = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmTabHost0_isNull = Bool('mTabHost0_isNull')\n\nconstraints = [\n  mTabHost0_isNull\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmTabHost = Symbol('mTabHost')\nnull = Symbol('null')\npath_conjunction = (Eq(mTabHost, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": false,
    "line": 109,
    "throwingLine": 114,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/TabActivity.java"
  },
  {
    "qualifiedSignature": "android.app.admin.DevicePolicyManager.getStorageEncryptionStatus()",
    "exception": "throw new SecurityException(\"getStorageEncryptionStatus\" + \" cannot be called on the parent instance\")",
    "pathCojunction": "(mParentInstance)",
    "symbolicPathConjunction": "(mParentInstance)",
    "backwardsPathConjunction": "(mParentInstance)",
    "simplifiedPathConjunction": "mParentInstance",
    "z3Inputs": "[mParentInstance0 = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmParentInstance0 = Bool('mParentInstance0')\n\nconstraints = [\n  mParentInstance0\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmParentInstance = Symbol('mParentInstance')\npath_conjunction = mParentInstance\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 4530,
    "throwingLine": 4531,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/admin/DevicePolicyManager.java"
  },
  {
    "qualifiedSignature": "android.app.admin.DevicePolicyManager.isDeviceOwnerApp(java.lang.String)",
    "exception": "throw new SecurityException(\"isDeviceOwnerApp\" + \" cannot be called on the parent instance\")",
    "pathCojunction": "(mParentInstance)",
    "symbolicPathConjunction": "(mParentInstance)",
    "backwardsPathConjunction": "(mParentInstance)",
    "simplifiedPathConjunction": "mParentInstance",
    "z3Inputs": "[mParentInstance0 = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\npackageName0 = String('packageName0')\nmParentInstance0 = Bool('mParentInstance0')\n\nconstraints = [\n  mParentInstance0\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmParentInstance = Symbol('mParentInstance')\npath_conjunction = mParentInstance\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 5876,
    "throwingLine": 5877,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/admin/DevicePolicyManager.java"
  },
  {
    "qualifiedSignature": "android.app.admin.DevicePolicyManager.getAccountTypesWithManagementDisabled()",
    "exception": "throw new SecurityException(\"getAccountTypesWithManagementDisabled\" + \" cannot be called on the parent instance\")",
    "pathCojunction": "(mParentInstance)",
    "symbolicPathConjunction": "(mParentInstance)",
    "backwardsPathConjunction": "(mParentInstance)",
    "simplifiedPathConjunction": "mParentInstance",
    "z3Inputs": "[mParentInstance0 = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmParentInstance0 = Bool('mParentInstance0')\n\nconstraints = [\n  mParentInstance0\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmParentInstance = Symbol('mParentInstance')\npath_conjunction = mParentInstance\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 7986,
    "throwingLine": 7987,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/admin/DevicePolicyManager.java"
  }
]