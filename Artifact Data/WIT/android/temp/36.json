[
  {
    "qualifiedSignature": "android.app.admin.SystemUpdatePolicy.createWindowedInstallPolicy(int, int)",
    "exception": "throw new IllegalArgumentException(\"startTime and endTime must be inside [0, 1440)\");",
    "pathCojunction": "(startTime < 0 || startTime >= WINDOW_BOUNDARY || endTime < 0 || endTime >= WINDOW_BOUNDARY)",
    "symbolicPathConjunction": "(startTime < 0 || startTime >= WINDOW_BOUNDARY || endTime < 0 || endTime >= WINDOW_BOUNDARY)",
    "backwardsPathConjunction": "(startTime < 0 || startTime >= WINDOW_BOUNDARY || endTime < 0 || endTime >= WINDOW_BOUNDARY)",
    "simplifiedPathConjunction": "endTime >= 1440 || startTime >= 1440 || endTime < 0 || startTime < 0",
    "z3Inputs": "[endTime0 = -1, startTime0 = -1, WINDOW_BOUNDARY0 = 1440]\n[startTime0 = -2, WINDOW_BOUNDARY0 = 1440]\n[endTime0 = -2, startTime0 = -3, WINDOW_BOUNDARY0 = 1440]\n[endTime0 = -3, startTime0 = -4, WINDOW_BOUNDARY0 = 1440]\n[endTime0 = -4, startTime0 = -5, WINDOW_BOUNDARY0 = 1440]\n[startTime0 = -6, WINDOW_BOUNDARY0 = 1440]\n[endTime0 = -5, startTime0 = -7, WINDOW_BOUNDARY0 = 1440]\n[endTime0 = -6, startTime0 = -8, WINDOW_BOUNDARY0 = 1440]\n[endTime0 = -7, startTime0 = -9, WINDOW_BOUNDARY0 = 1440]\n[startTime0 = -10, WINDOW_BOUNDARY0 = 1440]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nstartTime0 = Int('startTime0')\nendTime0 = Int('endTime0')\nWINDOW_BOUNDARY0 = Int('WINDOW_BOUNDARY0')\n\nconstraints = [\n  WINDOW_BOUNDARY0 == 24 * 60,\n  Or(Or(Or(startTime0 < 0, startTime0 >= WINDOW_BOUNDARY0), endTime0 < 0), endTime0 >= WINDOW_BOUNDARY0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nstartTime = Symbol('startTime', integer=True)\nendTime = Symbol('endTime', integer=True)\npath_conjunction = ((((StrictLessThan(startTime, 0)) | (GreaterThan(startTime, (24 * 60)))) | (StrictLessThan(endTime, 0))) | (GreaterThan(endTime, (24 * 60))))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 343,
    "throwingLine": 346,
    "isStatic": true,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/admin/SystemUpdatePolicy.java"
  },
  {
    "qualifiedSignature": "android.app.admin.SystemUpdatePolicy.validateType()",
    "exception": "throw new IllegalArgumentException(\"Invalid system update policy type.\");",
    "pathCojunction": "(!(mPolicyType == TYPE_INSTALL_AUTOMATIC || mPolicyType == TYPE_POSTPONE)) && (!(mPolicyType == TYPE_INSTALL_WINDOWED))",
    "symbolicPathConjunction": "(!(mPolicyType == TYPE_INSTALL_AUTOMATIC || mPolicyType == TYPE_POSTPONE)) && (!(mPolicyType == TYPE_INSTALL_WINDOWED))",
    "backwardsPathConjunction": "(!(mPolicyType == TYPE_INSTALL_AUTOMATIC || mPolicyType == TYPE_POSTPONE)) && (!(mPolicyType == TYPE_INSTALL_WINDOWED))",
    "simplifiedPathConjunction": "mPolicyType != 1 && mPolicyType != 2 && mPolicyType != 3",
    "z3Inputs": "[mPolicyType0 = 4,\n TYPE_INSTALL_WINDOWED0 = 2,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_POSTPONE0 = 3]\n[mPolicyType0 = 5,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 6,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 7,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 8,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 9,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 10,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 11,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 12,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 13,\n TYPE_POSTPONE0 = 3,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n TYPE_INSTALL_WINDOWED0 = 2]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmPolicyType0 = Int('mPolicyType0')\nTYPE_INSTALL_AUTOMATIC0 = Int('TYPE_INSTALL_AUTOMATIC0')\nTYPE_POSTPONE0 = Int('TYPE_POSTPONE0')\nTYPE_INSTALL_WINDOWED0 = Int('TYPE_INSTALL_WINDOWED0')\n\nconstraints = [\n  TYPE_INSTALL_AUTOMATIC0 == 1,\n  TYPE_POSTPONE0 == 3,\n  TYPE_INSTALL_WINDOWED0 == 2,\n  And(Not(Or(mPolicyType0 == TYPE_INSTALL_AUTOMATIC0, mPolicyType0 == TYPE_POSTPONE0)), Not(mPolicyType0 == TYPE_INSTALL_WINDOWED0))\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmPolicyType = Symbol('mPolicyType', integer=True)\npath_conjunction = ((~(((Eq(mPolicyType, 1)) | (Eq(mPolicyType, 3))))) & (~((Eq(mPolicyType, 2)))))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 430,
    "throwingLine": 439,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/admin/SystemUpdatePolicy.java"
  },
  {
    "qualifiedSignature": "android.app.admin.SystemUpdatePolicy.validateType()",
    "exception": "throw new IllegalArgumentException(\"Invalid maintenance window\");",
    "pathCojunction": "(!(mPolicyType == TYPE_INSTALL_AUTOMATIC || mPolicyType == TYPE_POSTPONE)) && (mPolicyType == TYPE_INSTALL_WINDOWED) && (!(mMaintenanceWindowStart >= 0 && mMaintenanceWindowStart < WINDOW_BOUNDARY && mMaintenanceWindowEnd >= 0 && mMaintenanceWindowEnd < WINDOW_BOUNDARY))",
    "symbolicPathConjunction": "(!(mPolicyType == TYPE_INSTALL_AUTOMATIC || mPolicyType == TYPE_POSTPONE)) && (mPolicyType == TYPE_INSTALL_WINDOWED) && (!(mMaintenanceWindowStart >= 0 && mMaintenanceWindowStart < WINDOW_BOUNDARY && mMaintenanceWindowEnd >= 0 && mMaintenanceWindowEnd < WINDOW_BOUNDARY))",
    "backwardsPathConjunction": "(!(mPolicyType == TYPE_INSTALL_AUTOMATIC || mPolicyType == TYPE_POSTPONE)) && (mPolicyType == TYPE_INSTALL_WINDOWED) && (!(mMaintenanceWindowStart >= 0 && mMaintenanceWindowStart < WINDOW_BOUNDARY && mMaintenanceWindowEnd >= 0 && mMaintenanceWindowEnd < WINDOW_BOUNDARY))",
    "simplifiedPathConjunction": "mPolicyType == 2 && (mMaintenanceWindowEnd >= 1440 || mMaintenanceWindowStart >= 1440 || mMaintenanceWindowEnd < 0 || mMaintenanceWindowStart < 0)",
    "z3Inputs": "[mMaintenanceWindowStart0 = -1,\n mMaintenanceWindowEnd0 = -1,\n TYPE_INSTALL_WINDOWED0 = 2,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n WINDOW_BOUNDARY0 = 1440,\n TYPE_POSTPONE0 = 3,\n mPolicyType0 = 2]\n[mPolicyType0 = 2,\n TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -2,\n TYPE_INSTALL_WINDOWED0 = 2]\n[mPolicyType0 = 2,\n TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -3,\n TYPE_INSTALL_WINDOWED0 = 2]\n[TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n mMaintenanceWindowStart0 = -2,\n TYPE_INSTALL_WINDOWED0 = 2,\n mPolicyType0 = 2,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -4]\n[mPolicyType0 = 2,\n TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -5,\n TYPE_INSTALL_WINDOWED0 = 2]\n[TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n mMaintenanceWindowStart0 = -3,\n TYPE_INSTALL_WINDOWED0 = 2,\n mPolicyType0 = 2,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -6]\n[TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n mMaintenanceWindowStart0 = -4,\n TYPE_INSTALL_WINDOWED0 = 2,\n mPolicyType0 = 2,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -7]\n[TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n mMaintenanceWindowStart0 = -5,\n TYPE_INSTALL_WINDOWED0 = 2,\n mPolicyType0 = 2,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -8]\n[mPolicyType0 = 2,\n TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -9,\n TYPE_INSTALL_WINDOWED0 = 2]\n[TYPE_POSTPONE0 = 3,\n WINDOW_BOUNDARY0 = 1440,\n mMaintenanceWindowStart0 = -6,\n TYPE_INSTALL_WINDOWED0 = 2,\n mPolicyType0 = 2,\n TYPE_INSTALL_AUTOMATIC0 = 1,\n mMaintenanceWindowEnd0 = -10]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmPolicyType0 = Int('mPolicyType0')\nTYPE_INSTALL_AUTOMATIC0 = Int('TYPE_INSTALL_AUTOMATIC0')\nTYPE_POSTPONE0 = Int('TYPE_POSTPONE0')\nTYPE_INSTALL_WINDOWED0 = Int('TYPE_INSTALL_WINDOWED0')\nmMaintenanceWindowStart0 = Int('mMaintenanceWindowStart0')\nWINDOW_BOUNDARY0 = Int('WINDOW_BOUNDARY0')\nmMaintenanceWindowEnd0 = Int('mMaintenanceWindowEnd0')\n\nconstraints = [\n  TYPE_INSTALL_AUTOMATIC0 == 1,\n  TYPE_POSTPONE0 == 3,\n  TYPE_INSTALL_WINDOWED0 == 2,\n  WINDOW_BOUNDARY0 == 24 * 60,\n  And(And(Not(Or(mPolicyType0 == TYPE_INSTALL_AUTOMATIC0, mPolicyType0 == TYPE_POSTPONE0)), mPolicyType0 == TYPE_INSTALL_WINDOWED0), Not(And(And(And(mMaintenanceWindowStart0 >= 0, mMaintenanceWindowStart0 < WINDOW_BOUNDARY0), mMaintenanceWindowEnd0 >= 0), mMaintenanceWindowEnd0 < WINDOW_BOUNDARY0)))\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmPolicyType = Symbol('mPolicyType', integer=True)\nmMaintenanceWindowStart = Symbol('mMaintenanceWindowStart', integer=True)\nmMaintenanceWindowEnd = Symbol('mMaintenanceWindowEnd', integer=True)\npath_conjunction = (((~(((Eq(mPolicyType, 1)) | (Eq(mPolicyType, 3))))) & (Eq(mPolicyType, 2))) & (~(((((GreaterThan(mMaintenanceWindowStart, 0)) & (StrictLessThan(mMaintenanceWindowStart, (24 * 60)))) & (GreaterThan(mMaintenanceWindowEnd, 0))) & (StrictLessThan(mMaintenanceWindowEnd, (24 * 60)))))))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 430,
    "throwingLine": 436,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/admin/SystemUpdatePolicy.java"
  }
]