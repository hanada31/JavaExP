[
  {
    "qualifiedSignature": "android.app.ListFragment.setEmptyText(java.lang.CharSequence)",
    "exception": "throw new IllegalStateException(\"Can't be used with a custom content view\");",
    "pathCojunction": "(mStandardEmptyView == null)",
    "symbolicPathConjunction": "(mStandardEmptyView == null)",
    "backwardsPathConjunction": "(mStandardEmptyView == null)",
    "simplifiedPathConjunction": "mStandardEmptyView == null",
    "z3Inputs": "[mStandardEmptyView0_isNull = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\ntext0 = String('text0')\nmStandardEmptyView0_isNull = Bool('mStandardEmptyView0_isNull')\n\nconstraints = [\n  mStandardEmptyView0_isNull\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmStandardEmptyView = Symbol('mStandardEmptyView')\nnull = Symbol('null')\npath_conjunction = (Eq(mStandardEmptyView, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": false,
    "line": 294,
    "throwingLine": 297,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/ListFragment.java"
  },
  {
    "qualifiedSignature": "android.app.ListFragment.setListShown(boolean)",
    "exception": "throw new IllegalStateException(\"Can't be used with a custom content view\")",
    "pathCojunction": "(mProgressContainer == null)",
    "symbolicPathConjunction": "(mProgressContainer == null)",
    "backwardsPathConjunction": "(mProgressContainer == null)",
    "simplifiedPathConjunction": "mProgressContainer == null",
    "z3Inputs": "[mProgressContainer0_isNull = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nshown0 = Bool('shown0')\nmProgressContainer0_isNull = Bool('mProgressContainer0_isNull')\n\nconstraints = [\n  mProgressContainer0_isNull\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmProgressContainer = Symbol('mProgressContainer')\nnull = Symbol('null')\npath_conjunction = (Eq(mProgressContainer, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 320,
    "throwingLine": 321,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/ListFragment.java"
  },
  {
    "qualifiedSignature": "android.app.ListFragment.setListShownNoAnimation(boolean)",
    "exception": "throw new IllegalStateException(\"Can't be used with a custom content view\")",
    "pathCojunction": "(mProgressContainer == null)",
    "symbolicPathConjunction": "(mProgressContainer == null)",
    "backwardsPathConjunction": "(mProgressContainer == null)",
    "simplifiedPathConjunction": "mProgressContainer == null",
    "z3Inputs": "[mProgressContainer0_isNull = True]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nshown0 = Bool('shown0')\nmProgressContainer0_isNull = Bool('mProgressContainer0_isNull')\n\nconstraints = [\n  mProgressContainer0_isNull\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmProgressContainer = Symbol('mProgressContainer')\nnull = Symbol('null')\npath_conjunction = (Eq(mProgressContainer, null))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 328,
    "throwingLine": 329,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/ListFragment.java"
  },
  {
    "qualifiedSignature": "android.app.FragmentBreadCrumbs.setMaxVisible(int)",
    "exception": "throw new IllegalArgumentException(\"visibleCrumbs must be greater than zero\");",
    "pathCojunction": "(visibleCrumbs < 1)",
    "symbolicPathConjunction": "(visibleCrumbs < 1)",
    "backwardsPathConjunction": "(visibleCrumbs < 1)",
    "simplifiedPathConjunction": "visibleCrumbs < 1",
    "z3Inputs": "[visibleCrumbs0 = 0]\n[visibleCrumbs0 = -1]\n[visibleCrumbs0 = -2]\n[visibleCrumbs0 = -3]\n[visibleCrumbs0 = -4]\n[visibleCrumbs0 = -5]\n[visibleCrumbs0 = -6]\n[visibleCrumbs0 = -7]\n[visibleCrumbs0 = -8]\n[visibleCrumbs0 = -9]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nvisibleCrumbs0 = Int('visibleCrumbs0')\n\nconstraints = [\n  visibleCrumbs0 < 1\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nvisibleCrumbs = Symbol('visibleCrumbs', integer=True)\npath_conjunction = (StrictLessThan(visibleCrumbs, 1))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 141,
    "throwingLine": 143,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/app/FragmentBreadCrumbs.java"
  }
]