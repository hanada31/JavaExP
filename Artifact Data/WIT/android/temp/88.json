[
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(!(mAlive)))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 474,
    "throwingLine": 475,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 494,
    "throwingLine": 495,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 509,
    "throwingLine": 510,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 529,
    "throwingLine": 530,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 544,
    "throwingLine": 545,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 563,
    "throwingLine": 564,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 579,
    "throwingLine": 580,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(removeOnGlobalLayoutListener(victim))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 601,
    "throwingLine": 602,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 614,
    "throwingLine": 615,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 629,
    "throwingLine": 630,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 648,
    "throwingLine": 649,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnWindowShownListener(android.view.ViewTreeObserver.OnWindowShownListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(!(mAlive)))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 664,
    "throwingLine": 665,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnWindowShownListener(android.view.ViewTreeObserver.OnWindowShownListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 687,
    "throwingLine": 688,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)",
    "exception": "throw ex;",
    "pathCojunction": "(!(mOnDrawListeners == null)) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "symbolicPathConjunction": "(!(mOnDrawListeners == null)) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "backwardsPathConjunction": "(!(mOnDrawListeners == null)) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "simplifiedPathConjunction": "mInDispatchOnDraw && sIllegalOnDrawModificationIsFatal && mOnDrawListeners != null",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmInDispatchOnDraw0 = Bool('mInDispatchOnDraw0')\nsIllegalOnDrawModificationIsFatal0 = Bool('sIllegalOnDrawModificationIsFatal0')\nmOnDrawListeners0_isNull = Bool('mOnDrawListeners0_isNull')\n\nconstraints = [\n  ex0 == new IllegalStateException(\"Cannot call addOnDrawListener inside of onDraw\"),\n  And(And(Not(mOnDrawListeners0_isNull), mInDispatchOnDraw0), sIllegalOnDrawModificationIsFatal0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmOnDrawListeners = Symbol('mOnDrawListeners')\nmInDispatchOnDraw = Symbol('mInDispatchOnDraw')\nsIllegalOnDrawModificationIsFatal = Symbol('sIllegalOnDrawModificationIsFatal')\nnull = Symbol('null')\npath_conjunction = (((~((Eq(mOnDrawListeners, null)))) & mInDispatchOnDraw) & sIllegalOnDrawModificationIsFatal)\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": true,
    "line": 704,
    "throwingLine": 715,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)",
    "exception": "throw ex;",
    "pathCojunction": "(mOnDrawListeners == null) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "symbolicPathConjunction": "(mOnDrawListeners == null) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "backwardsPathConjunction": "(mOnDrawListeners == null) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmInDispatchOnDraw0 = Bool('mInDispatchOnDraw0')\nsIllegalOnDrawModificationIsFatal0 = Bool('sIllegalOnDrawModificationIsFatal0')\nmOnDrawListeners1_isNull = Bool('mOnDrawListeners1_isNull')\n\nconstraints = [\n  mOnDrawListeners1 == new ArrayList<OnDrawListener>(),\n  ex0 == new IllegalStateException(\"Cannot call addOnDrawListener inside of onDraw\"),\n  And(And(mOnDrawListeners1_isNull, mInDispatchOnDraw0), sIllegalOnDrawModificationIsFatal0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": true,
    "line": 704,
    "throwingLine": 715,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)",
    "exception": "throw ex;",
    "pathCojunction": "(!(mOnDrawListeners == null)) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "symbolicPathConjunction": "(!(mOnDrawListeners == null)) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "backwardsPathConjunction": "(!(mOnDrawListeners == null)) && (mInDispatchOnDraw) && (sIllegalOnDrawModificationIsFatal)",
    "simplifiedPathConjunction": "mInDispatchOnDraw && sIllegalOnDrawModificationIsFatal && mOnDrawListeners != null",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmInDispatchOnDraw0 = Bool('mInDispatchOnDraw0')\nsIllegalOnDrawModificationIsFatal0 = Bool('sIllegalOnDrawModificationIsFatal0')\nmOnDrawListeners0_isNull = Bool('mOnDrawListeners0_isNull')\n\nconstraints = [\n  ex0 == new IllegalStateException(\"Cannot call removeOnDrawListener inside of onDraw\"),\n  And(And(Not(mOnDrawListeners0_isNull), mInDispatchOnDraw0), sIllegalOnDrawModificationIsFatal0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmOnDrawListeners = Symbol('mOnDrawListeners')\nmInDispatchOnDraw = Symbol('mInDispatchOnDraw')\nsIllegalOnDrawModificationIsFatal = Symbol('sIllegalOnDrawModificationIsFatal')\nnull = Symbol('null')\npath_conjunction = (((~((Eq(mOnDrawListeners, null)))) & mInDispatchOnDraw) & sIllegalOnDrawModificationIsFatal)\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": true,
    "line": 734,
    "throwingLine": 743,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.registerFrameCommitCallback(java.lang.Runnable)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 762,
    "throwingLine": 763,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.unregisterFrameCommitCallback(java.lang.Runnable)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 784,
    "throwingLine": 785,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 799,
    "throwingLine": 800,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 818,
    "throwingLine": 819,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 833,
    "throwingLine": 834,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 852,
    "throwingLine": 853,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnComputeInternalInsetsListener(android.view.ViewTreeObserver.OnComputeInternalInsetsListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 872,
    "throwingLine": 873,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver.OnComputeInternalInsetsListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 896,
    "throwingLine": 897,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.addOnEnterAnimationCompleteListener(android.view.ViewTreeObserver.OnEnterAnimationCompleteListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 907,
    "throwingLine": 908,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  },
  {
    "qualifiedSignature": "android.view.ViewTreeObserver.removeOnEnterAnimationCompleteListener(android.view.ViewTreeObserver.OnEnterAnimationCompleteListener)",
    "exception": "throw new IllegalStateException(\"This ViewTreeObserver is not alive, call \" + \"getViewTreeObserver() again\");",
    "pathCojunction": "(!(mAlive))",
    "symbolicPathConjunction": "(!(mAlive))",
    "backwardsPathConjunction": "(!(mAlive))",
    "simplifiedPathConjunction": "!mAlive",
    "z3Inputs": "[mAlive0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmAlive0 = Bool('mAlive0')\n\nconstraints = [\n  Not(mAlive0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmAlive = Symbol('mAlive')\npath_conjunction = (~(mAlive))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 919,
    "throwingLine": 920,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewTreeObserver.java"
  }
]