[
  {
    "qualifiedSignature": "android.text.PrecomputedText.findParaIndex(int)",
    "exception": "throw new IndexOutOfBoundsException(\"pos must be less than \" + mParagraphInfo[mParagraphInfo.length - 1].paragraphEnd + \", gave \" + pos);",
    "pathCojunction": "(!(i < mParagraphInfo.length))",
    "symbolicPathConjunction": "(!(i < mParagraphInfo.length))",
    "backwardsPathConjunction": "(!(0 < mParagraphInfo.length))",
    "simplifiedPathConjunction": "mParagraphInfo.length <= 0",
    "z3Inputs": "[mParagraphInfo0_length = 0, i0 = 0]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\npos0 = Int('pos0')\ni0 = Int('i0')\nmParagraphInfo0_length = Int('mParagraphInfo0_length')\n\nconstraints = [\n  i0 == 0,\n  mParagraphInfo0_length >= 0, # implicit\n  Not(i0 < mParagraphInfo0_length)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmParagraphInfo = Symbol('mParagraphInfo')\nmParagraphInfo_length = Symbol('mParagraphInfo_length', integer=True)\npath_conjunction = (~((StrictLessThan(0, mParagraphInfo_length))))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 535,
    "throwingLine": 543,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/text/PrecomputedText.java"
  }
]