[
  {
    "qualifiedSignature": "android.view.ViewRootImpl.requestFitSystemWindows()",
    "exception": "throw new CalledFromWrongThreadException(\"Only the original thread that created a view hierarchy can touch its views.\");",
    "pathCojunction": "(mThread != Thread.currentThread())",
    "symbolicPathConjunction": "(mThread != Thread.currentThread())",
    "backwardsPathConjunction": "(mThread != Thread.currentThread())",
    "simplifiedPathConjunction": "Thread.currentThread() != mThread",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\n\nconstraints = [\n  mThread0 != Thread.currentThread()\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmThread = Symbol('mThread')\nThread_currentThread = Symbol('Thread_currentThread')\npath_conjunction = (Ne(mThread, Thread_currentThread))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": false,
    "maybe": true,
    "line": 1398,
    "throwingLine": 1399,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewRootImpl.java"
  },
  {
    "qualifiedSignature": "android.view.ViewRootImpl.requestLayout()",
    "exception": "throw new CalledFromWrongThreadException(\"Only the original thread that created a view hierarchy can touch its views.\");",
    "pathCojunction": "(!(mHandlingLayoutInLayoutRequest)) && (mThread != Thread.currentThread())",
    "symbolicPathConjunction": "(!(mHandlingLayoutInLayoutRequest)) && (!(mThread != Thread.currentThread()))",
    "backwardsPathConjunction": "(!(mHandlingLayoutInLayoutRequest)) && (mThread != Thread.currentThread())",
    "simplifiedPathConjunction": "!mHandlingLayoutInLayoutRequest && Thread.currentThread() != mThread",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmHandlingLayoutInLayoutRequest0 = Bool('mHandlingLayoutInLayoutRequest0')\n\nconstraints = [\n  And(Not(mHandlingLayoutInLayoutRequest0), mThread0 != Thread.currentThread())\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmHandlingLayoutInLayoutRequest = Symbol('mHandlingLayoutInLayoutRequest')\nmThread = Symbol('mThread')\nThread_currentThread = Symbol('Thread_currentThread')\npath_conjunction = ((~(mHandlingLayoutInLayoutRequest)) & (Ne(mThread, Thread_currentThread)))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": false,
    "maybe": true,
    "line": 1418,
    "throwingLine": 1420,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewRootImpl.java"
  },
  {
    "qualifiedSignature": "android.view.ViewRootImpl.InputStage.deliver(android.view.ViewRootImpl.QueuedInputEvent)",
    "exception": "throw new IllegalArgumentException(\"Invalid result: \" + onProcess(q))",
    "pathCojunction": "(!((q.mFlags & QueuedInputEvent.FLAG_FINISHED) != 0)) && (mView == null || !mAdded) && (!(true)) && (!(onProcess(q) == 0)) && (!(onProcess(q) == 1)) && (!(onProcess(q) == 2))",
    "symbolicPathConjunction": "(!((q.mFlags & QueuedInputEvent.FLAG_FINISHED) != 0)) && (!(mView == null || !mAdded)) && (!(true)) && (!(!(result == 0)) && (!(result == 1)) && (!(result == 2)))",
    "backwardsPathConjunction": "(!((q.mFlags & QueuedInputEvent.FLAG_FINISHED) != 0)) && (mView == null || !mAdded) && (!(true)) && (!(onProcess(q) == 0)) && (!(onProcess(q) == 1)) && (!(onProcess(q) == 2))",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nq_mFlags0 = Int('q_mFlags0')\nQueuedInputEvent_FLAG_FINISHED0 = Int('QueuedInputEvent_FLAG_FINISHED0')\nmAdded0 = Bool('mAdded0')\nmView0_isNull = Bool('mView0_isNull')\n\nconstraints = [\n  And(And(And(And(And(Not(q_mFlags0 & QueuedInputEvent_FLAG_FINISHED0 != 0), Or(mView0_isNull, Not(mAdded0))), Not(True)), Not(onProcess(q0) == 0)), Not(onProcess(q0) == 1)), Not(onProcess(q0) == 2))\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "soundSymbolic": true,
    "soundBackwards": false,
    "maybe": true,
    "line": 4782,
    "throwingLine": 4788,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewRootImpl.java"
  },
  {
    "qualifiedSignature": "android.view.ViewRootImpl.TakenSurfaceHolder.onUpdateSurface()",
    "exception": "throw new IllegalStateException(\"Shouldn't be here\");",
    "pathCojunction": "true",
    "backwardsPathConjunction": "true",
    "simplifiedPathConjunction": "true",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": false,
    "line": 8323,
    "throwingLine": 8325,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewRootImpl.java"
  },
  {
    "qualifiedSignature": "android.view.ViewRootImpl.TakenSurfaceHolder.setFixedSize(int, int)",
    "exception": "throw new UnsupportedOperationException(\"Currently only support sizing from layout\");",
    "pathCojunction": "true",
    "backwardsPathConjunction": "true",
    "simplifiedPathConjunction": "true",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nwidth0 = Int('width0')\nheight0 = Int('height0')\n\nconstraints = [\n  True\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": false,
    "line": 8334,
    "throwingLine": 8335,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewRootImpl.java"
  },
  {
    "qualifiedSignature": "android.view.autofill.AutofillPopupWindow.getAnimationStyle()",
    "exception": "throw new IllegalStateException(\"You can't call this!\");",
    "pathCojunction": "true",
    "backwardsPathConjunction": "true",
    "simplifiedPathConjunction": "true",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": false,
    "line": 318,
    "throwingLine": 319,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/autofill/AutofillPopupWindow.java"
  },
  {
    "qualifiedSignature": "android.view.autofill.AutofillPopupWindow.getElevation()",
    "exception": "throw new IllegalStateException(\"You can't call this!\");",
    "pathCojunction": "true",
    "backwardsPathConjunction": "true",
    "simplifiedPathConjunction": "true",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": false,
    "line": 333,
    "throwingLine": 334,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/autofill/AutofillPopupWindow.java"
  },
  {
    "qualifiedSignature": "android.view.autofill.AutofillPopupWindow.setElevation(float)",
    "exception": "throw new IllegalStateException(\"You can't call this!\");",
    "pathCojunction": "true",
    "backwardsPathConjunction": "true",
    "simplifiedPathConjunction": "true",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nelevation0 = Real('elevation0')\n\nconstraints = [\n  True\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "soundSymbolic": false,
    "soundBackwards": true,
    "maybe": false,
    "line": 360,
    "throwingLine": 361,
    "isStatic": false,
    "targetOnlyArguments": true,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/autofill/AutofillPopupWindow.java"
  },
  {
    "qualifiedSignature": "android.view.ViewConfiguration.getScaledMinimumScalingSpan()",
    "exception": "throw new IllegalStateException(\"Min scaling span cannot be determined when this \" + \"method is called on a ViewConfiguration that was instantiated using a \" + \"constructor with no Context parameter\");",
    "pathCojunction": "(!(mConstructedWithContext))",
    "symbolicPathConjunction": "(!(mConstructedWithContext))",
    "backwardsPathConjunction": "(!(mConstructedWithContext))",
    "simplifiedPathConjunction": "!mConstructedWithContext",
    "z3Inputs": "[mConstructedWithContext0 = False]\n",
    "z3Program": "from z3 import *\nfrom z3_all_models import *\n\nmConstructedWithContext0 = Bool('mConstructedWithContext0')\n\nconstraints = [\n  Not(mConstructedWithContext0)\n]\n\nsolver = Solver()\nfor constraint in constraints:\n  solver.add(constraint)\n\nmodels = list(all_smt(solver))\nfor model in models: print(model)",
    "symPyProgram": "from sympy import Symbol\nfrom sympy import simplify\nfrom sympy.core.relational import Eq, Ne, StrictGreaterThan, StrictLessThan, LessThan, GreaterThan\nfrom sympy.printing import ccode\n\nmConstructedWithContext = Symbol('mConstructedWithContext')\npath_conjunction = (~(mConstructedWithContext))\nprint(ccode(simplify(path_conjunction)))",
    "soundSymbolic": true,
    "soundBackwards": true,
    "maybe": false,
    "line": 1005,
    "throwingLine": 1007,
    "isStatic": false,
    "targetOnlyArguments": false,
    "filePath": "/home/yanghengqin/platform_frameworks_base-android-10.0.0_r47/core/java/android/view/ViewConfiguration.java"
  }
]