{
	"classes":[
		{
			"className":"org.apache.commons.io.output.ProxyWriter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(char)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(char)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence,int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence,int,int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r1.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r1.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void write(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void write(int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void write(char[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void write(char[])>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r1.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r1.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void write(char[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void write(char[],int,int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r1.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r1.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String,int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void write(java.lang.String,int,int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void flush()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void flush()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void close()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void close()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"modifier":"protected",
							"throwUnit":"throw r0",
							"callChain":"throw r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: java.lang.Appendable append(char)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: java.lang.Appendable append(char)>",
							"modifier":"public",
							"invokeUnit":"$r1 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(char)>(c0)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(char)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"$r1 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(char)>(c0) -> virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: java.lang.Appendable append(java.lang.CharSequence,int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: java.lang.Appendable append(java.lang.CharSequence,int,int)>",
							"modifier":"public",
							"invokeUnit":"$r2 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence,int,int)>(r1, i0, i1)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence,int,int)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"$r2 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence,int,int)>(r1, i0, i1) -> virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyWriter: java.lang.Appendable append(java.lang.CharSequence)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyWriter: java.lang.Appendable append(java.lang.CharSequence)>",
							"modifier":"public",
							"invokeUnit":"$r2 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence)>(r1)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>",
							"callChain":"$r2 = virtualinvoke r0.<org.apache.commons.io.output.ProxyWriter: java.io.Writer append(java.lang.CharSequence)>(r1) -> virtualinvoke r1.<org.apache.commons.io.output.ProxyWriter: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete file: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile does not exist: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete directory \\E[\\s\\S]*\\Q.\\E",
							"method":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy: boolean doDelete(java.io.File)>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.IOCase",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.IOCase: org.apache.commons.io.IOCase forName(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QInvalid IOCase name: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOCase: org.apache.commons.io.IOCase forName(java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"i1_1 >= i0",
							"preConditions":[
								"0 larger or equal staticinvoke <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase[] values()>().length"
							],
							"keyPreCondition":"0 larger or equal staticinvoke <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase[] values()>().length"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOCase: java.lang.Object readResolve()>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QInvalid IOCase name: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOCase: java.lang.Object readResolve()>",
							"modifier":"private",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase forName(java.lang.String)>($r1)",
							"invokedMethod":"<org.apache.commons.io.IOCase: org.apache.commons.io.IOCase forName(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: org.apache.commons.io.IOCase forName(java.lang.String)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase forName(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i1_1 >= i0",
							"preConditions":[
								"0 larger or equal staticinvoke <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase[] values()>().length"
							],
							"keyPreCondition":"0 larger or equal staticinvoke <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase[] values()>().length"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.FileUtils",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.io.File getFile(java.io.File,java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\Qnames must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.File getFile(java.io.File,java.lang.String[])>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\Qdirectory must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.File getFile(java.io.File,java.lang.String[])>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.io.File getFile(java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\Qnames must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.File getFile(java.lang.String[])>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":2,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":2,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void touch(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to set the last modification time for \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void touch(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"$z1 != 0, $z0 == 0, $r1 == null, $z2 != 0, $z3 != 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean setLastModified(long)>(staticinvoke <java.lang.System: long currentTimeMillis()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean setLastModified(long)>(staticinvoke <java.lang.System: long currentTimeMillis()>()) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void touch(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void touch(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void touch(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QParameter 'fileFilter' is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_or is not null",
								"0 smaller than parameter_0_in_method_or.length",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_or[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_or[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_or is null"
							],
							"keyPreCondition":"parameter_0_in_method_or is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QParameter 'fileFilter' is null\\E",
							"method":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"private",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"private",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"private",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"private",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"private",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"private",
							"invokeUnit":"$r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter0 is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"private",
							"invokeUnit":"$r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QParameter 'fileFilter' is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_or is not null",
								"0 smaller than parameter_0_in_method_or.length",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_or[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_or[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_or is null"
							],
							"keyPreCondition":"parameter_0_in_method_or is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QParameter 'fileFilter' is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_or is not null",
								"0 smaller than parameter_0_in_method_or.length",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_or[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_or[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_or is null"
							],
							"keyPreCondition":"parameter_0_in_method_or is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QParameter 'fileFilter' is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter2 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_or is not null",
								"0 smaller than parameter_0_in_method_or.length",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_or[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_or[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_or is null"
							],
							"keyPreCondition":"parameter_0_in_method_or is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of suffixes must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[])>($r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[])>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[])>($r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter1 is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QParameter 'fileFilter' is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_listFiles is null"
							],
							"keyPreCondition":"parameter_1_in_method_listFiles is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_2_in_method_listFiles is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_2_in_method_listFiles is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_or is not null",
								"0 smaller than parameter_0_in_method_or.length",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_or[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_or[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_or is null"
							],
							"keyPreCondition":"parameter_0_in_method_or is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of suffixes must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> specialinvoke $r2.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[])>($r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter1 is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QParameter 'fileFilter' is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_listFiles is null"
							],
							"keyPreCondition":"parameter_1_in_method_listFiles is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> $r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_2_in_method_listFiles is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: org.apache.commons.io.filefilter.IOFileFilter setUpEffectiveDirFilter(org.apache.commons.io.filefilter.IOFileFilter)>(r3) -> $r3_1 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_2_in_method_listFiles is not null",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, $z0 != 0, r1 != null, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_or is not null",
								"0 smaller than parameter_0_in_method_or.length",
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_or[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_or[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>($r6) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, r1 != null, r1 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_1_in_method_listFiles is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_or is null"
							],
							"keyPreCondition":"parameter_0_in_method_or is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean contentEquals(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't compare directories, only files\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean contentEquals(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == $z1, $z0 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is virtualinvoke parameter1.<java.io.File: boolean exists()>()",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't compare directories, only files\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean contentEquals(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == $z1, $z0 != 0, $z2 != 0, $z3 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is virtualinvoke parameter1.<java.io.File: boolean exists()>()",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't compare directories, only files\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == $z1, $z0 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is virtualinvoke parameter1.<java.io.File: boolean exists()>()",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't compare directories, only files\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean contentEqualsIgnoreEOL(java.io.File,java.io.File,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == $z1, $z0 != 0, $z2 != 0, $z3 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is virtualinvoke parameter1.<java.io.File: boolean exists()>()",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.io.File[] toFiles(java.net.URL[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QURL could not be converted to a File: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.io.File[] toFiles(java.net.URL[])>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"r0 == null, $i0 != 0, i3_1 >= $i2, r3 == null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is not 0",
								"0 smaller than parameter0.length",
								"parameter0[i3_1] is not null",
								"virtualinvoke virtualinvoke parameter0[i3_1].<java.net.URL: java.lang.String getProtocol()>().<java.lang.String: boolean equals(java.lang.Object)>(\"file\") is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0[i3_1].<java.net.URL: java.lang.String getProtocol()>().<java.lang.String: boolean equals(java.lang.Object)>(\"file\") is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z2 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_copyFile is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_copyFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_copyFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 == 0, $z2 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_copyFile is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_copyFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_copyFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":3,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":3,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":3,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":2,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r25",
							"callChain":"throw $r25",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"private",
							"throwUnit":"throw $r48",
							"callChain":"throw $r48",
							"throwUnitOrder":1,
							"conditions":"$b11 == 0",
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.Throwable is caught.",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"private",
							"throwUnit":"throw $r48",
							"callChain":"throw $r48",
							"throwUnitOrder":1,
							"conditions":"$r3 == null, $b11 == 0",
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.Throwable is caught.",
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"private",
							"throwUnit":"throw $r48",
							"callChain":"throw $r48",
							"throwUnitOrder":1,
							"conditions":"$r3 == null, $b11 == 0",
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.Throwable is caught.",
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"modifier":"private",
							"throwUnit":"throw $r44",
							"callChain":"throw $r44",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":3,
							"conditions":"r0 != null, $z0 == 0, r1 != null, $z1 == 0, $z2 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":2,
							"conditions":"r0 != null, $z0 == 0, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":3,
							"conditions":"r0 != null, $z0 == 0, $z3 != 0, r1 != null, $z1 == 0, $z2 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":2,
							"conditions":"r0 != null, $z0 == 0, $z3 != 0, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 == 0, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_copyDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_copyDirectory is null"
							],
							"keyPreCondition":"parameter_1_in_method_copyDirectory is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r13",
							"callChain":"throw $r13",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r21",
							"callChain":"throw $r21",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":2,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":3,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":3,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"throwUnit":"throw $r15",
							"callChain":"throw $r15",
							"throwUnitOrder":2,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":3,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"throwUnit":"throw $r21",
							"callChain":"throw $r21",
							"throwUnitOrder":1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"throwUnit":"throw $r27",
							"callChain":"throw $r27",
							"throwUnitOrder":0,
							"conditions":"$r32_2 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter4 is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter4.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter4 is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter4.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter4 is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter4.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"modifier":"private",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter4 is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter4.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QThe source \\E[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 == 0, $z1 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, r1 != null, $z1 == 0, $z2 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z3 != 0, r1 != null, $z1 == 0, $z2 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z3 != 0, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_copyDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"parameter_1_in_method_copyDirectory is null"
							],
							"keyPreCondition":"parameter_1_in_method_copyDirectory is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z2 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_copyFile is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"parameter_1_in_method_copyFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_copyFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSources must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z2 != 0",
							"preConditions":[
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"parameter_1_in_method_copyFileToDirectory is null"
							],
							"keyPreCondition":"parameter_1_in_method_copyFileToDirectory is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFile is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_copyFileToDirectory is not null",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"parameter_1_in_method_copyFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_copyFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"parameter_0_in_method_copyFileToDirectory is null"
							],
							"keyPreCondition":"parameter_0_in_method_copyFileToDirectory is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_copyFile is not null",
								"parameter_0_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_copyFileToDirectory is not null",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete directory \\E[\\s\\S]*\\Q.\\E",
							"method":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"callChain":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean directoryContains(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNot a directory: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: boolean directoryContains(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDirectory must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean directoryContains(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDirectory must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean directoryContains(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
							"callChain":"$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"parameter_0_in_method_directoryContains is null"
							],
							"keyPreCondition":"parameter_0_in_method_directoryContains is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean directoryContains(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3) -> $z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter_0_in_method_directoryContains is not null",
								"parameter_1_in_method_directoryContains is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"parameter_0_in_method_directoryContains is null"
							],
							"keyPreCondition":"parameter_0_in_method_directoryContains is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean directoryContains(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3) -> $z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_directoryContains is not null",
								"parameter_1_in_method_directoryContains is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_directoryContains is null"
							],
							"keyPreCondition":"parameter_1_in_method_directoryContains is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":2,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r16",
							"callChain":"throw $r16",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.lang.String readFileToString(java.io.File,java.nio.charset.Charset)>(r0, $r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: byte[] readFileToByteArray(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be read\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canRead()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.List readLines(java.io.File,java.nio.charset.Charset)>(r0, $r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileInputStream openInputStream(java.io.File)>(r0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>(r0, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void write(java.io.File,java.lang.CharSequence,java.nio.charset.Charset,boolean)>(r0, r1, $r3, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset,boolean)>(r1, $r3_2, r2, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>(r0, r1, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>(r0, r1, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>(r0, r1, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>(r0, r1, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>(r0, r1, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>(r0, r1, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, 0, $i0, z0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, i0, i1, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, i0, i1, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, i0, i1, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, i0, i1, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, i0, i1, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>(r0, r1, i0, i1, 0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeByteArrayToFile(java.io.File,byte[],int,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, null, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, null, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, r3, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, r3, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, r1, r2, r3, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, 0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDirectory '\\E[\\s\\S]*\\Q' could not be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $r1 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0, $z5 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.util.Collection,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void writeLines(java.io.File,java.lang.String,java.util.Collection,java.lang.String,boolean)>(r0, null, r1, r2, z0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r1, z0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z4 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete file: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":1,
							"conditions":"$z0 == 0, $z2 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QFile does not exist: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z2 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete directory \\E[\\s\\S]*\\Q.\\E",
							"method":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void deleteDirectoryOnExit(java.io.File)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void deleteDirectoryOnExit(java.io.File)>",
							"modifier":"private",
							"invokeUnit":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"callChain":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void cleanDirectoryOnExit(java.io.File)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void cleanDirectoryOnExit(java.io.File)>",
							"modifier":"private",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void cleanDirectoryOnExit(java.io.File)>",
							"modifier":"private",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void cleanDirectoryOnExit(java.io.File)>",
							"modifier":"private",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: long sizeOf(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: long sizeOf(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.math.BigInteger sizeOfAsBigInteger(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.math.BigInteger sizeOfAsBigInteger(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r7",
							"callChain":"throw $r7",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe reference file '\\E[\\s\\S]*\\Q' doesn't exist\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified reference file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(r1, $l0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"callChain":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(r1, $l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.util.Date)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified date\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.util.Date)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.util.Date)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(r1, $l0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(r1, $l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is not null",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe reference file '\\E[\\s\\S]*\\Q' doesn't exist\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified reference file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>(r1, $l0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>",
							"callChain":"$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>(r1, $l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,java.util.Date)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified date\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,java.util.Date)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,java.util.Date)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>(r1, $l0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>(r1, $l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter1 is not null",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isFileOlder(java.io.File,long)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: long checksumCRC32(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QChecksums can't be computed on directories\\E",
							"method":"<org.apache.commons.io.FileUtils: long checksumCRC32(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum)>(r1, $r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum)>(r1, $r0) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QChecksums can't be computed on directories\\E",
							"method":"<org.apache.commons.io.FileUtils: java.util.zip.Checksum checksum(java.io.File,java.util.zip.Checksum)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to delete original directory '\\E[\\s\\S]*\\Q' after copy to '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":6,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0, $z3 != 0, $z4 == 0, $z5 == 0, $z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCannot move directory: \\E[\\s\\S]*\\Q to a subdirectory of itself: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":5,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0, $z3 != 0, $z4 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is not 0"
						},
						{
							"exceptionName":"org.apache.commons.io.FileExistsException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r24",
							"callChain":"throw $r24",
							"throwUnitOrder":4,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r30",
							"callChain":"throw $r30",
							"throwUnitOrder":3,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r36",
							"callChain":"throw $r36",
							"throwUnitOrder":2,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r42",
							"callChain":"throw $r42",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r43",
							"callChain":"throw $r43",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete directory \\E[\\s\\S]*\\Q.\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":3,
							"conditions":"r0 != null, r1 != null, $z3 != 0, $z1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=\\E[\\s\\S]*\\Q]\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":2,
							"conditions":"r0 != null, r1 != null, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination directory must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r18",
							"callChain":"throw $r18",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r19",
							"callChain":"throw $r19",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to delete original directory '\\E[\\s\\S]*\\Q' after copy to '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0, $z3 != 0, $z4 == 0, $z5 == 0, $z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCannot move directory: \\E[\\s\\S]*\\Q to a subdirectory of itself: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0, $z3 != 0, $z4 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is not 0"
						},
						{
							"exceptionName":"org.apache.commons.io.FileExistsException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r24",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r24",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r42",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r42",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveDirectory is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveDirectory is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r43",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r43",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveDirectory is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveDirectory is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete directory \\E[\\s\\S]*\\Q.\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to delete original file '\\E[\\s\\S]*\\Q' after copy to '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":6,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0, $z3 == 0, $z4 != 0, $z5 != 0, $z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0, $z4 != 0, $z5 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":5,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0, $z3 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"org.apache.commons.io.FileExistsException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r16",
							"callChain":"throw $r16",
							"throwUnitOrder":4,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r22",
							"callChain":"throw $r22",
							"throwUnitOrder":3,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r28",
							"callChain":"throw $r28",
							"throwUnitOrder":2,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r34",
							"callChain":"throw $r34",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r35",
							"callChain":"throw $r35",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"parameter0 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":3,
							"conditions":"r0 != null, r1 != null, $z3 != 0, $z1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=\\E[\\s\\S]*\\Q]\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":2,
							"conditions":"r0 != null, r1 != null, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination directory must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r18",
							"callChain":"throw $r18",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r19",
							"callChain":"throw $r19",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to delete original file '\\E[\\s\\S]*\\Q' after copy to '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0, $z3 == 0, $z4 != 0, $z5 != 0, $z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0, $z4 != 0, $z5 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0, $z3 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"org.apache.commons.io.FileExistsException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r22",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r22",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r28",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r28",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r34",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r34",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r35",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r35",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":2,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z3 != 0, $z1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=\\E[\\s\\S]*\\Q]\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination directory must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r18",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r18",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to delete original file '\\E[\\s\\S]*\\Q' after copy to '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0, $z3 == 0, $z4 != 0, $z5 != 0, $z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0, $z4 != 0, $z5 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0, $z3 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"org.apache.commons.io.FileExistsException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r22",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r22",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r28",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r28",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r34",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r34",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"parameter_1_in_method_moveFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r35",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> throw $r35",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, $z6 == 0, $z3 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, $r4 == null, $z4 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveFile is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveFile is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveFile is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_moveFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>() is null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveFile is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveFile) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveFile.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z3 != 0, $z1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=\\E[\\s\\S]*\\Q]\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination directory must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r18",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r18",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to delete original directory '\\E[\\s\\S]*\\Q' after copy to '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0, $z3 != 0, $z4 == 0, $z5 == 0, $z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCannot move directory: \\E[\\s\\S]*\\Q to a subdirectory of itself: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0, $z3 != 0, $z4 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is not 0"
						},
						{
							"exceptionName":"org.apache.commons.io.FileExistsException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r24",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r24",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0, $z2 == 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0, $z1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r42",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r42",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveDirectory is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveDirectory is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r43",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> throw $r43",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.FileNotFoundException",
							"message":"\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QDestination must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveDirectory is null"
							],
							"keyPreCondition":"parameter_1_in_method_moveDirectory is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QSource must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean mkdirs()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' directory cannot be created\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r15",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r15",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z1 != 0, $z5 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' cannot be written to\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, $z7 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, $z0 == 0, $z6 != 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r32_2 != null, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q' Expected length: \\E[\\s\\S]*\\Q Actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r48",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r48",
							"throwUnitOrder":-1,
							"conditions":"$r3 == null, $b11 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>() is not null",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDestination '\\E[\\s\\S]*\\Q' exists but is a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r44",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r4, $r5, z2) -> throw $r44",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z2 == 0, r0 != null, r1 != null, $z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean exists()>() is not 0",
								"0 smaller than virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>().length",
								"parameter_4_in_method_doCopyDirectory is null",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: boolean isDirectory()>() is 0",
								"interfaceinvoke parameter_4_in_method_doCopyDirectory.<java.util.List: boolean contains(java.lang.Object)>(virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>()[i2_1].<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to delete directory \\E[\\s\\S]*\\Q.\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z2 != 0, r0 != null, $z0 != 0, $z1 != 0, $r1 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFailed to list contents of \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $r1 != null, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z2) -> staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, r0 != null, $z0 != 0, $z1 == 0, r0 != null, r1 != null, $z0 != 0, $r32_2 != null, $z0 == 0, $z1 != 0, $z7 != 0, $z5 != 0, $z6 != 0, $b11 == 0, $r3 == null, $z0 == 0, $z2 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
								"parameter0 is not null",
								"parameter_1_in_method_moveDirectory is not null",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
								"virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
								"virtualinvoke parameter_0_in_method_doCopyFile.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: long length()>() is not 0",
								"virtualinvoke parameter_1_in_method_doCopyFile.<java.io.File: boolean isDirectory()>() is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile must not be null\\E",
							"method":"<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.ByteOrderMark",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":1,
							"conditions":"r1 == null, $z0 == 0, r3 == null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter1 is not null",
								"parameter1.length is 0"
							],
							"keyPreCondition":"parameter1.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 == null, $z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init>.length is not 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r3) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init>.length is not 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r5) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init>.length is not 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32BE\", $r7) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init>.length is not 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.ByteOrderMark: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-32LE\", $r9) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.NotFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.DelegateFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FilenameFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe FilenameFilter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FilenameFilter)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe FileFilter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FileFilter)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.DirectoryFileComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.DirectoryFileComparator: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.DirectoryFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.TeeOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.TeeOutputStream: void write(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.TeeOutputStream: void write(byte[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void write(byte[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void write(byte[])>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void write(byte[])>(r1) -> virtualinvoke r1.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.TeeOutputStream: void write(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.TeeOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void write(byte[],int,int)>(r1, i0, i1)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void write(byte[],int,int)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void write(byte[],int,int)>(r1, i0, i1) -> virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.TeeOutputStream: void write(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.TeeOutputStream: void write(int)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void write(int)>(i0)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void write(int)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void write(int)>(i0) -> virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.TeeOutputStream: void flush()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.TeeOutputStream: void flush()>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void flush()>()",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void flush()>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void flush()>() -> virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.ReverseComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.WildcardFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard array must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.lang.String[])>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.util.List)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard list must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.util.List)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.serialization.RegexpClassNameMatcher",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull pattern\\E",
							"method":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>($r2)",
							"invokedMethod":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull pattern\\E",
							"method":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.EmptyFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.EmptyFileFilter: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.EmptyFileFilter: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.LastModifiedFileComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.LastModifiedFileComparator: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.LastModifiedFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.OrFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 == null, r3 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.NullReader",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.NullReader: void mark(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QMark not supported\\E",
							"method":"<org.apache.commons.io.input.NullReader: void mark(int)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullReader: int read()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QRead after end of file\\E",
							"method":"<org.apache.commons.io.input.NullReader: int read()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullReader: int read()>",
							"modifier":"public",
							"invokeUnit":"$i6 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>()",
							"invokedMethod":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"callChain":"$i6 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long position> cmp @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long size> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullReader: int read(char[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QRead after end of file\\E",
							"method":"<org.apache.commons.io.input.NullReader: int read(char[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullReader: int read(char[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.NullReader: int read(char[],int,int)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullReader: int read(char[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullReader: int read(char[],int,int)>(r1, 0, $i0) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullReader: int read(char[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullReader: int read(char[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.NullReader: int read(char[],int,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullReader: int read(char[],int,int)>(r1, 0, $i0) -> $i16 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long position> cmp @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long size> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullReader: int read(char[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QRead after end of file\\E",
							"method":"<org.apache.commons.io.input.NullReader: int read(char[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullReader: int read(char[],int,int)>",
							"modifier":"public",
							"invokeUnit":"$i16 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>()",
							"invokedMethod":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"callChain":"$i16 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long position> cmp @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long size> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullReader: void reset()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QMarked position [\\E[\\s\\S]*\\Q] is no longer valid - passed the read limit [\\E[\\s\\S]*\\Q]\\E",
							"method":"<org.apache.commons.io.input.NullReader: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":2,
							"conditions":"$z0 != 0, $i10 >= 0, $i11 <= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is not 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long mark> cmp 0L larger or equal 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long position> cmp @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long mark> + @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long readlimit> larger than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long position> cmp @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long mark> + @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long readlimit> larger than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QNo position has been marked\\E",
							"method":"<org.apache.commons.io.input.NullReader: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r12",
							"callChain":"throw $r12",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, $i10 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is not 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long mark> cmp 0L smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long mark> cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QMark not supported\\E",
							"method":"<org.apache.commons.io.input.NullReader: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullReader: long skip(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSkip after end of file\\E",
							"method":"<org.apache.commons.io.input.NullReader: long skip(long)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullReader: long skip(long)>",
							"modifier":"public",
							"invokeUnit":"$i13 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>()",
							"invokedMethod":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"callChain":"$i13 = specialinvoke r0.<org.apache.commons.io.input.NullReader: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long position> cmp @this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: long size> is 0",
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullReader: int doEndOfFile()>",
							"modifier":"private",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean throwEofException> is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.ReversedLinesFileReader",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QEncoding \\E[\\s\\S]*\\Q is not supported yet (feel free to submit a patch)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, $r2)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"throwUnit":"throw $r35",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, $r2) -> throw $r35",
							"throwUnitOrder":-1,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						},
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QFor UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, $r2)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"throwUnit":"throw $r33",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, $r2) -> throw $r33",
							"throwUnitOrder":-1,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QEncoding \\E[\\s\\S]*\\Q is not supported yet (feel free to submit a patch)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, r2)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"throwUnit":"throw $r35",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, r2) -> throw $r35",
							"throwUnitOrder":-1,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						},
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QFor UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, r2)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"throwUnit":"throw $r33",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, 4096, r2) -> throw $r33",
							"throwUnitOrder":-1,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter1) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QEncoding \\E[\\s\\S]*\\Q is not supported yet (feel free to submit a patch)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"modifier":"public",
							"throwUnit":"throw $r35",
							"callChain":"throw $r35",
							"throwUnitOrder":1,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						},
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QFor UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"modifier":"public",
							"throwUnit":"throw $r33",
							"callChain":"throw $r33",
							"throwUnitOrder":0,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter2) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QEncoding \\E[\\s\\S]*\\Q is not supported yet (feel free to submit a patch)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, i0, $r3)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"throwUnit":"throw $r35",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, i0, $r3) -> throw $r35",
							"throwUnitOrder":-1,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						},
						{
							"exceptionName":"java.io.UnsupportedEncodingException",
							"message":"\\QFor UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, i0, $r3)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"throwUnit":"throw $r33",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader: void <init>(java.io.File,int,java.nio.charset.Charset)>(r1, i0, $r3) -> throw $r33",
							"throwUnitOrder":-1,
							"conditions":"$b1 != 0, $r2 != $r4, $r2 == $r5, $r2 == $r7, $r2 == $r8, $r2 == $r9, $r2 != $r10, $r2 == $r11, $r2 != $r12, $r2 != $r13",
							"preConditions":[
								"virtualinvoke virtualinvoke staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>).<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>().<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() cmpl 1.0F is not 0",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"Shift_JIS\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"windows-31j\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-949\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"gbk\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"x-windows-950\")",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is not <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>",
								"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(parameter_2_in_method_<init>) is <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
							"modifier":"public",
							"invokeUnit":"r7 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"callChain":"r7 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r1) -> $r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"i10_1 <= $i12, z0 != 0, $i2 <= 0, i7 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is not 0",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
							"modifier":"public",
							"invokeUnit":"r7 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"callChain":"r7 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r1) -> $r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"i10_1 <= $i12, z0 != 0, i10_1 >= $i9, $i2 <= 0, i7 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger or equal staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: int access$600(org.apache.commons.io.input.ReversedLinesFileReader)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader this$0>)",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected leftover of the last block: leftOverOfThisFilePart=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r3)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r3) -> $r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>() -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$i0 <= $i8, $i9 <= 0, $r1 == null, i10_1 <= $i12, z0 != 0, $i2 <= 0, i7 >= 0, i10_1 >= $i9",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: long no> cmp 1L smaller or equal 0",
								"staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>(@this: org.apache.commons.io.input.ReversedLinesFileReader.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>) is null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 larger or equal 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is not null"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCurrent currentLastCharPos unexpectedly positive... last readLine() should have returned something! currentLastCharPos=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r3)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r3) -> $r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$i0 <= $i8, i10_1 <= $i12, z0 != 0, $i2 <= 0, i7 >= 0, i10_1 >= $i9",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>(@this: org.apache.commons.io.input.ReversedLinesFileReader.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>) is null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 larger or equal 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCount of requested bytes and actually read bytes don't match\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
							"modifier":"public",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r3)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r3) -> $r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>() -> specialinvoke $r22.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>($r13, $l4, $i5, $r14) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i13 <= 0, $i9 == i1, i10_1 <= $i12, z0 != 0, $i2 <= 0, i7 >= 0, i10_1 >= $i9",
							"preConditions":[
								"parameter_1_in_method_<init> larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: long no> cmp 1L larger than 0",
								"staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>(@this: org.apache.commons.io.input.ReversedLinesFileReader.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>) is null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 larger or equal 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>"
							],
							"keyPreCondition":"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
							"modifier":"public",
							"invokeUnit":"r7_2 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r6)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"callChain":"r7_2 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r6) -> $r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"i10_1 <= $i12, z0 != 0, $i2 <= 0, i7 >= 0, i10_1 >= $i9, $i0 <= $i8, $i9 <= 0, $r1 == null, $i13 <= 0, $i9 == i1",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is not 0",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>(@this: org.apache.commons.io.input.ReversedLinesFileReader.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>) is null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart> is not null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader: java.lang.String readLine()>",
							"modifier":"public",
							"invokeUnit":"r7_2 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r6)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"callChain":"r7_2 = staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>($r6) -> $r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"i10_1 <= $i12, z0 != 0, i10_1 >= $i9, $i2 <= 0, i7 >= 0, $i0 <= $i8, $i9 <= 0, $r1 == null, $i13 <= 0, $i9 == i1",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger or equal staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: int access$600(org.apache.commons.io.input.ReversedLinesFileReader)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader this$0>)",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>(@this: org.apache.commons.io.input.ReversedLinesFileReader.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart>) is null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader.<org.apache.commons.io.input.ReversedLinesFileReader: org.apache.commons.io.input.ReversedLinesFileReader$FilePart currentFilePart> is not null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is null",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.ByteArrayOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter0 smaller than 0"
							],
							"keyPreCondition":"parameter0 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ByteArrayOutputStream: void write(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"i0 < 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"i0 < 0, i0 > $i1",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 larger than parameter0.length"
							],
							"keyPreCondition":"parameter1 larger than parameter0.length"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"i0 < 0, i0 > $i1, i2 < 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 smaller or equal parameter0.length",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"i0 < 0, i0 > $i1, i2 < 0, $i4 > $i3",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 smaller or equal parameter0.length",
								"parameter2 larger or equal 0",
								"parameter1 + parameter2 larger than parameter0.length"
							],
							"keyPreCondition":"parameter1 + parameter2 larger than parameter0.length"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"i0 < 0, i0 > $i1, i2 < 0, $i4 > $i3, $i5 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 smaller or equal parameter0.length",
								"parameter2 larger or equal 0",
								"parameter1 + parameter2 smaller or equal parameter0.length",
								"parameter1 + parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter1 + parameter2 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>(r0, 1024)",
							"invokedMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>(r0, 1024) -> specialinvoke $r0.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_1_in_method_toBufferedInputStream smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_toBufferedInputStream smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i0)",
							"invokedMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.FileCleaningTracker",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe file must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>($r2, r3, r4) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe file must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>($r2, r3, r4)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>($r2, r3, r4) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe path must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r2, r3) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe path must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r2, r3)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r2, r3) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"private",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.Tailer",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.Tailer: void run()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.input.Tailer: void run()>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>($r1, l5_3)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>($r1, l5_3) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_isFileNewer is null"
							],
							"keyPreCondition":"parameter_0_in_method_isFileNewer is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.FileWriterWithEncoding",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
							"invokedMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QEncoding is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"modifier":"private",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
							"modifier":"private",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.AgeFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.AgeFileFilter: boolean accept(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo specified file\\E",
							"method":"<org.apache.commons.io.filefilter.AgeFileFilter: boolean accept(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(r0, $l0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(r0, $l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.CharSequenceInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBuffer size \\E[\\s\\S]*\\Q is less than maxBytesPerChar \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>",
							"modifier":"public",
							"throwUnit":"throw $r20",
							"callChain":"throw $r20",
							"throwUnitOrder":0,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter2 cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
							],
							"keyPreCondition":"parameter2 cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.lang.String,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBuffer size \\E[\\s\\S]*\\Q is less than maxBytesPerChar \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.lang.String,int)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>(r1, $r3, i0)",
							"invokedMethod":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>",
							"throwUnit":"throw $r20",
							"throwUnitInMethod":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>(r1, $r3, i0) -> throw $r20",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter2 cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
							],
							"keyPreCondition":"parameter2 cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBuffer size \\E[\\s\\S]*\\Q is less than maxBytesPerChar \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>(r1, r2, 2048)",
							"invokedMethod":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>",
							"throwUnit":"throw $r20",
							"throwUnitInMethod":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>(r1, r2, 2048) -> throw $r20",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter_2_in_method_<init> cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init> cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBuffer size \\E[\\s\\S]*\\Q is less than maxBytesPerChar \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.lang.String,int)>(r1, r2, 2048)",
							"invokedMethod":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.lang.String,int)>",
							"throwUnit":"throw $r20",
							"throwUnitInMethod":"<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.lang.String,int)>(r1, r2, 2048) -> specialinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: void <init>(java.lang.CharSequence,java.nio.charset.Charset,int)>(r1, $r3, i0) -> throw $r20",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter_2_in_method_<init> cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init> cmpg virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.charset.CharsetEncoder encoder>.<java.nio.charset.CharsetEncoder: float maxBytesPerChar()>() smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r22",
							"callChain":"throw $r22",
							"throwUnitOrder":1,
							"conditions":"r0 != null, i6 < 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r22",
							"callChain":"throw $r22",
							"throwUnitOrder":1,
							"conditions":"r0 != null, i6 < 0, $i2 <= $i1",
							"preConditions":[
								"parameter0 is not null",
								"parameter2 larger or equal 0",
								"parameter1 + parameter2 larger than parameter0.length"
							],
							"keyPreCondition":"parameter1 + parameter2 larger than parameter0.length"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QByte array is null\\E",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r20",
							"callChain":"throw $r20",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r22",
							"throwUnitInMethod":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r22",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i6 < 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_2_in_method_read smaller than 0"
							],
							"keyPreCondition":"parameter_2_in_method_read smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r22",
							"throwUnitInMethod":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r22",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i6 < 0, $i2 <= $i1",
							"preConditions":[
								"parameter0 is not null",
								"parameter_2_in_method_read larger or equal 0",
								"parameter_1_in_method_read + parameter_2_in_method_read larger than parameter0.length"
							],
							"keyPreCondition":"parameter_1_in_method_read + parameter_2_in_method_read larger than parameter0.length"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QByte array is null\\E",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r20",
							"throwUnitInMethod":"<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r20",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceInputStream: void reset()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected CharBuffer postion: actual=\\E[\\s\\S]*\\Q expected=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceInputStream: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r20",
							"callChain":"throw $r20",
							"throwUnitOrder":0,
							"conditions":"$i0 == $i10, $i2 == $i3",
							"preConditions":[
								"@this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int mark_cbuf> is not -1",
								"virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.CharBuffer cbuf>.<java.nio.CharBuffer: int position()>() is not @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int mark_cbuf>"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.CharBuffer cbuf>.<java.nio.CharBuffer: int position()>() is not @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int mark_cbuf>"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.ObservableInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.ObservableInputStream: int read(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ObservableInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>(r3_2)",
							"invokedMethod":"<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>(r3_2) -> virtualinvoke r4.<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>(r5) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"null is not null",
								"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ObservableInputStream: int read(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ObservableInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>(r3_2)",
							"invokedMethod":"<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>(r3_2) -> virtualinvoke r4.<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>(r5) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"null is not null",
								"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>",
							"modifier":"protected",
							"invokeUnit":"virtualinvoke r4.<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>(r5)",
							"invokedMethod":"<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>",
							"callChain":"virtualinvoke r4.<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>(r5) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ObservableInputStream: void close()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ObservableInputStream: void close()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>(r2_2)",
							"invokedMethod":"<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.input.ObservableInputStream: void noteError(java.io.IOException)>(r2_2) -> virtualinvoke r4.<org.apache.commons.io.input.ObservableInputStream$Observer: void error(java.io.IOException)>(r5) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"null is not null",
								"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.input.ObservableInputStream.<org.apache.commons.io.input.ObservableInputStream: java.util.List getObservers()>().<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.CanReadFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.CanReadFileFilter: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.CanReadFileFilter: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.CanReadFileFilter: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r3.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r5, $r4)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r3.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r5, $r4) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.CanReadFileFilter: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r3.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r5, $r4)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r3.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r5, $r4) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, r3 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.serialization.ValidatingObjectInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.InvalidClassException",
							"message":"\\QClass name not accepted: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>",
							"modifier":"private",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>(r5)",
							"invokedMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
							"throwUnit":"throw $r0",
							"throwUnitInMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>(r5) -> throw $r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"0 is 0"
							],
							"keyPreCondition":"0 is 0"
						},
						{
							"exceptionName":"java.io.InvalidClassException",
							"message":"\\QClass name not accepted: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>",
							"modifier":"private",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>(r5)",
							"invokedMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
							"throwUnit":"throw $r0",
							"throwUnitInMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>(r5) -> throw $r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"interfaceinvoke interfaceinvoke interfaceinvoke @this: org.apache.commons.io.serialization.ValidatingObjectInputStream.<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.util.List rejectMatchers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>().<org.apache.commons.io.serialization.ClassNameMatcher: boolean matches(java.lang.String)>(parameter0) is not 0",
								"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.serialization.ValidatingObjectInputStream.<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.util.List rejectMatchers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.serialization.ValidatingObjectInputStream.<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.util.List rejectMatchers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.io.InvalidClassException",
							"message":"\\QClass name not accepted: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
							"modifier":"protected",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.io.InvalidClassException",
							"message":"\\QClass name not accepted: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>",
							"modifier":"protected",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>($r2)",
							"invokedMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>",
							"throwUnit":"throw $r0",
							"throwUnitInMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>($r2) -> virtualinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>(r5) -> throw $r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"0 is 0"
							],
							"keyPreCondition":"0 is 0"
						},
						{
							"exceptionName":"java.io.InvalidClassException",
							"message":"\\QClass name not accepted: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>",
							"modifier":"protected",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>($r2)",
							"invokedMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>",
							"throwUnit":"throw $r0",
							"throwUnitInMethod":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void validateClassName(java.lang.String)>($r2) -> virtualinvoke r0.<org.apache.commons.io.serialization.ValidatingObjectInputStream: void invalidClassNameFound(java.lang.String)>(r5) -> throw $r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"interfaceinvoke interfaceinvoke interfaceinvoke @this: org.apache.commons.io.serialization.ValidatingObjectInputStream.<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.util.List rejectMatchers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>().<org.apache.commons.io.serialization.ClassNameMatcher: boolean matches(java.lang.String)>(parameter_0_in_method_validateClassName) is not 0",
								"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.serialization.ValidatingObjectInputStream.<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.util.List rejectMatchers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.serialization.ValidatingObjectInputStream.<org.apache.commons.io.serialization.ValidatingObjectInputStream: java.util.List rejectMatchers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: org.apache.commons.io.serialization.ValidatingObjectInputStream accept(java.util.regex.Pattern)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull pattern\\E",
							"method":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: org.apache.commons.io.serialization.ValidatingObjectInputStream accept(java.util.regex.Pattern)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>(r2)",
							"invokedMethod":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>(r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: org.apache.commons.io.serialization.ValidatingObjectInputStream reject(java.util.regex.Pattern)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull pattern\\E",
							"method":"<org.apache.commons.io.serialization.ValidatingObjectInputStream: org.apache.commons.io.serialization.ValidatingObjectInputStream reject(java.util.regex.Pattern)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>(r2)",
							"invokedMethod":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.serialization.RegexpClassNameMatcher: void <init>(java.util.regex.Pattern)>(r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.SizeFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe size must be non-negative\\E",
							"method":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>(l0, 1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>(l0, 1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter0 smaller than 0"
							],
							"keyPreCondition":"parameter0 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe size must be non-negative\\E",
							"method":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter0 smaller than 0"
							],
							"keyPreCondition":"parameter0 smaller than 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.NullInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.NullInputStream: void mark(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QMark not supported\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: void mark(int)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullInputStream: int read()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QRead after end of file\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: int read()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullInputStream: int read()>",
							"modifier":"public",
							"invokeUnit":"$i6 = specialinvoke r0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>()",
							"invokedMethod":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"callChain":"$i6 = specialinvoke r0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long position> cmp @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long size> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullInputStream: int read(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QRead after end of file\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> $i16 = specialinvoke r0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long position> cmp @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long size> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QRead after end of file\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"$i16 = specialinvoke r0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>()",
							"invokedMethod":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"callChain":"$i16 = specialinvoke r0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long position> cmp @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long size> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullInputStream: void reset()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QMarked position [\\E[\\s\\S]*\\Q] is no longer valid - passed the read limit [\\E[\\s\\S]*\\Q]\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":2,
							"conditions":"$z0 != 0, $i10 >= 0, $i11 <= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is not 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long mark> cmp 0L larger or equal 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long position> cmp @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long mark> + @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long readlimit> larger than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long position> cmp @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long mark> + @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long readlimit> larger than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QNo position has been marked\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r12",
							"callChain":"throw $r12",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, $i10 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is not 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long mark> cmp 0L smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long mark> cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QMark not supported\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullInputStream: long skip(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QSkip after end of file\\E",
							"method":"<org.apache.commons.io.input.NullInputStream: long skip(long)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is not 0"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullInputStream: long skip(long)>",
							"modifier":"public",
							"invokeUnit":"$i13 = specialinvoke r0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>()",
							"invokedMethod":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"callChain":"$i13 = specialinvoke r0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean eof> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long position> cmp @this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: long size> is 0",
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>",
							"modifier":"private",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.LockableFileWriter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>($r1, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter_0_in_method_<init>.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r2, z0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, r2, 0, null) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(r1, r2, 0, null) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r12",
							"callChain":"throw $r12",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>()",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile specified is a directory\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>($r3) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>() -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z0 == 0, $z1 != 0, $z2 != 0, $z3 != 0, $z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: boolean isDirectory()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean canWrite()>() is not 0",
								"virtualinvoke parameter_0_in_method_testLockDir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4)",
							"invokedMethod":"<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(r1, $r3, z0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r13) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke virtualinvoke parameter0.<java.io.File: java.io.File getAbsoluteFile()>().<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not write to lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean canWrite()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCould not find lockDir: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>",
							"modifier":"private",
							"throwUnit":"throw $r7",
							"callChain":"throw $r7",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCan't write file, lock \\E[\\s\\S]*\\Q exists\\E",
							"method":"<org.apache.commons.io.output.LockableFileWriter: void createLock()>",
							"modifier":"private",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.LockableFileWriter.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>.<java.io.File: boolean createNewFile()>() is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.RegexFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPattern is missing\\E",
							"method":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPattern is missing\\E",
							"method":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.lang.String,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPattern is missing\\E",
							"method":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.lang.String,int)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.util.regex.Pattern)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPattern is missing\\E",
							"method":"<org.apache.commons.io.filefilter.RegexFileFilter: void <init>(java.util.regex.Pattern)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.PrefixFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe prefix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe prefix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of prefixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of prefixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe list of prefixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe list of prefixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.DefaultFileComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.DefaultFileComparator: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.DefaultFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.AndFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r1 == null, r3 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.ExtensionFileComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5)",
							"invokedMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkCompareTo is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5)",
							"invokedMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is not null",
								"parameter_1_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkCompareTo is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.lang.Object,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkCompareTo is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is not null",
								"parameter_1_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkCompareTo is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.ExtensionFileComparator: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.ExtensionFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.ExtensionFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r5.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r6)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r5.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r6) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.ExtensionFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r9.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r10)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r9.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r10) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.ClosedOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.ClosedOutputStream: void write(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\Qwrite(\\E[\\s\\S]*\\Q) failed: stream is closed\\E",
							"method":"<org.apache.commons.io.output.ClosedOutputStream: void write(int)>",
							"modifier":"public",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ClosedOutputStream: void flush()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\Qflush() failed: stream is closed\\E",
							"method":"<org.apache.commons.io.output.ClosedOutputStream: void flush()>",
							"modifier":"public",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.BrokenOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.BrokenOutputStream: void write(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.BrokenOutputStream: void write(int)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.BrokenOutputStream: void flush()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.BrokenOutputStream: void flush()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.BrokenOutputStream: void close()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.BrokenOutputStream: void close()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.TaggedIOException",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.TaggedIOException: boolean isTaggedWith(java.lang.Throwable,java.lang.Object)>(parameter0, parameter1) is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.TaggedIOException: boolean isTaggedWith(java.lang.Throwable,java.lang.Object)>(parameter0, parameter1) is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.CanWriteFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.CanWriteFileFilter: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.CanWriteFileFilter: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.BrokenInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.BrokenInputStream: int read()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.BrokenInputStream: int read()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.BrokenInputStream: int available()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.BrokenInputStream: int available()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.BrokenInputStream: long skip(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.BrokenInputStream: long skip(long)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.BrokenInputStream: void reset()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.BrokenInputStream: void reset()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.BrokenInputStream: void close()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.BrokenInputStream: void close()>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.FileDeleteStrategy",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.FileDeleteStrategy: void delete(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QDeletion failed: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileDeleteStrategy: void delete(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke @this: org.apache.commons.io.FileDeleteStrategy.<org.apache.commons.io.FileDeleteStrategy: boolean doDelete(java.io.File)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.FileDeleteStrategy.<org.apache.commons.io.FileDeleteStrategy: boolean doDelete(java.io.File)>(parameter0) is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.FileSystemUtils",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QException caught when determining operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnsupported operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be null\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_3_in_method_freeSpaceOS).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QException caught when determining operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnsupported operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be null\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_1_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QException caught when determining operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnsupported operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be null\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter1).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QException caught when determining operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null"
							],
							"keyPreCondition":"parameter_0_in_method_freeSpaceKb is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnsupported operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null"
							],
							"keyPreCondition":"parameter_0_in_method_freeSpaceKb is not null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be null\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is null"
							],
							"keyPreCondition":"parameter_0_in_method_freeSpaceKb is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q-1L\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int length()>()",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q-1L\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int length()>()",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter_0_in_method_freeSpaceKb).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QException caught when determining operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null"
							],
							"keyPreCondition":"parameter_0_in_method_freeSpaceKb is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnsupported operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null"
							],
							"keyPreCondition":"parameter_0_in_method_freeSpaceKb is not null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be null\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is null"
							],
							"keyPreCondition":"parameter_0_in_method_freeSpaceKb is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter0).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int length()>()",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int length()>()",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> $l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter_0_in_method_freeSpaceKb, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter0).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter_0_in_method_freeSpaceKb is not null",
								"parameter_2_in_method_freeSpaceOS is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QException caught when determining operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":2,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnsupported operating system\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null"
							],
							"keyPreCondition":"parameter0 is not null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be null\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 1, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r19",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r19",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r36",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> throw $r36",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter0 is not null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>(r0, z0, 0, l1) -> $l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter2 is 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l5_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter2 is 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r27",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r27",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter2 is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l4 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>(r0, l1) -> $l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter3).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"parameter0 is not null",
								"parameter2 is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return any info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"throwUnit":"throw $r27",
							"callChain":"throw $r27",
							"throwUnitOrder":1,
							"conditions":"$r1 != null, i6_1 < 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 smaller than 0"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Q@parameter@0 \\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"throwUnit":"throw $r23",
							"callChain":"throw $r23",
							"throwUnitOrder":0,
							"conditions":"$r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r22 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r17, 2147483647, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"callChain":"$l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> throw $r13",
							"throwUnitOrder":-1,
							"conditions":"i10_3 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,long)>",
							"modifier":"default",
							"invokeUnit":"$l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>(r10, r16_2) -> $l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, i2_1 >= $i0, $c1 != 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_parseDir.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(parameter0, 0) is not null",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1 larger or equal 0",
								"virtualinvoke interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: java.lang.Object get(int)>(interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 2147483647, parameter1).<java.util.List: int size()>() - 1).<java.lang.String: int length()>() larger than 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line 'dir /-c' did not return valid info for path '\\E[\\s\\S]*\\Q'\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r13",
							"callChain":"throw $r13",
							"throwUnitOrder":0,
							"conditions":"i10_3 >= 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: int length()>() - 1 smaller than 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: int length()>() - 1 smaller than 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r25",
							"throwUnitOrder":-1,
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: int length()>() - 1 larger or equal 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: int length()>() - 1 larger or equal 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long parseDir(java.lang.String,java.lang.String)>",
							"modifier":"default",
							"invokeUnit":"$l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l2 = virtualinvoke r3.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r4, r5) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: int length()>() - 1 larger or equal 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":2,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
							],
							"keyPreCondition":"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is not 1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":2,
							"conditions":"$z0 == 0, $i2 >= 2, $i3 >= 4, $i5 != 1, $i6 < 3, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() larger or equal 2",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() smaller than 4",
								"virtualinvoke new java.util.StringTokenizer.<java.util.StringTokenizer: int countTokens()>() is 1",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 3"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 3"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return info as expected for path '\\E[\\s\\S]*\\Q'- response was \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"throwUnit":"throw $r19",
							"callChain":"throw $r19",
							"throwUnitOrder":1,
							"conditions":"$z0 == 0, $i2 >= 2, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 2"
							],
							"keyPreCondition":"interfaceinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>(newarray (java.lang.String)[3], 3, parameter3).<java.util.List: int size()>() smaller than 2"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QPath must not be empty\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"throwUnit":"throw $r36",
							"callChain":"throw $r36",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r30",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r30",
							"throwUnitOrder":-1,
							"preConditions":[
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"callChain":"$r3 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>($r38_2, 3, l1) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter_1_in_method_performCommand",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long freeSpaceUnix(java.lang.String,boolean,boolean,long)>",
							"modifier":"default",
							"invokeUnit":"$l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0)",
							"invokedMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"callChain":"$l4 = virtualinvoke r2.<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>($r7, r0) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0, r43_1 == null, $i1 == 0, $z0 == 0, $i3 >= i4",
							"preConditions":[
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter_0_in_method_performCommand).<java.lang.Process: int exitValue()>() is not 0",
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter_0_in_method_parseBytes) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not return numeric data as expected for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r25",
							"callChain":"throw $r25",
							"throwUnitOrder":1,
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.NumberFormatException is caught."
							]
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line '\\E[\\s\\S]*\\Q' did not find free space in response for path '\\E[\\s\\S]*\\Q'- check path is valid\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: long parseBytes(java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r23",
							"callChain":"throw $r23",
							"throwUnitOrder":0,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter0) cmp 0L smaller than 0"
							],
							"keyPreCondition":"staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(parameter0) cmp 0L smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line threw an InterruptedException for command \\E[\\s\\S]*\\Q timeout=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"modifier":"default",
							"throwUnit":"throw $r30",
							"callChain":"throw $r30",
							"throwUnitOrder":2,
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.InterruptedException is caught."
							]
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":1,
							"conditions":"r43_1 == null, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter0).<java.lang.Process: int exitValue()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":0,
							"conditions":"r43_1 == null, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is null",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter0).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter0).<java.lang.Process: int exitValue()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line did not return any info for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":1,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0, $z0 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter1",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter0).<java.lang.Process: int exitValue()>() is 0",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"interfaceinvoke new java.util.ArrayList.<java.util.List: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QCommand line returned OS error code '\\E[\\s\\S]*\\Q' for command \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.FileSystemUtils: java.util.List performCommand(java.lang.String[],int,long)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":0,
							"conditions":"r43_1 == null, $i3 >= i4, $i1 == 0",
							"preConditions":[
								"virtualinvoke new java.io.BufferedReader.<java.io.BufferedReader: java.lang.String readLine()>() is not null",
								"interfaceinvoke new java.util.ArrayList.<java.util.List: int size()>() larger or equal parameter1",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter0).<java.lang.Process: int exitValue()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.FileSystemUtils.<org.apache.commons.io.FileSystemUtils: java.lang.Process openProcess(java.lang.String[])>(parameter0).<java.lang.Process: int exitValue()>() is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileSystemUtils: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\Qos.name not found\\E",
							"method":"<org.apache.commons.io.FileSystemUtils: void <clinit>()>",
							"modifier":"default",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"$r1 != null",
							"preConditions":[
								"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\") is null"
							],
							"keyPreCondition":"staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"os.name\") is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.WindowsLineEndingInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.WindowsLineEndingInputStream: void mark(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QMark not supported\\E",
							"method":"<org.apache.commons.io.input.WindowsLineEndingInputStream: void mark(int)>",
							"modifier":"public",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.monitor.FileAlterationObserver",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>($r1)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>($r1) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke $r1.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r2) -> specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot directory is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>($r1)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>($r1) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, $r3 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot entry is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>($r1)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>($r1) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>($r1, r3)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>($r1, r3) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke $r1.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r2) -> specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot directory is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>($r1, r3)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>($r1, r3) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, $r3 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot entry is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>($r1, r3)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>($r1, r3) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> specialinvoke $r1.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r2) -> specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot directory is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, $r3 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot entry is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.lang.String,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke $r1.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r2) -> specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot directory is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, $r3 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot entry is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(r1, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke $r1.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r2) -> specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot directory is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, $r3 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot entry is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(r1, r2, null) -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r2)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(r2) -> specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot directory is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, $r3 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter0 is not null",
								"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot entry is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r12",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>($r1, r3, r4) -> throw $r12",
							"throwUnitOrder":-1,
							"conditions":"r2 != null, r1 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot directory is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"protected",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":1,
							"conditions":"r2 != null, $r3 != null",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
							],
							"keyPreCondition":"virtualinvoke parameter0.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QRoot entry is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>",
							"modifier":"protected",
							"throwUnit":"throw $r12",
							"callChain":"throw $r12",
							"throwUnitOrder":0,
							"conditions":"r2 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r9, $r10, $r11)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r9, $r10, $r11) -> $r6 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r5) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is 0",
								"virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: boolean isExists()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r9, $r10, $r11)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r9, $r10, $r11) -> $r22 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r21) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_1_in_method_checkAndNotify.length",
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(virtualinvoke parameter_1_in_method_checkAndNotify[i9_1].<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>(), parameter_2_in_method_checkAndNotify[i8_2]) larger than 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is 0",
								"virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: boolean isExists()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r13, $r14, $r15)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r13, $r14, $r15) -> $r6 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r5) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r13, $r14, $r15)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r13, $r14, $r15) -> $r22 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r21) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_1_in_method_checkAndNotify.length",
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(virtualinvoke parameter_1_in_method_checkAndNotify[i9_1].<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>(), parameter_2_in_method_checkAndNotify[i8_2]) larger than 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>",
							"modifier":"private",
							"invokeUnit":"$r6 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r5)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"$r6 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r5) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter2.length",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>",
							"modifier":"private",
							"invokeUnit":"$r22 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r21)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"$r22 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r21) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter1.length",
								"0 smaller than parameter2.length",
								"interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(virtualinvoke parameter1[i9_1].<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>(), parameter2[i8_2]) larger than 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"modifier":"private",
							"invokeUnit":"$r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"$r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.CountingInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.CountingInputStream: int getCount()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.ArithmeticException",
							"message":"\\QThe byte count \\E[\\s\\S]*\\Q is too large to be converted to an int\\E",
							"method":"<org.apache.commons.io.input.CountingInputStream: int getCount()>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"$i3 <= 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.input.CountingInputStream.<org.apache.commons.io.input.CountingInputStream: long getByteCount()>() cmp 2147483647L larger than 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.input.CountingInputStream.<org.apache.commons.io.input.CountingInputStream: long getByteCount()>() cmp 2147483647L larger than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CountingInputStream: int resetCount()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.ArithmeticException",
							"message":"\\QThe byte count \\E[\\s\\S]*\\Q is too large to be converted to an int\\E",
							"method":"<org.apache.commons.io.input.CountingInputStream: int resetCount()>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"$i3 <= 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.input.CountingInputStream.<org.apache.commons.io.input.CountingInputStream: long resetByteCount()>() cmp 2147483647L larger than 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.input.CountingInputStream.<org.apache.commons.io.input.CountingInputStream: long resetByteCount()>() cmp 2147483647L larger than 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.LineIterator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QReader must not be null\\E",
							"method":"<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.LineIterator: boolean hasNext()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.LineIterator: boolean hasNext()>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"preConditions":[
								"This is a rethrow exception after an exception with type java.io.IOException is caught."
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.LineIterator: java.lang.String next()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.util.NoSuchElementException",
							"message":"\\QNo more lines\\E",
							"method":"<org.apache.commons.io.LineIterator: java.lang.String next()>",
							"modifier":"public",
							"invokeUnit":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String nextLine()>()",
							"invokedMethod":"<org.apache.commons.io.LineIterator: java.lang.String nextLine()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: java.lang.String nextLine()>",
							"callChain":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String nextLine()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.LineIterator.<org.apache.commons.io.LineIterator: boolean hasNext()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.LineIterator.<org.apache.commons.io.LineIterator: boolean hasNext()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.LineIterator: java.lang.String next()>",
							"modifier":"public",
							"invokeUnit":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String nextLine()>()",
							"invokedMethod":"<org.apache.commons.io.LineIterator: java.lang.String nextLine()>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: boolean hasNext()>",
							"callChain":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String nextLine()>() -> $z0 = virtualinvoke r0.<org.apache.commons.io.LineIterator: boolean hasNext()>() -> throw $r5",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.LineIterator: java.lang.String nextLine()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.util.NoSuchElementException",
							"message":"\\QNo more lines\\E",
							"method":"<org.apache.commons.io.LineIterator: java.lang.String nextLine()>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.LineIterator.<org.apache.commons.io.LineIterator: boolean hasNext()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.LineIterator.<org.apache.commons.io.LineIterator: boolean hasNext()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.LineIterator: java.lang.String nextLine()>",
							"modifier":"public",
							"invokeUnit":"$z0 = virtualinvoke r0.<org.apache.commons.io.LineIterator: boolean hasNext()>()",
							"invokedMethod":"<org.apache.commons.io.LineIterator: boolean hasNext()>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: boolean hasNext()>",
							"callChain":"$z0 = virtualinvoke r0.<org.apache.commons.io.LineIterator: boolean hasNext()>() -> throw $r5",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.LineIterator: void remove()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QRemove unsupported on LineIterator\\E",
							"method":"<org.apache.commons.io.LineIterator: void remove()>",
							"modifier":"public",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.LineIterator: java.lang.Object next()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.util.NoSuchElementException",
							"message":"\\QNo more lines\\E",
							"method":"<org.apache.commons.io.LineIterator: java.lang.Object next()>",
							"modifier":"public",
							"invokeUnit":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String next()>()",
							"invokedMethod":"<org.apache.commons.io.LineIterator: java.lang.String next()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: java.lang.String nextLine()>",
							"callChain":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String next()>() -> $r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String nextLine()>() -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.LineIterator.<org.apache.commons.io.LineIterator: boolean hasNext()>() is 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.LineIterator.<org.apache.commons.io.LineIterator: boolean hasNext()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.LineIterator: java.lang.Object next()>",
							"modifier":"public",
							"invokeUnit":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String next()>()",
							"invokedMethod":"<org.apache.commons.io.LineIterator: java.lang.String next()>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: boolean hasNext()>",
							"callChain":"$r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String next()>() -> $r1 = virtualinvoke r0.<org.apache.commons.io.LineIterator: java.lang.String nextLine()>() -> $z0 = virtualinvoke r0.<org.apache.commons.io.LineIterator: boolean hasNext()>() -> throw $r5",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.monitor.FileEntry",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(null, r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.UnixLineEndingInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.UnixLineEndingInputStream: void mark(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QMark notsupported\\E",
							"method":"<org.apache.commons.io.input.UnixLineEndingInputStream: void mark(int)>",
							"modifier":"public",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.FileCleaner",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe file must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>($r2, r3, r4) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe file must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>($r2, r3, r4) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe path must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r2, r3) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe path must not be null\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QNo new trackers can be added once exitWhenFinished() is called\\E",
							"method":"<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2)",
							"invokedMethod":"<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
							"callChain":"virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> specialinvoke r1.<org.apache.commons.io.FileCleaningTracker: void addTracker(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r2, r3) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.FileCleaningTracker.<org.apache.commons.io.FileCleaningTracker: boolean exitWhenFinished> is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.XmlStreamReader",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> $r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>($r1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> $r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> $r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>(r1, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> $r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> $r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null) -> $r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r8 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r2, $r6, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> specialinvoke $r5.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r6, 0, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> specialinvoke $r5.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r6, 0, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> specialinvoke $r8.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r5, 1, $r9) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> specialinvoke $r8.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r5, 1, $r9) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> $r10 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r5, $r8, $r3, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_0_in_method_<init> instanceof java.net.HttpURLConnection is not 0",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.net.URLConnection: java.lang.String getContentType()>() is not null",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> $r10 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r5, $r8, $r3, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_0_in_method_<init> instanceof java.net.HttpURLConnection is not 0",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.net.URLConnection: java.lang.String getContentType()>() is not null",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> $r13 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r5, $r8, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_0_in_method_<init> instanceof java.net.HttpURLConnection is 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.net.URLConnection: java.lang.String getContentType()>() is null",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r2, null) -> $r13 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r5, $r8, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_0_in_method_<init> instanceof java.net.HttpURLConnection is 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.net.URLConnection: java.lang.String getContentType()>() is null",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r5.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r6, 0, $r7)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r5.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r6, 0, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r5.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r6, 0, $r7)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r5.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r6, 0, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r8.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r5, 1, $r9)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r8.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r5, 1, $r9) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r8.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r5, 1, $r9)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r8.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r5, 1, $r9) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r10 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r5, $r8, $r3, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r10 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r5, $r8, $r3, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter0 instanceof java.net.HttpURLConnection is not 0",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter0.<java.net.URLConnection: java.lang.String getContentType()>() is not null",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r10 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r5, $r8, $r3, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r10 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r5, $r8, $r3, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter0 instanceof java.net.HttpURLConnection is not 0",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter0.<java.net.URLConnection: java.lang.String getContentType()>() is not null",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r13 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r5, $r8, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r13 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r5, $r8, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter0 instanceof java.net.HttpURLConnection is 0",
								"virtualinvoke parameter0.<java.net.URLConnection: java.lang.String getContentType()>() is null",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r13 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r5, $r8, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r13 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>($r5, $r8, 1) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter0 instanceof java.net.HttpURLConnection is 0",
								"virtualinvoke parameter0.<java.net.URLConnection: java.lang.String getContentType()>() is null",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doRawStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> $r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1) -> specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> $r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r2.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r3, 0, $r5) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init>.length is not 0",
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> specialinvoke $r6.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>($r2, 1, $r7) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> $r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null) -> $r9 = specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>($r2, $r6, r8, z0) -> $r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16, r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is not 0",
								"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_doHttpStream.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>",
							"modifier":"private",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doRawStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,boolean)>",
							"modifier":"private",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>",
							"modifier":"private",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String doHttpStream(org.apache.commons.io.input.BOMInputStream,org.apache.commons.io.input.BOMInputStream,java.lang.String,boolean)>",
							"modifier":"private",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>(r2, $r3) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16",
							"preConditions":[
								"parameter_1_in_method_getXmlProlog is not null",
								"-1 is -1",
								"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":3,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, r1 == null, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter1 is null",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":3,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, r1 == null, $z4 != 0, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":2,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, r1 == null, $z4 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":5,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, r1 == null, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter1 is null",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":5,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, r1 == null, $z9 != 0, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, r1 == null, $z9 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":6,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":5,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0, r1 == null, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter1 is null",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":5,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0, r1 == null, $z9 != 0, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0, r1 == null, $z9 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":3,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, r1 == null, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter1 is null",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":3,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, r1 == null, $z4 != 0, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":2,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, r1 == null, $z4 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r20",
							"callChain":"throw $r20",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 == 0, r1 == null, r2 == null, $z11 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter1 is null",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r20",
							"callChain":"throw $r20",
							"throwUnitOrder":1,
							"conditions":"r0 != null, $z0 == 0, r1 == null, $z12 != 0, r2 == null, $z11 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"modifier":"default",
							"throwUnit":"throw $r23",
							"callChain":"throw $r23",
							"throwUnitOrder":0,
							"conditions":"r0 != null, $z0 == 0, r1 == null, $z12 != 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null, $z9 == 0",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null, $z10 == 0",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null, $z9 == 0",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null, $z10 == 0",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, r3 == null",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r23",
							"callChain":"throw $r23",
							"throwUnitOrder":0,
							"conditions":"z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null, $z9 == 0",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null, $z10 == 0",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $r2 != null, $z3 != 0, $z4 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":4,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, $z8 == 0, r3 == null, $z9 == 0",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-32\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":3,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, $z6 != 0, $z7 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":2,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, $z5 == 0, r3 == null, $z10 == 0",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is not 0",
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean startsWith(java.lang.String)>(\"UTF-16\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0, $r2 != null, $z3 != 0, $z4 == 0, r3 == null",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is not null",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0).<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter1 is not null"
							],
							"keyPreCondition":"parameter1 is not null"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"throwUnit":"throw $r23",
							"callChain":"throw $r23",
							"throwUnitOrder":0,
							"conditions":"z0 == 0, r6 == null, $z1 != 0, $z2 != 0",
							"preConditions":[
								"parameter4 is not 0",
								"parameter3 is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, r1 == null, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter2 is null",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, r1 == null, $z4 != 0, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is not 0",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, r1 == null, $z4 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is not 0",
								"parameter2 is not null",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, r1 == null, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter2 is null",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, r1 == null, $z9 != 0, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is not 0",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, r1 == null, $z9 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is not 0",
								"parameter2 is not null",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r17",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r17",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0, r1 == null, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter2 is null",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0, r1 == null, $z9 != 0, r2 == null, $z7 != 0, $z8 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is not 0",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, $z6 != 0, $z10 == 0, r1 == null, $z9 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-32LE\") is not 0",
								"parameter2 is not null",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, r1 == null, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter2 is null",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, r1 == null, $z4 != 0, r2 == null, $z2 != 0, $z3 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is not 0",
								"parameter3 is not null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16\") is 0",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(parameter1) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, $z1 != 0, $z5 == 0, r1 == null, $z4 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16BE\") is 0",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-16LE\") is not 0",
								"parameter2 is not null",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(parameter2) is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r20",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r20",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, r1 == null, r2 == null, $z11 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter2 is null",
								"parameter3 is not null",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r20",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r20",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, r1 == null, $z12 != 0, r2 == null, $z11 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter2 is not null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter3 is not null",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter3.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
						},
						{
							"exceptionName":"org.apache.commons.io.input.XmlStreamReaderException",
							"message":"",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>",
							"modifier":"default",
							"invokeUnit":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6)",
							"invokedMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r23",
							"throwUnitInMethod":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>",
							"callChain":"$r20 = virtualinvoke r18.<org.apache.commons.io.input.XmlStreamReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String)>(r3, r5, r6) -> throw $r23",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, $z0 == 0, r1 == null, $z12 != 0",
							"preConditions":[
								"parameter1 is not null",
								"virtualinvoke parameter1.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is not 0",
								"parameter2 is not null",
								"parameter4 is 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isAppXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeEncoding(java.lang.String)>(parameter0) is null",
								"staticinvoke <org.apache.commons.io.input.XmlStreamReader: boolean isTextXml(java.lang.String)>(staticinvoke <org.apache.commons.io.input.XmlStreamReader: java.lang.String getContentTypeMime(java.lang.String)>(parameter0)) is not 0",
								"parameter3 is null",
								"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
							],
							"keyPreCondition":"virtualinvoke parameter2.<java.lang.String: boolean equals(java.lang.Object)>(\"UTF-8\") is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QXML prolog or ROOT element not found on first \\E[\\s\\S]*\\Q bytes\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"modifier":"private",
							"throwUnit":"throw $r25",
							"callChain":"throw $r25",
							"throwUnitOrder":1,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16",
							"preConditions":[
								"parameter1 is not null",
								"-1 is -1",
								"virtualinvoke parameter0.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is not -1"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected end of XML stream\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: java.lang.String getXmlProlog(java.io.InputStream,java.lang.String)>",
							"modifier":"private",
							"throwUnit":"throw $r23",
							"callChain":"throw $r23",
							"throwUnitOrder":0,
							"conditions":"r0 == null, i6_1 != $i14, i5_1 != $i16",
							"preConditions":[
								"parameter1 is not null",
								"-1 is -1",
								"virtualinvoke parameter0.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[4096], 0, 4096) is -1"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r7.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-8\", $r8) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init>.length is not 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r9.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16BE\", $r10) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init>.length is not 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo bytes specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init>.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo charsetName specified\\E",
							"method":"<org.apache.commons.io.input.XmlStreamReader: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12)",
							"invokedMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>",
							"callChain":"specialinvoke $r11.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>(\"UTF-16LE\", $r12) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $z0 == 0, r3 == null, $i0 != 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter_1_in_method_<init> is not null",
								"parameter_1_in_method_<init>.length is not 0",
								"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_<init>.<java.lang.String: boolean isEmpty()>() is not 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.CharSequenceReader",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r15",
							"callChain":"throw $r15",
							"throwUnitOrder":1,
							"conditions":"$i0 < $i1, r2 != null, i2 < 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: int idx> smaller than interfaceinvoke @this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: java.lang.CharSequence charSequence>.<java.lang.CharSequence: int length()>()",
								"parameter0 is not null",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r15",
							"callChain":"throw $r15",
							"throwUnitOrder":1,
							"conditions":"$i0 < $i1, r2 != null, i2 < 0, i3 < 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: int idx> smaller than interfaceinvoke @this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: java.lang.CharSequence charSequence>.<java.lang.CharSequence: int length()>()",
								"parameter0 is not null",
								"parameter2 larger or equal 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r15",
							"callChain":"throw $r15",
							"throwUnitOrder":1,
							"conditions":"$i0 < $i1, r2 != null, i2 < 0, i3 < 0, $i5 <= $i4",
							"preConditions":[
								"@this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: int idx> smaller than interfaceinvoke @this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: java.lang.CharSequence charSequence>.<java.lang.CharSequence: int length()>()",
								"parameter0 is not null",
								"parameter2 larger or equal 0",
								"parameter1 larger or equal 0",
								"parameter1 + parameter2 larger than parameter0.length"
							],
							"keyPreCondition":"parameter1 + parameter2 larger than parameter0.length"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QCharacter array is missing\\E",
							"method":"<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r13",
							"callChain":"throw $r13",
							"throwUnitOrder":0,
							"conditions":"$i0 < $i1, r2 != null",
							"preConditions":[
								"@this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: int idx> smaller than interfaceinvoke @this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: java.lang.CharSequence charSequence>.<java.lang.CharSequence: int length()>()",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.CharSequenceReader: long skip(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNumber of characters to skip is less than zero: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.CharSequenceReader: long skip(long)>",
							"modifier":"public",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":0,
							"conditions":"$i14 >= 0",
							"preConditions":[
								"parameter0 smaller than 0"
							],
							"keyPreCondition":"parameter0 smaller than 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.monitor.FileAlterationMonitor",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationMonitor: void start()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QMonitor is already running\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationMonitor: void start()>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0",
							"preConditions":[
								"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is not 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationMonitor: void stop()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QMonitor is not running\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationMonitor: void stop()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.monitor.FileAlterationMonitor: void stop(long)>($l0)",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationMonitor: void stop(long)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileAlterationMonitor: void stop(long)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.monitor.FileAlterationMonitor: void stop(long)>($l0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationMonitor: void stop(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QMonitor is not running\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationMonitor: void stop(long)>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.monitor.FileAlterationMonitor: void run()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationMonitor: void run()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>()",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>() -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r9, $r10, $r11) -> $r6 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r5) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is 0",
								"virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: boolean isExists()>() is not 0",
								"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is not 0",
								"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: java.util.List observers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationMonitor: void run()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>()",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>() -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r9, $r10, $r11) -> $r22 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r21) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_1_in_method_checkAndNotify.length",
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(virtualinvoke parameter_1_in_method_checkAndNotify[i9_1].<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>(), parameter_2_in_method_checkAndNotify[i8_2]) larger than 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is 0",
								"virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: boolean isExists()>() is not 0",
								"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is not 0",
								"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: java.util.List observers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationMonitor: void run()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>()",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>() -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r13, $r14, $r15) -> $r6 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r5) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is not 0",
								"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is not 0",
								"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: java.util.List observers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QFile is missing\\E",
							"method":"<org.apache.commons.io.monitor.FileAlterationMonitor: void run()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>()",
							"invokedMethod":"<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>",
							"callChain":"virtualinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify()>() -> specialinvoke r0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>($r13, $r14, $r15) -> $r22 = specialinvoke r4.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r3, $r21) -> $r2 = virtualinvoke r0.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(r1) -> specialinvoke $r0.<org.apache.commons.io.monitor.FileEntry: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.File)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"0 smaller than parameter_1_in_method_checkAndNotify.length",
								"0 smaller than parameter_2_in_method_checkAndNotify.length",
								"interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(virtualinvoke parameter_1_in_method_checkAndNotify[i9_1].<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>(), parameter_2_in_method_checkAndNotify[i8_2]) larger than 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.monitor.FileAlterationObserver.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>().<java.io.File: boolean exists()>() is not 0",
								"@this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: boolean running> is not 0",
								"interfaceinvoke interfaceinvoke @this: org.apache.commons.io.monitor.FileAlterationMonitor.<org.apache.commons.io.monitor.FileAlterationMonitor: java.util.List observers>.<java.util.List: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"parameter_1_in_method_createFileEntry is null"
							],
							"keyPreCondition":"parameter_1_in_method_createFileEntry is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.ByteOrderParser",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.ByteOrderParser: java.nio.ByteOrder parseByteOrder(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QUnsupported byte order setting: \\E[\\s\\S]*\\Q, expeced one of \\E[\\s\\S]*\\Q, \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.ByteOrderParser: java.nio.ByteOrder parseByteOrder(java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"$z0 == 0, $z1 == 0",
							"preConditions":[
								"virtualinvoke virtualinvoke <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>.<java.nio.ByteOrder: java.lang.String toString()>().<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0",
								"virtualinvoke virtualinvoke <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>.<java.nio.ByteOrder: java.lang.String toString()>().<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>.<java.nio.ByteOrder: java.lang.String toString()>().<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.ReaderInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r18",
							"callChain":"throw $r18",
							"throwUnitOrder":1,
							"conditions":"r0 != null, i5 < 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r18",
							"callChain":"throw $r18",
							"throwUnitOrder":1,
							"conditions":"r0 != null, i5 < 0, i4 < 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter2 larger or equal 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r18",
							"callChain":"throw $r18",
							"throwUnitOrder":1,
							"conditions":"r0 != null, i5 < 0, i4 < 0, $i1 <= $i0",
							"preConditions":[
								"parameter0 is not null",
								"parameter2 larger or equal 0",
								"parameter1 larger or equal 0",
								"parameter1 + parameter2 larger than parameter0.length"
							],
							"keyPreCondition":"parameter1 + parameter2 larger than parameter0.length"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QByte array must not be null\\E",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r16",
							"callChain":"throw $r16",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r18",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r18",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i5 < 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_2_in_method_read smaller than 0"
							],
							"keyPreCondition":"parameter_2_in_method_read smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r18",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r18",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i5 < 0, i4 < 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_2_in_method_read larger or equal 0",
								"parameter_1_in_method_read smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_read smaller than 0"
						},
						{
							"exceptionName":"java.lang.IndexOutOfBoundsException",
							"message":"\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r18",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r18",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i5 < 0, i4 < 0, $i1 <= $i0",
							"preConditions":[
								"parameter0 is not null",
								"parameter_2_in_method_read larger or equal 0",
								"parameter_1_in_method_read larger or equal 0",
								"parameter_1_in_method_read + parameter_2_in_method_read larger than parameter0.length"
							],
							"keyPreCondition":"parameter_1_in_method_read + parameter_2_in_method_read larger than parameter0.length"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QByte array must not be null\\E",
							"method":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
							"callChain":"$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.DeferredFileOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, 1024)",
							"invokedMethod":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, 1024) -> specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_5_in_method_<init> smaller than 0"
							],
							"keyPreCondition":"parameter_5_in_method_<init> smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QInitial buffer size must be atleast 0.\\E",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"i1 >= 0, i0 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, i1)",
							"invokedMethod":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, i1) -> specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.lang.String,java.lang.String,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QTemporary file prefix is missing\\E",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.lang.String,java.lang.String,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null, i0 >= 0",
							"preConditions":[
								"parameter_5_in_method_<init> larger or equal 0",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.lang.String,java.lang.String,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, null, r1, r2, r3, 1024)",
							"invokedMethod":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, null, r1, r2, r3, 1024) -> specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_5_in_method_<init> smaller than 0"
							],
							"keyPreCondition":"parameter_5_in_method_<init> smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.lang.String,java.lang.String,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QInitial buffer size must be atleast 0.\\E",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.lang.String,java.lang.String,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":1,
							"conditions":"r1 != null, i1 >= 0, i0 >= 0",
							"preConditions":[
								"parameter2 is not null",
								"parameter1 larger or equal 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QTemporary file prefix is missing\\E",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.lang.String,java.lang.String,java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r1 != null, i0 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter2 is null"
							],
							"keyPreCondition":"parameter2 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.lang.String,java.lang.String,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, null, r1, r2, r3, i1)",
							"invokedMethod":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, null, r1, r2, r3, i1) -> specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>",
							"modifier":"private",
							"invokeUnit":"specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1)",
							"invokedMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter5 smaller than 0"
							],
							"keyPreCondition":"parameter5 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.DeferredFileOutputStream: void thresholdReached()>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnable to create directory \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void thresholdReached()>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>($r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>($r2) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r1) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z1 != 0, $z2 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean mkdirs()>() is 0",
								"virtualinvoke parameter_0_in_method_forceMkdirParent.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QFile \\E[\\s\\S]*\\Q exists and is not a directory. Unable to create directory.\\E",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void thresholdReached()>",
							"modifier":"protected",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>($r2)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>",
							"callChain":"staticinvoke <org.apache.commons.io.FileUtils: void forceMkdirParent(java.io.File)>($r2) -> staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>($r1) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0, $z3 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_forceMkdirParent.<java.io.File: java.io.File getParentFile()>() is not null",
								"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_forceMkdir.<java.io.File: boolean isDirectory()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.DeferredFileOutputStream: void writeTo(java.io.OutputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QStream not closed\\E",
							"method":"<org.apache.commons.io.output.DeferredFileOutputStream: void writeTo(java.io.OutputStream)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"@this: org.apache.commons.io.output.DeferredFileOutputStream.<org.apache.commons.io.output.DeferredFileOutputStream: boolean closed> is 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.output.DeferredFileOutputStream.<org.apache.commons.io.output.DeferredFileOutputStream: boolean closed> is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.TeeInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.TeeInputStream: int read()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.TeeInputStream: int read()>",
							"modifier":"public",
							"invokeUnit":"$i0 = specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: int read()>()",
							"invokedMethod":"<org.apache.commons.io.input.ProxyInputStream: int read()>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>",
							"callChain":"$i0 = specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: int read()>() -> virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.TeeInputStream: int read(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.TeeInputStream: int read(byte[])>",
							"modifier":"public",
							"invokeUnit":"$i0 = specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: int read(byte[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.input.ProxyInputStream: int read(byte[])>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>",
							"callChain":"$i0 = specialinvoke r0.<org.apache.commons.io.input.ProxyInputStream: int read(byte[])>(r1) -> virtualinvoke r0.<org.apache.commons.io.input.ProxyInputStream: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.HexDump",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.HexDump: void dump(byte[],long,java.io.OutputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.ArrayIndexOutOfBoundsException",
							"message":"\\Qillegal index: \\E[\\s\\S]*\\Q into array of length \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.HexDump: void dump(byte[],long,java.io.OutputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":0,
							"conditions":"i0 < 0",
							"preConditions":[
								"parameter3 smaller than 0"
							],
							"keyPreCondition":"parameter3 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qcannot write to nullstream\\E",
							"method":"<org.apache.commons.io.HexDump: void dump(byte[],long,java.io.OutputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r18",
							"callChain":"throw $r18",
							"throwUnitOrder":1,
							"conditions":"i0 < 0, i0 < $i2, r8 != null",
							"preConditions":[
								"parameter3 larger or equal 0",
								"parameter3 smaller than parameter0.length",
								"parameter2 is null"
							],
							"keyPreCondition":"parameter2 is null"
						},
						{
							"exceptionName":"java.lang.ArrayIndexOutOfBoundsException",
							"message":"\\Qillegal index: \\E[\\s\\S]*\\Q into array of length \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.HexDump: void dump(byte[],long,java.io.OutputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r17",
							"callChain":"throw $r17",
							"throwUnitOrder":0,
							"conditions":"i0 < 0, i0 < $i2",
							"preConditions":[
								"parameter3 larger or equal 0",
								"parameter3 larger or equal parameter0.length"
							],
							"keyPreCondition":"parameter3 larger or equal parameter0.length"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.TaggedInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.TaggedInputStream: void throwIfCauseOf(java.lang.Throwable)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.TaggedInputStream: void throwIfCauseOf(java.lang.Throwable)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>",
							"callChain":"staticinvoke <org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>(r0, $r2) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.TaggedIOException: boolean isTaggedWith(java.lang.Throwable,java.lang.Object)>(parameter0, parameter_1_in_method_throwCauseIfTaggedWith) is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.TaggedIOException: boolean isTaggedWith(java.lang.Throwable,java.lang.Object)>(parameter0, parameter_1_in_method_throwCauseIfTaggedWith) is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.TaggedInputStream: void handleIOException(java.io.IOException)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"org.apache.commons.io.TaggedIOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.TaggedInputStream: void handleIOException(java.io.IOException)>",
							"modifier":"protected",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.ProxyOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.ProxyOutputStream: void write(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyOutputStream: void write(int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyOutputStream: void write(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyOutputStream: void write(byte[])>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r1.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r1.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyOutputStream: void write(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r3) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyOutputStream: void flush()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyOutputStream: void flush()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyOutputStream: void close()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyOutputStream: void close()>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2)",
							"invokedMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"throwUnit":"throw r0",
							"throwUnitInMethod":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>($r2) -> throw r0",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>",
							"modifier":"protected",
							"throwUnit":"throw r0",
							"callChain":"throw r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.PathFileComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5)",
							"invokedMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkCompareTo is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5)",
							"invokedMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is not null",
								"parameter_1_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkCompareTo is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.lang.Object,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkCompareTo is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is not null",
								"parameter_1_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkCompareTo is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.PathFileComparator: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.PathFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.PathFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r5.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r6)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r5.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r6) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.PathFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r9.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r10)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r9.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r10) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.SuffixFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe suffix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe suffix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of suffixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of suffixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe list of suffixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe list of suffixes must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.CountingOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.CountingOutputStream: int getCount()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.ArithmeticException",
							"message":"\\QThe byte count \\E[\\s\\S]*\\Q is too large to be converted to an int\\E",
							"method":"<org.apache.commons.io.output.CountingOutputStream: int getCount()>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"$i3 <= 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.output.CountingOutputStream.<org.apache.commons.io.output.CountingOutputStream: long getByteCount()>() cmp 2147483647L larger than 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.CountingOutputStream.<org.apache.commons.io.output.CountingOutputStream: long getByteCount()>() cmp 2147483647L larger than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.CountingOutputStream: int resetCount()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.ArithmeticException",
							"message":"\\QThe byte count \\E[\\s\\S]*\\Q is too large to be converted to an int\\E",
							"method":"<org.apache.commons.io.output.CountingOutputStream: int resetCount()>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"$i3 <= 0",
							"preConditions":[
								"virtualinvoke @this: org.apache.commons.io.output.CountingOutputStream.<org.apache.commons.io.output.CountingOutputStream: long resetByteCount()>() cmp 2147483647L larger than 0"
							],
							"keyPreCondition":"virtualinvoke @this: org.apache.commons.io.output.CountingOutputStream.<org.apache.commons.io.output.CountingOutputStream: long resetByteCount()>() cmp 2147483647L larger than 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.FileFilterUtils",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile array contains null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"modifier":"public",
							"throwUnit":"throw $r7",
							"callChain":"throw $r7",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 != null, i2_1 >= i0, r6 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"0 smaller than parameter1.length",
								"parameter1[i2_1] is null"
							],
							"keyPreCondition":"parameter1[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile filter is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"modifier":"public",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile collection contains null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>(r0, r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 == null, $z0 == 0, r5 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile filter is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>(r0, r1) -> $r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile collection contains null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 == null, $z0 == 0, r5 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile filter is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile array contains null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, i2_1 >= i0, r6 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"0 smaller than parameter1.length",
								"parameter1[i2_1] is null"
							],
							"keyPreCondition":"parameter1[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile filter is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List filterList(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile array contains null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, i2_1 >= i0, r6 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"0 smaller than parameter1.length",
								"parameter1[i2_1] is null"
							],
							"keyPreCondition":"parameter1[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile filter is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.io.File[] filter(org.apache.commons.io.filefilter.IOFileFilter,java.io.File[])>(r0, r1) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile collection contains null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 == null, $z0 == 0, r5 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile filter is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Set filterSet(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>(r0, r1, $r2) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile collection contains null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"modifier":"private",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":1,
							"conditions":"r0 != null, r1 == null, $z0 == 0, r5 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
								"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
							],
							"keyPreCondition":"interfaceinvoke interfaceinvoke parameter1.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: java.lang.Object next()>() is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\Qfile filter is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.Collection filter(org.apache.commons.io.filefilter.IOFileFilter,java.lang.Iterable,java.util.Collection)>",
							"modifier":"private",
							"throwUnit":"throw $r7",
							"callChain":"throw $r7",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe prefix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe prefix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe suffix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe suffix must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter suffixFileFilter(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.SuffixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter andFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, r3 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.OrFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r1, r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, r3 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter0 is not null",
								"0 smaller than parameter0.length",
								"parameter0[i2_1] is null"
							],
							"keyPreCondition":"parameter0[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter0 is not null",
								"0 smaller than parameter0.length",
								"parameter0[i2_1] is null"
							],
							"keyPreCondition":"parameter0[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter or(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter0 is not null",
								"0 smaller than parameter0.length",
								"parameter0[i2_1] is null"
							],
							"keyPreCondition":"parameter0[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe FileFilter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FileFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FileFilter)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe FilenameFilter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter asFileFilter(java.io.FilenameFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FilenameFilter)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FilenameFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FilenameFilter)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.DelegateFileFilter: void <init>(java.io.FilenameFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe size must be non-negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long)>(l0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long)>(l0) -> specialinvoke r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>(l0, 1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter0 smaller than 0"
							],
							"keyPreCondition":"parameter0 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe size must be non-negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeFileFilter(long,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>(l0, z0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>(l0, z0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter0 smaller than 0"
							],
							"keyPreCondition":"parameter0 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe size must be non-negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>(l0, 1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>(l0, 1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter0 smaller than 0"
							],
							"keyPreCondition":"parameter0 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe size must be non-negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>($l2, 0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.SizeFileFilter: void <init>(long,boolean)>($l2, 0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 >= 0",
							"preConditions":[
								"parameter_0_in_method_<init> smaller than 0"
							],
							"keyPreCondition":"parameter_0_in_method_<init> smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r0, $r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, $i2 >= 0",
							"preConditions":[
								"parameter0 larger or equal 0",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter sizeRangeFileFilter(long,long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r2.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r0, $r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r2.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r0, $r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, r3 != null, $i2 >= 0",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter0 larger or equal 0",
								"parameter_1_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_1_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 == 0, $i2 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init> smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, l0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 == 0, $i2 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, l0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(java.lang.String,long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, l0) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $i0 != 0, $i5 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is not 0",
								"parameter_1_in_method_<init> smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init> smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $i0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is 0"
							],
							"keyPreCondition":"parameter0.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>(r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[],long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[],long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, l0) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $i0 != 0, $i5 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is not 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[],long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, l0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $i0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is 0"
							],
							"keyPreCondition":"parameter0.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter magicNumberFileFilter(byte[],long)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, l0) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter0 is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter0 is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r1) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeDirectoryOnly(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, r3 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter0 is not null",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null",
							"preConditions":[
								"parameter0 is not null",
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeFileOnly(org.apache.commons.io.filefilter.IOFileFilter)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.AndFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>($r2, r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 == null, r3 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is not null",
								"parameter0 is not null",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\"CVS\")",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\"CVS\") -> specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_nameFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_nameFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_nameFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r0) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_nameFileFilter is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r3)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r4 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r3) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, r1 != null, r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter_0_in_method_nameFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_and is not null",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\".svn\")",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"$r7 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\".svn\") -> specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, r0 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_and is not null",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_nameFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_nameFileFilter is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter[\\E[\\s\\S]*\\Q] is null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r8 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r5)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r8 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r5) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, i2_1 >= $i1, $r2 != null, r1 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_and is not null",
								"0 smaller than parameter_0_in_method_and.length",
								"parameter_0_in_method_nameFileFilter is not null",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is null"
							],
							"keyPreCondition":"parameter_0_in_method_and[i2_1] is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filters must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r8 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r5)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>",
							"callChain":"$r8 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter[])>($r5) -> $r2 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: java.util.List toList(org.apache.commons.io.filefilter.IOFileFilter[])>(r1) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"r0 != null, r1 != null, i2_1 >= $i1, $r2 != null, r1 != null",
							"preConditions":[
								"parameter_0_in_method_nameFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_notFileFilter is not null",
								"parameter_0_in_method_and is null"
							],
							"keyPreCondition":"parameter_0_in_method_and is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.FileFilterUtils: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"$r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r8)",
							"invokedMethod":"<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"$r9 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter)>($r8) -> specialinvoke $r0.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, r1 != null, r0 != null, i2_1 >= $i1, $r2 != null",
							"preConditions":[
								"parameter_0_in_method_nameFileFilter is not null",
								"parameter_0_in_method_and[i2_1] is not null",
								"parameter_0_in_method_and is not null",
								"parameter_0_in_method_notFileFilter is null"
							],
							"keyPreCondition":"parameter_0_in_method_notFileFilter is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.BOMInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, z0, $r2)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, z0, $r2) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter_2_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_2_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, z0, $r2)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, z0, $r2) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter_2_in_method_<init> is not null",
								"parameter_2_in_method_<init>.length is 0"
							],
							"keyPreCondition":"parameter_2_in_method_<init>.length is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, 0, r2)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, 0, r2) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,org.apache.commons.io.ByteOrderMark[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, 0, r2)",
							"invokedMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>(r1, 0, r2) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter1 is not null",
								"parameter1.length is 0"
							],
							"keyPreCondition":"parameter1.length is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"r2 == null",
							"preConditions":[
								"parameter2 is null"
							],
							"keyPreCondition":"parameter2 is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNo BOMs specified\\E",
							"method":"<org.apache.commons.io.input.BOMInputStream: void <init>(java.io.InputStream,boolean,org.apache.commons.io.ByteOrderMark[])>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"r2 == null, $i0 != 0",
							"preConditions":[
								"parameter2 is not null",
								"parameter2.length is 0"
							],
							"keyPreCondition":"parameter2.length is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.BOMInputStream: boolean hasBOM(org.apache.commons.io.ByteOrderMark)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QStream not configure to detect \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.BOMInputStream: boolean hasBOM(org.apache.commons.io.ByteOrderMark)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"$z0 != 0",
							"preConditions":[
								"interfaceinvoke @this: org.apache.commons.io.input.BOMInputStream.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>.<java.util.List: boolean contains(java.lang.Object)>(parameter0) is 0"
							],
							"keyPreCondition":"interfaceinvoke @this: org.apache.commons.io.input.BOMInputStream.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>.<java.util.List: boolean contains(java.lang.Object)>(parameter0) is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.NameFileComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5)",
							"invokedMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkCompareTo is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5)",
							"invokedMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is not null",
								"parameter_1_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkCompareTo is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.lang.Object,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkCompareTo is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_checkCompareTo is not null",
								"parameter_1_in_method_checkCompareTo is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkCompareTo is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.NameFileComparator: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.NameFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.NameFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r5.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r6)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r5.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r6) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.NameFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r9.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r10)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r9.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r10) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.TaggedOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.TaggedOutputStream: void throwIfCauseOf(java.lang.Exception)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.TaggedOutputStream: void throwIfCauseOf(java.lang.Exception)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>",
							"callChain":"staticinvoke <org.apache.commons.io.TaggedIOException: void throwCauseIfTaggedWith(java.lang.Throwable,java.lang.Object)>(r0, $r2) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"$z0 == 0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.TaggedIOException: boolean isTaggedWith(java.lang.Throwable,java.lang.Object)>(parameter0, parameter_1_in_method_throwCauseIfTaggedWith) is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.TaggedIOException: boolean isTaggedWith(java.lang.Throwable,java.lang.Object)>(parameter0, parameter_1_in_method_throwCauseIfTaggedWith) is not 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.TaggedOutputStream: void handleIOException(java.io.IOException)>",
					"modifier":"protected",
					"exceptions":[
						{
							"exceptionName":"org.apache.commons.io.TaggedIOException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.TaggedOutputStream: void handleIOException(java.io.IOException)>",
							"modifier":"protected",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.IOUtils",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.io.InputStream toBufferedInputStream(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.io.InputStream toBufferedInputStream(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>(r0, 1024) -> specialinvoke $r0.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_1_in_method_toBufferedInputStream smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_toBufferedInputStream smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNegative initial size: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>(r0, i0)",
							"invokedMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.output.ByteArrayOutputStream: java.io.InputStream toBufferedInputStream(java.io.InputStream,int)>(r0, i0) -> specialinvoke $r0.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.io.BufferedOutputStream buffer(java.io.OutputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.io.BufferedOutputStream buffer(java.io.OutputStream)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.io.BufferedOutputStream buffer(java.io.OutputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.io.BufferedOutputStream buffer(java.io.OutputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.io.BufferedInputStream buffer(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.io.BufferedInputStream buffer(java.io.InputStream)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.io.BufferedInputStream buffer(java.io.InputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.io.BufferedInputStream buffer(java.io.InputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSize cannot be greater than Integer max value: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,long)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"$i3 <= 0",
							"preConditions":[
								"parameter1 larger than 2147483647"
							],
							"keyPreCondition":"parameter1 larger than 2147483647"
						},
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected read size. current: \\E[\\s\\S]*\\Q, expected: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,long)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>(r0, $i2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
							"throwUnit":"throw $r18",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>(r0, $i2) -> throw $r18",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0, i0 != 0, i3_1 == i0",
							"preConditions":[
								"parameter_1_in_method_toByteArray larger or equal 0",
								"parameter_1_in_method_toByteArray is not 0",
								"parameter1 cmp 2147483647L smaller or equal 0",
								"0 is not parameter_1_in_method_toByteArray"
							],
							"keyPreCondition":"0 is not parameter_1_in_method_toByteArray"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSize must be equal or greater than zero: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,long)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>(r0, $i2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>(r0, $i2) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter1 cmp 2147483647L smaller or equal 0",
								"parameter_1_in_method_toByteArray smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_toByteArray smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected read size. current: \\E[\\s\\S]*\\Q, expected: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r18",
							"callChain":"throw $r18",
							"throwUnitOrder":1,
							"conditions":"i0 >= 0, i0 != 0, i3_1 == i0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 is not 0",
								"0 is not parameter1"
							],
							"keyPreCondition":"0 is not parameter1"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSize must be equal or greater than zero: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r16",
							"callChain":"throw $r16",
							"throwUnitOrder":0,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QResource not found: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset,java.lang.ClassLoader)>(r0, r1, null)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset,java.lang.ClassLoader)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset,java.lang.ClassLoader)>(r0, r1, null) -> $r2 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$r8_2 != null",
							"preConditions":[
								"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset,java.lang.ClassLoader)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QResource not found: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.lang.String resourceToString(java.lang.String,java.nio.charset.Charset,java.lang.ClassLoader)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$r8_2 != null",
							"preConditions":[
								"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: byte[] resourceToByteArray(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QResource not found: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] resourceToByteArray(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] resourceToByteArray(java.lang.String,java.lang.ClassLoader)>(r0, null)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: byte[] resourceToByteArray(java.lang.String,java.lang.ClassLoader)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] resourceToByteArray(java.lang.String,java.lang.ClassLoader)>(r0, null) -> $r2 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$r8_2 != null",
							"preConditions":[
								"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: byte[] resourceToByteArray(java.lang.String,java.lang.ClassLoader)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QResource not found: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] resourceToByteArray(java.lang.String,java.lang.ClassLoader)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$r8_2 != null",
							"preConditions":[
								"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QResource not found: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, null)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>(r0, null) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$r8_2 != null",
							"preConditions":[
								"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QResource not found: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: java.net.URL resourceToURL(java.lang.String,java.lang.ClassLoader)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$r8_2 != null",
							"preConditions":[
								"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"virtualinvoke class \"Lorg/apache/commons/io/IOUtils;\".<java.lang.Class: java.net.URL getResource(java.lang.String)>(parameter0) is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.Reader)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QReader must not be null\\E",
							"method":"<org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.Reader)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>(r1)",
							"invokedMethod":"<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>(r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QReader must not be null\\E",
							"method":"<org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke $r0.<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>($r1)",
							"invokedMethod":"<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>",
							"callChain":"specialinvoke $r0.<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>($r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QReader must not be null\\E",
							"method":"<org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.nio.charset.Charset)>(r0, $r2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.nio.charset.Charset)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.IOUtils: org.apache.commons.io.LineIterator lineIterator(java.io.InputStream,java.nio.charset.Charset)>(r0, $r2) -> specialinvoke $r0.<org.apache.commons.io.LineIterator: void <init>(java.io.Reader)>($r1) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QBytes to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>(r0, r1, l0, l1, $r2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"callChain":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>(r0, r1, l0, l1, $r2) -> staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$i4 >= 0, $b3 == 0, $i10 >= 0",
							"preConditions":[
								"parameter2 larger or equal 0",
								"parameter2 larger than 0",
								"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(parameter0, parameter2) cmp parameter2 is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(parameter0, parameter2) cmp parameter2 is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBytes to skip must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>(r0, r1, l0, l1, $r2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"callChain":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>(r0, r1, l0, l1, $r2) -> staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$i4 >= 0",
							"preConditions":[
								"parameter2 larger than 0",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>(r0, r1, l0, l1, $r2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>",
							"callChain":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>(r0, r1, l0, l1, $r2) -> staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0) -> $l2 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(r0, l0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter2 larger or equal 0",
								"parameter2 larger than 0",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QBytes to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"throwUnit":"throw $r16",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0) -> throw $r16",
							"throwUnitOrder":-1,
							"conditions":"$i4 >= 0, $b3 == 0, $i10 >= 0",
							"preConditions":[
								"parameter2 larger or equal 0",
								"parameter2 larger than 0",
								"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(parameter0, parameter2) cmp parameter2 is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(parameter0, parameter2) cmp parameter2 is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBytes to skip must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"throwUnit":"throw $r14",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0) -> throw $r14",
							"throwUnitOrder":-1,
							"conditions":"$i4 >= 0",
							"preConditions":[
								"parameter2 larger than 0",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream,long,long,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>(r1, l0) -> $l2 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(r0, l0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter2 larger or equal 0",
								"parameter2 larger than 0",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QChars to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>(r0, r1, l0, l1, $r2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
							"callChain":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>(r0, r1, l0, l1, $r2) -> staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>(r1, l0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$b2 == 0, $i10 >= 0",
							"preConditions":[
								"parameter2 larger or equal 0",
								"parameter2 larger than 0",
								"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter2) cmp parameter2 is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter2) cmp parameter2 is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>(r0, r1, l0, l1, $r2)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>",
							"callChain":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>(r0, r1, l0, l1, $r2) -> staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>(r1, l0) -> $l1 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(r0, l0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter2 larger than 0",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QChars to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>(r1, l0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$b2 == 0, $i10 >= 0",
							"preConditions":[
								"parameter2 larger or equal 0",
								"parameter2 larger than 0",
								"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter2) cmp parameter2 is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter2) cmp parameter2 is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer,long,long,char[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>(r1, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>(r1, l0) -> $l1 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(r0, l0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter2 larger than 0",
								"parameter2 smaller than 0"
							],
							"keyPreCondition":"parameter2 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"$i11 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>",
							"modifier":"public",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QBytes to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"modifier":"public",
							"throwUnit":"throw $r16",
							"callChain":"throw $r16",
							"throwUnitOrder":1,
							"conditions":"$i4 >= 0, $b3 == 0, $i10 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(parameter0, parameter1) cmp parameter1 is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(parameter0, parameter1) cmp parameter1 is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBytes to skip must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"modifier":"public",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":0,
							"conditions":"$i4 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.io.InputStream,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(r0, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>",
							"callChain":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.InputStream,long)>(r0, l0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void skipFully(java.nio.channels.ReadableByteChannel,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QBytes to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.nio.channels.ReadableByteChannel,long)>",
							"modifier":"public",
							"throwUnit":"throw $r16",
							"callChain":"throw $r16",
							"throwUnitOrder":1,
							"conditions":"$i4 >= 0, $b3 == 0, $i11 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>(parameter0, parameter1) cmp parameter1 is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>(parameter0, parameter1) cmp parameter1 is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QBytes to skip must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.nio.channels.ReadableByteChannel,long)>",
							"modifier":"public",
							"throwUnit":"throw $r14",
							"callChain":"throw $r14",
							"throwUnitOrder":0,
							"conditions":"$i4 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.nio.channels.ReadableByteChannel,long)>",
							"modifier":"public",
							"invokeUnit":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>(r0, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>",
							"callChain":"$l2 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.nio.channels.ReadableByteChannel,long)>(r0, l0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"$i11 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QChars to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
							"modifier":"public",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"$b2 == 0, $i10 >= 0",
							"preConditions":[
								"parameter1 larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter1) cmp parameter1 is not 0"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter1) cmp parameter1 is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QSkip count must be non-negative, actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
							"modifier":"public",
							"invokeUnit":"$l1 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(r0, l0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>",
							"callChain":"$l1 = staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(r0, l0) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i10 >= 0",
							"preConditions":[
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter3 smaller than 0"
							],
							"keyPreCondition":"parameter3 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(r0, r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>",
							"callChain":"$i1 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(r0, r1, 0, $i0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_read smaller than 0"
							],
							"keyPreCondition":"parameter_3_in_method_read smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":0,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter3 smaller than 0"
							],
							"keyPreCondition":"parameter3 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[])>",
							"modifier":"public",
							"invokeUnit":"$i1 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(r0, r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
							"callChain":"$i1 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(r0, r1, 0, $i0) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_read smaller than 0"
							],
							"keyPreCondition":"parameter_3_in_method_read smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QLength to read: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$i2 == i1, i0 >= 0",
							"preConditions":[
								"parameter3 larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(parameter0, parameter1, parameter2, parameter3) is not parameter3"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(parameter0, parameter1, parameter2, parameter3) is not parameter3"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>",
							"modifier":"public",
							"invokeUnit":"$i2 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(r0, r1, i0, i1)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>",
							"callChain":"$i2 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(r0, r1, i0, i1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter3 smaller than 0"
							],
							"keyPreCondition":"parameter3 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QLength to read: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>(r0, r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>(r0, r1, 0, $i0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 == i1, i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_readFully larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(parameter0, parameter1, parameter_2_in_method_readFully, parameter_3_in_method_readFully) is not parameter_3_in_method_readFully"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(parameter0, parameter1, parameter_2_in_method_readFully, parameter_3_in_method_readFully) is not parameter_3_in_method_readFully"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>(r0, r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.Reader,char[],int,int)>(r0, r1, 0, $i0) -> $i2 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.Reader,char[],int,int)>(r0, r1, i0, i1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_readFully smaller than 0"
							],
							"keyPreCondition":"parameter_3_in_method_readFully smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QLength to read: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$i2 == i1, i0 >= 0",
							"preConditions":[
								"parameter3 larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(parameter0, parameter1, parameter2, parameter3) is not parameter3"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(parameter0, parameter1, parameter2, parameter3) is not parameter3"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"$i2 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(r0, r1, i0, i1)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
							"callChain":"$i2 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(r0, r1, i0, i1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter3 smaller than 0"
							],
							"keyPreCondition":"parameter3 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QLength to read: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r0, r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r0, r1, 0, $i0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 == i1, i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_readFully larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(parameter0, parameter1, parameter_2_in_method_readFully, parameter_3_in_method_readFully) is not parameter_3_in_method_readFully"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(parameter0, parameter1, parameter_2_in_method_readFully, parameter_3_in_method_readFully) is not parameter_3_in_method_readFully"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r0, r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r0, r1, 0, $i0) -> $i2 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(r0, r1, i0, i1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_readFully smaller than 0"
							],
							"keyPreCondition":"parameter_3_in_method_readFully smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: byte[] readFully(java.io.InputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QLength to read: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] readFully(java.io.InputStream,int)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r1, r0, 0, $i1)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r1, r0, 0, $i1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 == i1, i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_readFully larger or equal 0",
								"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(parameter0, parameter_1_in_method_readFully, parameter_2_in_method_readFully, parameter_3_in_method_readFully) is not parameter_3_in_method_readFully"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(parameter0, parameter_1_in_method_readFully, parameter_2_in_method_readFully, parameter_3_in_method_readFully) is not parameter_3_in_method_readFully"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QLength must not be negative: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: byte[] readFully(java.io.InputStream,int)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r1, r0, 0, $i1)",
							"invokedMethod":"<org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>",
							"callChain":"staticinvoke <org.apache.commons.io.IOUtils: void readFully(java.io.InputStream,byte[],int,int)>(r1, r0, 0, $i1) -> $i2 = staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[],int,int)>(r0, r1, i0, i1) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"i0 >= 0",
							"preConditions":[
								"parameter_3_in_method_readFully smaller than 0"
							],
							"keyPreCondition":"parameter_3_in_method_readFully smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.IOUtils: void readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QLength to read: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
							"method":"<org.apache.commons.io.IOUtils: void readFully(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$i1 == $i0",
							"preConditions":[
								"staticinvoke <org.apache.commons.io.IOUtils: int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)>(parameteparameter1, parameter1) is not virtualinvoke parameter1.<java.nio.ByteBuffer: int remaining()>()"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.IOUtils: int read(java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)>(parameteparameter1, parameter1) is not virtualinvoke parameter1.<java.nio.ByteBuffer: int remaining()>()"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.EndianUtils",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.EndianUtils: long readSwappedUnsignedInteger(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: long readSwappedUnsignedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: long readSwappedUnsignedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: long readSwappedUnsignedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: long readSwappedUnsignedInteger(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"0 smaller than 8",
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.EndianUtils: double readSwappedDouble(java.io.InputStream)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: double readSwappedDouble(java.io.InputStream)>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>(r0)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>(r0) -> $i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"0 smaller than 8",
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"modifier":"private",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter0.<java.io.InputStream: int read()>()"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.FilenameUtils",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String,boolean)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>",
							"modifier":"private",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r6)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_normalize.<java.lang.String: int length()>()",
								"parameter_0_in_method_normalize is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) smaller or equal 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: int length()>() is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(virtualinvoke parameter0.<java.lang.String: char charAt(int)>(virtualinvoke parameter0.<java.lang.String: int length()>() - 1)) is 0",
								"virtualinvoke parameter_0_in_method_normalize.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_normalize.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r11)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r11) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_normalize.<java.lang.String: int length()>()",
								"parameter_0_in_method_normalize is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) smaller or equal 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: int length()>() is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(virtualinvoke parameter0.<java.lang.String: char charAt(int)>(virtualinvoke parameter0.<java.lang.String: int length()>() - 1)) is not 0",
								"virtualinvoke parameter_0_in_method_normalize.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_normalize.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter1.<java.lang.String: int length()>()",
								"parameter1 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) smaller or equal 0",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: int length()>() is 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter1.<java.lang.String: int length()>()",
								"parameter1 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger than 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDirectory must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r0 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r5)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) + parameter_1_in_method_doGetPath",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) + parameter_1_in_method_doGetPath",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>",
							"modifier":"private",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) + parameter1",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter_1_in_method_doGetFullPath is not 0",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter_1_in_method_doGetFullPath is not 0",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter_1_in_method_doGetFullPath is not 0",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter_1_in_method_doGetFullPath is not 0",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>",
							"modifier":"private",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter1 is not 0",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>",
							"modifier":"private",
							"invokeUnit":"$r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r5) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter1 is not 0",
								"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"modifier":"private",
							"throwUnit":"throw $r1",
							"callChain":"throw $r1",
							"throwUnitOrder":0,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r1)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter_0_in_method_removeExtension.<java.lang.String: int length()>()",
								"parameter_0_in_method_removeExtension is not null",
								"virtualinvoke parameter_0_in_method_removeExtension.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_removeExtension.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, $r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter_0_in_method_checkEquals is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_1_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r4) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter1.<java.lang.String: int length()>()",
								"parameter1 is not null",
								"parameter0 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, $r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter_0_in_method_checkEquals is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_1_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r4) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter1.<java.lang.String: int length()>()",
								"parameter1 is not null",
								"parameter0 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, $r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter_0_in_method_checkEquals is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_1_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r4) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter1.<java.lang.String: int length()>()",
								"parameter1 is not null",
								"parameter0 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, $r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter_0_in_method_checkEquals is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_1_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r4) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter1.<java.lang.String: int length()>()",
								"parameter1 is not null",
								"parameter0 is not null",
								"parameter_2_in_method_equals is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter2 is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QError normalizing one or both of the file names\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"r3 == null, r4 != null, z0 == 0, $r0 == null, $r1 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter2 is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
							],
							"keyPreCondition":"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"$z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter2 is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_0_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"$z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null, i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"parameter_0_in_method_checkEquals is not null",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter2 is 0",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
								"staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
								"parameter_1_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"$r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"parameter1 is not null",
								"parameter2 is not 0",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"invokeUnit":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r4)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r4) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter1.<java.lang.String: int length()>()",
								"parameter1 is not null",
								"parameter0 is not null",
								"parameter2 is not 0",
								"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
							"method":"<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
							"callChain":"staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"i2_1 >= $i0, $c1 != 0",
							"preConditions":[
								"0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.NameFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of names must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, null)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, null) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe array of names must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe list of names must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, null)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, null) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe list of names must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, r4)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, r4) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
								"parameter_0_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_0_in_method_checkEquals is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, r4)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, r4) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter_0_in_method_checkEquals is not null",
								"0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
								"parameter_1_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkEquals is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null",
							"preConditions":[
								"0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
								"parameter1 is null"
							],
							"keyPreCondition":"parameter1 is null"
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThe strings must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"$z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2)",
							"invokedMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
							"callChain":"$z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"r0 == null, r2 != null",
							"preConditions":[
								"parameter1 is not null",
								"0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
								"parameter_1_in_method_checkEquals is null"
							],
							"keyPreCondition":"parameter_1_in_method_checkEquals is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.comparator.SizeFileComparator",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"modifier":"public",
							"invokeUnit":"$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0)",
							"invokedMethod":"<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
								"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q is not a directory\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r1",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, $z1 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*\\Q does not exist\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)>",
							"modifier":"public",
							"invokeUnit":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
							"invokedMethod":"<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
							"callChain":"$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0",
							"preConditions":[
								"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
								"@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
								"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is not 0",
								"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is 0"
							],
							"keyPreCondition":"virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.comparator.SizeFileComparator: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QDelegate comparator is missing\\E",
							"method":"<org.apache.commons.io.comparator.SizeFileComparator: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r4.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r5)",
							"invokedMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>",
							"callChain":"specialinvoke $r4.<org.apache.commons.io.comparator.ReverseComparator: void <init>(java.util.Comparator)>($r5) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.ChunkedOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"i0 > 0",
							"preConditions":[
								"parameter1 smaller or equal 0"
							],
							"keyPreCondition":"parameter1 smaller or equal 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.WildcardFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r4",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r4",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r4",
							"callChain":"throw $r4",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard array must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r5",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r5",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard array must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r5",
							"callChain":"throw $r5",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard list must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe wildcard list must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.WildcardFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>",
							"modifier":"public",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.HiddenFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.HiddenFileFilter: void <clinit>()>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe filter must not be null\\E",
							"method":"<org.apache.commons.io.filefilter.HiddenFileFilter: void <clinit>()>",
							"modifier":"default",
							"invokeUnit":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2)",
							"invokedMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>",
							"callChain":"specialinvoke $r1.<org.apache.commons.io.filefilter.NotFileFilter: void <init>(org.apache.commons.io.filefilter.IOFileFilter)>($r2) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter_0_in_method_<init> is null"
							],
							"keyPreCondition":"parameter_0_in_method_<init> is null"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.ChunkedWriter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer,int)>",
							"modifier":"public",
							"throwUnit":"throw $r2",
							"callChain":"throw $r2",
							"throwUnitOrder":0,
							"conditions":"i0 > 0",
							"preConditions":[
								"parameter1 smaller or equal 0"
							],
							"keyPreCondition":"parameter1 smaller or equal 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer,int)>(r1, 4096)",
							"invokedMethod":"<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer,int)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer,int)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.ChunkedWriter: void <init>(java.io.Writer,int)>(r1, 4096) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"i0 > 0",
							"preConditions":[
								"parameter_1_in_method_<init> smaller or equal 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init> smaller or equal 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.SwappedDataInputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: char readChar()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: char readChar()>",
							"modifier":"public",
							"invokeUnit":"$s0 = virtualinvoke r0.<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>()",
							"invokedMethod":"<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$s0 = virtualinvoke r0.<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>() -> $s0 = staticinvoke <org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: char readChar()>",
							"modifier":"public",
							"invokeUnit":"$s0 = virtualinvoke r0.<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>()",
							"invokedMethod":"<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$s0 = virtualinvoke r0.<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>() -> $s0 = staticinvoke <org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>($r1) -> $i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: double readDouble()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: double readDouble()>",
							"modifier":"public",
							"invokeUnit":"$d0 = staticinvoke <org.apache.commons.io.EndianUtils: double readSwappedDouble(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: double readSwappedDouble(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$d0 = staticinvoke <org.apache.commons.io.EndianUtils: double readSwappedDouble(java.io.InputStream)>($r1) -> $l0 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>(r0) -> $i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"0 smaller than 8",
								"-1 is virtualinvoke parameter_0_in_method_readSwappedDouble.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedDouble.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: float readFloat()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: float readFloat()>",
							"modifier":"public",
							"invokeUnit":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: float readFloat()>",
							"modifier":"public",
							"invokeUnit":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: float readFloat()>",
							"modifier":"public",
							"invokeUnit":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: float readFloat()>",
							"modifier":"public",
							"invokeUnit":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$f0 = staticinvoke <org.apache.commons.io.EndianUtils: float readSwappedFloat(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(r0) -> $i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedFloat.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[])>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[],int,int)>",
							"throwUnit":"throw $r3",
							"throwUnitInMethod":"<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[],int,int)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[],int,int)>(r1, 0, $i0) -> throw $r3",
							"throwUnitOrder":-1,
							"conditions":"i5_1 <= 0, $i7 != $i4",
							"preConditions":[
								"parameter_2_in_method_readFully larger than 0",
								"-1 is virtualinvoke @this: org.apache.commons.io.input.SwappedDataInputStream.<org.apache.commons.io.input.SwappedDataInputStream: int read(byte[],int,int)>(parameter0, parameter_1_in_method_readFully + parameter_2_in_method_readFully - parameter_2_in_method_readFully, parameter_2_in_method_readFully)"
							],
							"keyPreCondition":"-1 is virtualinvoke @this: org.apache.commons.io.input.SwappedDataInputStream.<org.apache.commons.io.input.SwappedDataInputStream: int read(byte[],int,int)>(parameter0, parameter_1_in_method_readFully + parameter_2_in_method_readFully - parameter_2_in_method_readFully, parameter_2_in_method_readFully)"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"[\\s\\S]*",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: void readFully(byte[],int,int)>",
							"modifier":"public",
							"throwUnit":"throw $r3",
							"callChain":"throw $r3",
							"throwUnitOrder":0,
							"conditions":"i5_1 <= 0, $i7 != $i4",
							"preConditions":[
								"parameter2 larger than 0",
								"-1 is virtualinvoke @this: org.apache.commons.io.input.SwappedDataInputStream.<org.apache.commons.io.input.SwappedDataInputStream: int read(byte[],int,int)>(parameter0, parameter1 + parameter2 - parameter2, parameter2)"
							],
							"keyPreCondition":"-1 is virtualinvoke @this: org.apache.commons.io.input.SwappedDataInputStream.<org.apache.commons.io.input.SwappedDataInputStream: int read(byte[],int,int)>(parameter0, parameter1 + parameter2 - parameter2, parameter2)"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: int readInt()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: int readInt()>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: int readInt()>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1) -> $i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: int readInt()>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1) -> $i2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: int readInt()>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>($r1) -> $i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedInteger.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: java.lang.String readLine()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QOperation not supported: readLine()\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: java.lang.String readLine()>",
							"modifier":"public",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: long readLong()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: long readLong()>",
							"modifier":"public",
							"invokeUnit":"$l0 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$l0 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>($r1) -> $i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r1) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"0 smaller than 8",
								"-1 is virtualinvoke parameter_0_in_method_readSwappedLong.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedLong.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>",
							"modifier":"public",
							"invokeUnit":"$s0 = staticinvoke <org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$s0 = staticinvoke <org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: short readShort()>",
							"modifier":"public",
							"invokeUnit":"$s0 = staticinvoke <org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$s0 = staticinvoke <org.apache.commons.io.EndianUtils: short readSwappedShort(java.io.InputStream)>($r1) -> $i3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedShort.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: int readUnsignedShort()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: int readUnsignedShort()>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>($r1) -> $i0 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedUnsignedShort.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedUnsignedShort.<java.io.InputStream: int read()>()"
						},
						{
							"exceptionName":"java.io.EOFException",
							"message":"\\QUnexpected EOF reached\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: int readUnsignedShort()>",
							"modifier":"public",
							"invokeUnit":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>($r1)",
							"invokedMethod":"<org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>",
							"throwUnit":"throw $r2",
							"throwUnitInMethod":"<org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>",
							"callChain":"$i0 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedUnsignedShort(java.io.InputStream)>($r1) -> $i1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(r0) -> throw $r2",
							"throwUnitOrder":-1,
							"conditions":"$i2 != $i0",
							"preConditions":[
								"-1 is virtualinvoke parameter_0_in_method_readSwappedUnsignedShort.<java.io.InputStream: int read()>()"
							],
							"keyPreCondition":"-1 is virtualinvoke parameter_0_in_method_readSwappedUnsignedShort.<java.io.InputStream: int read()>()"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.SwappedDataInputStream: java.lang.String readUTF()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QOperation not supported: readUTF()\\E",
							"method":"<org.apache.commons.io.input.SwappedDataInputStream: java.lang.String readUTF()>",
							"modifier":"public",
							"throwUnit":"throw $r0",
							"callChain":"throw $r0",
							"throwUnitOrder":0,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.output.WriterOutputStream",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"throwUnit":"throw $r13",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13",
							"throwUnitOrder":-1,
							"preConditions":[
								"Direct Throw Without Any Condition"
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
							"throwUnit":"throw $r11",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11",
							"throwUnitOrder":-1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected coder result\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>(0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>(0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z2 == 0",
							"preConditions":[
								"parameter2 larger than 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void write(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected coder result\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void write(byte[])>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>(r1, 0, $i0)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>(r1, 0, $i0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>(0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z2 == 0",
							"preConditions":[
								"parameter_2_in_method_write larger than 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void write(int)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected coder result\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void write(int)>",
							"modifier":"public",
							"invokeUnit":"virtualinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>($r1, 0, 1)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
							"callChain":"virtualinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void write(byte[],int,int)>($r1, 0, 1) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>(0) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z2 == 0",
							"preConditions":[
								"parameter_2_in_method_write larger than 0",
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void close()>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected coder result\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void close()>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>(1)",
							"invokedMethod":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
							"throwUnit":"throw $r6",
							"throwUnitInMethod":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>(1) -> throw $r6",
							"throwUnitOrder":-1,
							"conditions":"$z2 == 0",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter_0_in_method_processInput).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.io.IOException",
							"message":"\\QUnexpected coder result\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void processInput(boolean)>",
							"modifier":"private",
							"throwUnit":"throw $r6",
							"callChain":"throw $r6",
							"throwUnitOrder":0,
							"conditions":"$z2 == 0",
							"preConditions":[
								"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter0).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
							],
							"keyPreCondition":"virtualinvoke virtualinvoke @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.charset.CharsetDecoder decoder>.<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>(@this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.ByteBuffer decoderIn>, @this: org.apache.commons.io.output.WriterOutputStream.<org.apache.commons.io.output.WriterOutputStream: java.nio.CharBuffer decoderOut>, parameter0).<java.nio.charset.CoderResult: boolean isUnderflow()>() is 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"modifier":"private",
							"throwUnit":"throw $r13",
							"callChain":"throw $r13",
							"throwUnitOrder":0,
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.IllegalArgumentException is caught."
							]
						},
						{
							"exceptionName":"java.lang.UnsupportedOperationException",
							"message":"\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
							"method":"<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
							"modifier":"private",
							"throwUnit":"throw $r11",
							"callChain":"throw $r11",
							"throwUnitOrder":1,
							"conditions":"$z0 != 0, i4_1 >= i1, $z1 != 0",
							"preConditions":[
								"virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter0.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
								"0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter0).length",
								"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
							],
							"keyPreCondition":"virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.filefilter.MagicNumberFileFilter",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $i0 != 0, $i5 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is not 0",
								"parameter_1_in_method_<init> smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init> smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $i0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is 0"
							],
							"keyPreCondition":"parameter0.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[])>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>(r1, 0L) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"throwUnit":"throw $r9",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L) -> throw $r9",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 == 0, $i2 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter_1_in_method_<init> smaller than 0"
							],
							"keyPreCondition":"parameter_1_in_method_<init> smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"throwUnit":"throw $r8",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L) -> throw $r8",
							"throwUnitOrder":-1,
							"conditions":"r1 != null, $z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String)>",
							"modifier":"public",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L)",
							"invokedMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"throwUnit":"throw $r7",
							"throwUnitInMethod":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>(r1, 0L) -> throw $r7",
							"throwUnitOrder":-1,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"modifier":"public",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":2,
							"conditions":"r1 != null, $z0 == 0, $i2 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"r1 != null, $z0 == 0",
							"preConditions":[
								"parameter0 is not null",
								"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
							],
							"keyPreCondition":"virtualinvoke parameter0.<java.lang.String: boolean isEmpty()>() is not 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(java.lang.String,long)>",
							"modifier":"public",
							"throwUnit":"throw $r7",
							"callChain":"throw $r7",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe offset cannot be negative\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"modifier":"public",
							"throwUnit":"throw $r9",
							"callChain":"throw $r9",
							"throwUnitOrder":2,
							"conditions":"r1 != null, $i0 != 0, $i5 >= 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is not 0",
								"parameter1 smaller than 0"
							],
							"keyPreCondition":"parameter1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number must contain at least one byte\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"modifier":"public",
							"throwUnit":"throw $r8",
							"callChain":"throw $r8",
							"throwUnitOrder":1,
							"conditions":"r1 != null, $i0 != 0",
							"preConditions":[
								"parameter0 is not null",
								"parameter0.length is 0"
							],
							"keyPreCondition":"parameter0.length is 0"
						},
						{
							"exceptionName":"java.lang.IllegalArgumentException",
							"message":"\\QThe magic number cannot be null\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: void <init>(byte[],long)>",
							"modifier":"public",
							"throwUnit":"throw $r7",
							"callChain":"throw $r7",
							"throwUnitOrder":0,
							"conditions":"r1 != null",
							"preConditions":[
								"parameter0 is null"
							],
							"keyPreCondition":"parameter0 is null"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: boolean accept(java.io.File)>",
					"modifier":"public",
					"exceptions":[
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThis statement would have triggered an Exception: virtualinvoke l3#2_2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack29)\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: boolean accept(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw r15",
							"callChain":"throw r15",
							"throwUnitOrder":1,
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.Throwable is caught."
							]
						},
						{
							"exceptionName":"java.lang.NullPointerException",
							"message":"\\QThis statement would have triggered an Exception: virtualinvoke l3#2_1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack30)\\E",
							"method":"<org.apache.commons.io.filefilter.MagicNumberFileFilter: boolean accept(java.io.File)>",
							"modifier":"public",
							"throwUnit":"throw r14",
							"callChain":"throw r14",
							"throwUnitOrder":0,
							"preConditions":[
								"This is a rethrow exception after an exception with type java.lang.Throwable is caught."
							]
						}
					]
				}
			]
		},
		{
			"className":"org.apache.commons.io.input.ReversedLinesFileReader$FilePart",
			"methods":[
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCount of requested bytes and actually read bytes don't match\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
							"modifier":"private",
							"throwUnit":"throw $r10",
							"callChain":"throw $r10",
							"throwUnitOrder":0,
							"conditions":"$i13 <= 0, $i9 == i1",
							"preConditions":[
								"parameter1 larger than 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter0).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter2) is not parameter2"
							],
							"keyPreCondition":"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter0).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter2) is not parameter2"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected leftover of the last block: leftOverOfThisFilePart=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"modifier":"private",
							"throwUnit":"throw $r25",
							"callChain":"throw $r25",
							"throwUnitOrder":1,
							"conditions":"$i0 <= $i8, $i9 <= 0, $r1 == null",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: long no> cmp 1L smaller or equal 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is not null"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCurrent currentLastCharPos unexpectedly positive... last readLine() should have returned something! currentLastCharPos=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"modifier":"private",
							"throwUnit":"throw $r21",
							"callChain":"throw $r21",
							"throwUnitOrder":0,
							"conditions":"$i0 <= $i8",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCount of requested bytes and actually read bytes don't match\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"modifier":"private",
							"invokeUnit":"specialinvoke $r22.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>($r13, $l4, $i5, $r14)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
							"callChain":"specialinvoke $r22.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>($r13, $l4, $i5, $r14) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i13 <= 0, $i9 == i1",
							"preConditions":[
								"parameter_1_in_method_<init> larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: long no> cmp 1L larger than 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>"
							],
							"keyPreCondition":"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
					"modifier":"private",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"modifier":"private",
							"throwUnit":"throw $r21",
							"callChain":"throw $r21",
							"throwUnitOrder":0,
							"conditions":"i10_1 <= $i12, z0 != 0, $i2 <= 0, i7 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is not 0",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"modifier":"private",
							"throwUnit":"throw $r21",
							"callChain":"throw $r21",
							"throwUnitOrder":0,
							"conditions":"i10_1 <= $i12, z0 != 0, i10_1 >= $i9, $i2 <= 0, i7 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger or equal staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: int access$600(org.apache.commons.io.input.ReversedLinesFileReader)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader this$0>)",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[],org.apache.commons.io.input.ReversedLinesFileReader$1)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCount of requested bytes and actually read bytes don't match\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[],org.apache.commons.io.input.ReversedLinesFileReader$1)>",
							"modifier":"default",
							"invokeUnit":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>(r1, l0, i1, r2)",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
							"callChain":"specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>(r1, l0, i1, r2) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i13 <= 0, $i9 == i1",
							"preConditions":[
								"parameter1 larger than 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter0).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter2) is not parameter2"
							],
							"keyPreCondition":"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter0).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter2) is not parameter2"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"modifier":"default",
							"invokeUnit":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>()",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"callChain":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"i10_1 <= $i12, z0 != 0, $i2 <= 0, i7 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is not 0",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected negative line length=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String access$100(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"modifier":"default",
							"invokeUnit":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>()",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>",
							"callChain":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: java.lang.String readLine()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"i10_1 <= $i12, z0 != 0, i10_1 >= $i9, $i2 <= 0, i7 >= 0",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1",
								"1 is 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger or equal staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: int access$600(org.apache.commons.io.input.ReversedLinesFileReader)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader this$0>)",
								"specialinvoke @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int getNewLineMatchByteCount(byte[],int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos>) larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> - @this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> + 1 + 1 smaller than 0"
						}
					]
				},
				{
					"methodName":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
					"modifier":"default",
					"exceptions":[
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QUnexpected leftover of the last block: leftOverOfThisFilePart=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"modifier":"default",
							"invokeUnit":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>()",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"throwUnit":"throw $r25",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"callChain":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>() -> throw $r25",
							"throwUnitOrder":-1,
							"conditions":"$i0 <= $i8, $i9 <= 0, $r1 == null",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: long no> cmp 1L smaller or equal 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is not null"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] leftOver> is not null"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCurrent currentLastCharPos unexpectedly positive... last readLine() should have returned something! currentLastCharPos=\\E[\\s\\S]*",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"modifier":"default",
							"invokeUnit":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>()",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"throwUnit":"throw $r21",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"callChain":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>() -> throw $r21",
							"throwUnitOrder":-1,
							"conditions":"$i0 <= $i8",
							"preConditions":[
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1"
							],
							"keyPreCondition":"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> larger than -1"
						},
						{
							"exceptionName":"java.lang.IllegalStateException",
							"message":"\\QCount of requested bytes and actually read bytes don't match\\E",
							"method":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart access$200(org.apache.commons.io.input.ReversedLinesFileReader$FilePart)>",
							"modifier":"default",
							"invokeUnit":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>()",
							"invokedMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>",
							"throwUnit":"throw $r10",
							"throwUnitInMethod":"<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>",
							"callChain":"$r1 = specialinvoke r0.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: org.apache.commons.io.input.ReversedLinesFileReader$FilePart rollOver()>() -> specialinvoke $r22.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: void <init>(org.apache.commons.io.input.ReversedLinesFileReader,long,int,byte[])>($r13, $l4, $i5, $r14) -> throw $r10",
							"throwUnitOrder":-1,
							"conditions":"$i13 <= 0, $i9 == i1",
							"preConditions":[
								"parameter_1_in_method_<init> larger than 0",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: int currentLastBytePos> smaller or equal -1",
								"@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: long no> cmp 1L larger than 0",
								"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>"
							],
							"keyPreCondition":"virtualinvoke staticinvoke <org.apache.commons.io.input.ReversedLinesFileReader: java.io.RandomAccessFile access$400(org.apache.commons.io.input.ReversedLinesFileReader)>(parameter_0_in_method_<init>).<java.io.RandomAccessFile: int read(byte[],int,int)>(@this: org.apache.commons.io.input.ReversedLinesFileReader$FilePart.<org.apache.commons.io.input.ReversedLinesFileReader$FilePart: byte[] data>, 0, parameter_2_in_method_<init>) is not parameter_2_in_method_<init>"
						}
					]
				}
			]
		}
	]
}