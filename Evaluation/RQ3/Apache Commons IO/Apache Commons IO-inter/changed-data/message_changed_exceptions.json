[
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r1, null) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.1": "throw $r7"
                    },
                    {
                        "version<2.5": "throw $r12"
                    },
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r11"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, null) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r1, null)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, null)"
                    }
                ],
                "throwUnit": "throw $r7",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r1, null) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.1": "throw $r12"
                    },
                    {
                        "version<2.5": "throw $r17"
                    },
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r16"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, null) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r1, null)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, null)"
                    }
                ],
                "throwUnit": "throw $r12",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r1, null) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.5": "throw $r3"
                    },
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, null) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r1, null)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] verifiedListFiles(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, null)"
                    }
                ],
                "throwUnit": "throw $r3",
                "throwUnitOrder": 2
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter1 is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r9"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r13"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_copyDirectory is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter_2_in_method_copyDirectory is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r24"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r33"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r24",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r25"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r34"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r25",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r18"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r18",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter1 is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r9"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r13"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
                "invokeUnit_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z3)"
                    }
                ],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter2 is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter2 is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<1.4": "throw $r24"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r33"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
                "invokeUnit_history": [
                    {
                        "version<1.4": null
                    }
                ],
                "throwUnit": "throw $r24",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<1.4": "throw $r25"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r34"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
                "invokeUnit_history": [
                    {
                        "version<1.4": null
                    }
                ],
                "throwUnit": "throw $r25",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.4": "throw $r18"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0)",
                "invokeUnit_history": [
                    {
                        "version<1.4": null
                    }
                ],
                "throwUnit": "throw $r18",
                "throwUnitOrder": 2
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter1 is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r13"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_3_in_method_copyDirectory is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter_3_in_method_copyDirectory is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> throw $r33"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r33",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> throw $r34"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r34",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r27",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter1 is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r13"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2)"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter3 is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter3 is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<2.5": "throw $r33"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r33",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.5": "throw $r34"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r34",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.5": "throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r27",
                "throwUnitOrder": 2
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>",
        "modifier": "public",
        "added_version": "v2.8.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter1 is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "$r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7)"
                    },
                    {
                        "version<2.12.0": "$r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4)"
                    }
                ],
                "throwUnit": "throw $r28",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter3 is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter3 is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2)"
                    }
                ],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\Qdirectory is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qsource is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter_1_in_method_copyDirectory is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> throw $r25"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r34"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r25",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter_1_in_method_copyDirectory is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r11"
                    },
                    {
                        "version<2.9.0": "throw $r10"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter_1_in_method_copyDirectory is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.0": [
                            [
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter_1_in_method_copyDirectory is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ],
                            [
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is not 0",
                                "parameter0 is not null",
                                "parameter_1_in_method_copyDirectory is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyDirectory is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r9"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r13"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z4, r35_2) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_copyDirectory is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_copyDirectory is not null",
                        "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "parameter_1_in_method_copyDirectory is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_1_in_method_copyDirectory is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter_2_in_method_copyDirectory is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_1_in_method_copyDirectory is not null",
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter_1_in_method_copyDirectory is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_copyDirectory is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> throw $r24"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r33"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r24",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyDirectory is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> throw $r18"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r18",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\QdestinationDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is null"
                            ],
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r10"
                    },
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destinationDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 2
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 3
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\QsourceDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r0, \"sourceDir\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r17"
                    },
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"sourceDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r0, \"sourceDir\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r17",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, 1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r39"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r37"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)"
                    }
                ],
                "throwUnit": "throw $r39",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, 1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r40"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r38"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)"
                    }
                ],
                "throwUnit": "throw $r40",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QFile \\E[\\s\\S]*\\Q does not exist\\E"
                    },
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, 1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r33"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r31"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)"
                    }
                ],
                "throwUnit": "throw $r33",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QUnable to write file \\E[\\s\\S]*\\Q on itself.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                            ],
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> throw $r18",
                "callChain_history": [
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r19"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r17"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r19",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QUnable to open file \\E[\\s\\S]*\\Q for writing.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.1": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> throw $r6",
                "callChain_history": [
                    {
                        "version<1.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r25"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r5"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r25",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QFailed to copy full contents from \\E[\\s\\S]*\\Q to \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "0L cmp virtualinvoke virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>().<java.nio.channels.FileChannel: long size()>() larger or equal 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    },
                    {
                        "version<2.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    },
                    {
                        "version<2.1": [
                            [
                                "0L cmp virtualinvoke virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>().<java.nio.channels.FileChannel: long size()>() larger or equal 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r30",
                "callChain_history": [
                    {
                        "version<1.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r13"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.1": "throw $r39"
                    },
                    {
                        "version<2.5": "throw $r37"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2)"
                    }
                ],
                "throwUnit": "throw $r39",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.1": "throw $r40"
                    },
                    {
                        "version<2.5": "throw $r38"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2)"
                    }
                ],
                "throwUnit": "throw $r40",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QFile \\E[\\s\\S]*\\Q does not exist\\E"
                    },
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.1": "throw $r33"
                    },
                    {
                        "version<2.5": "throw $r31"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.5": null
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2)"
                    }
                ],
                "throwUnit": "throw $r33",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QUnable to write file \\E[\\s\\S]*\\Q on itself.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                            ],
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> throw $r18",
                "callChain_history": [
                    {
                        "version<2.1": "throw $r19"
                    },
                    {
                        "version<2.8.0": "throw $r17"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.8.0": null
                    }
                ],
                "throwUnit": "throw $r19",
                "throwUnitOrder": 2
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QUnable to open file \\E[\\s\\S]*\\Q for writing.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.1": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is not null",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> throw $r6",
                "callChain_history": [
                    {
                        "version<1.1": "throw $r25"
                    },
                    {
                        "version<2.8.0": "throw $r5"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.8.0": null
                    }
                ],
                "throwUnit": "throw $r25",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QFailed to copy full contents from \\E[\\s\\S]*\\Q to \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "0L cmp virtualinvoke virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>().<java.nio.channels.FileChannel: long size()>() larger or equal 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    },
                    {
                        "version<2.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    },
                    {
                        "version<2.1": [
                            [
                                "0L cmp virtualinvoke virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>().<java.nio.channels.FileChannel: long size()>() larger or equal 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter1.<java.io.File: long length()>() is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r30",
                "callChain_history": [
                    {
                        "version<1.1": "throw $r13"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3)",
                "invokeUnit_history": [
                    {
                        "version<1.1": null
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitOrder": 3
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>",
        "modifier": "public",
        "added_version": "v2.8.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r3_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r3_2)"
                    }
                ],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r3_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r3_2)"
                    }
                ],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_copyFile is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_1_in_method_copyFile is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_copyFile is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> throw $r39"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r39"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r39"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r37"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1)"
                    }
                ],
                "throwUnit": "throw $r39",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QsrcFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qsource is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> throw $r40"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r40"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r40"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r38"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1)"
                    }
                ],
                "throwUnit": "throw $r40",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QFile \\E[\\s\\S]*\\Q does not exist\\E"
                    },
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> throw $r33"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r33"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r33"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r31"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1)"
                    }
                ],
                "throwUnit": "throw $r33",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QdestinationDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<1.3": "throw $r10"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r10"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"destinationDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": null
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QDestination is not a directory\\E"
                    },
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<1.3": "throw $r4"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": null
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QSource '\\E[\\s\\S]*\\Q' and destination '\\E[\\s\\S]*\\Q' are the same\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QUnable to write file \\E[\\s\\S]*\\Q on itself.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                            ],
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> throw $r18",
                "callChain_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> throw $r19"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r19"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r19"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r17"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1)"
                    }
                ],
                "throwUnit": "throw $r19",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QDestination '\\E[\\s\\S]*\\Q' exists but is read-only\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QUnable to open file \\E[\\s\\S]*\\Q for writing.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.1": [
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
                                "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is not null",
                                "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> throw $r6",
                "callChain_history": [
                    {
                        "version<1.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> throw $r25"
                    },
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> throw $r5"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r5"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r5"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1)"
                    }
                ],
                "throwUnit": "throw $r25",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QFailed to copy full contents from '\\E[\\s\\S]*\\Q' to '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<1.1": "\\QFailed to copy full contents from \\E[\\s\\S]*\\Q to \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "0L cmp virtualinvoke virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>().<java.nio.channels.FileChannel: long size()>() larger or equal 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.1": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    },
                    {
                        "version<2.0": [
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    },
                    {
                        "version<2.1": [
                            [
                                "0L cmp virtualinvoke virtualinvoke new java.io.FileInputStream.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>().<java.nio.channels.FileChannel: long size()>() larger or equal 0",
                                "parameter0 is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>() is null",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.io.File getParentFile()>().<java.io.File: boolean mkdirs()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: long length()>() cmp virtualinvoke parameter_1_in_method_copyFile.<java.io.File: long length()>() is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r30",
                "callChain_history": [
                    {
                        "version<1.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> throw $r13"
                    },
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r4"
                    },
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyFile(java.io.File,java.io.File,boolean)>(r0, r1, z3) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1)",
                "invokeUnit_history": [
                    {
                        "version<1.3": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, 1)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_copyFile is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_1_in_method_copyFile is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_copyFile is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r39"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r39"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r37"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1)"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)"
                    }
                ],
                "throwUnit": "throw $r39",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\QsrcFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qsource is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r40"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r40"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r38"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1)"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)"
                    }
                ],
                "throwUnit": "throw $r40",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1) -> throw $r33"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r33"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> throw $r31"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r1, $r2, z1)"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1)"
                    }
                ],
                "throwUnit": "throw $r33",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\QdestinationDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r10"
                    },
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"destinationDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyToDirectory(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.6",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_copyFile is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                                "parameter_1_in_method_copyFile is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_copyFile is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r8",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QdestinationDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is null"
                            ],
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r10"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destinationDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)"
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QdestinationDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r10"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"destinationDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QsourceFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qsource is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "parameter0 is not null",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"sourceFile\")",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)"
                    }
                ],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter_1_in_method_copyDirectory is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r11"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r10"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter_1_in_method_copyDirectory is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter_1_in_method_copyDirectory is not null",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r27",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_copyDirectory is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_copyDirectory is not null",
                        "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                        "parameter_1_in_method_copyDirectory is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "parameter_1_in_method_copyDirectory is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter_2_in_method_copyDirectory is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_1_in_method_copyDirectory is not null",
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "parameter_1_in_method_copyDirectory is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_copyDirectory is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, $r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r8",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QsourceDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r0, \"sourceDir\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> throw $r17"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"sourceDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>(r0, r7)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r17",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectoryToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QsourceFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"sourceFile\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r8"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r8",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyToDirectory(java.lang.Iterable,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.6",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter_1_in_method_copyFile.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
                        "parameter_0_in_method_copyFileToDirectory is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_copyFile.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_copyFileToDirectory is not null",
                        "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                        "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFile is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_copyFileToDirectory is not null",
                                "parameter_1_in_method_copyFileToDirectory is not null",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is not null",
                                "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                                "parameter_1_in_method_copyFile is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_copyFile is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r8",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QsrcFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qsource is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
                        "parameter_0_in_method_copyFileToDirectory is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "parameter_1_in_method_copyFileToDirectory is not null",
                        "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                        "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                        "parameter0 is not null",
                        "parameter_0_in_method_copyFileToDirectory is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_1_in_method_copyFileToDirectory is not null",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is not null",
                                "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                                "parameter_0_in_method_copyFileToDirectory is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_0_in_method_copyFileToDirectory is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_copyFileToDirectory is not null",
                        "parameter_1_in_method_copyFileToDirectory is not null",
                        "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                        "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_copyFileToDirectory is not null",
                                "parameter_1_in_method_copyFile is not null",
                                "parameter_1_in_method_copyFileToDirectory is not null",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is not null",
                                "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                                "virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r2, $r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, $r2, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r5_2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QdestinationDir is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
                        "parameter_1_in_method_copyFileToDirectory is not null",
                        "parameter_0_in_method_copyFileToDirectory is not null",
                        "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_copyFileToDirectory is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                                "parameter_1_in_method_copyFileToDirectory is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_copyFileToDirectory is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r10"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"destinationDir\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_copyFileToDirectory is not null",
                        "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
                        "parameter_0_in_method_copyFileToDirectory is not null",
                        "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_1_in_method_copyFileToDirectory is not null",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "interfaceinvoke interfaceinvoke parameter0.<java.lang.Iterable: java.util.Iterator iterator()>().<java.util.Iterator: boolean hasNext()>() is not 0",
                                "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_1_in_method_copyFileToDirectory.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryIfExists(java.io.File,java.lang.String)>(r1, \"destinationDir\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>(r3, r4)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFileToDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QsourceIterable is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSources must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"sourceIterable\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r5"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void copyURLToFile(java.net.URL,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QFile '\\E[\\s\\S]*\\Q' cannot be written to\\E",
                "message_history": [
                    {
                        "version<1.3": "\\QUnable to open file \\E[\\s\\S]*\\Q for writing.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.3": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyInputStreamToFile(java.io.InputStream,java.io.File)>($r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyToFile(java.io.InputStream,java.io.File)>(r0, r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r8",
                "callChain_history": [
                    {
                        "version<1.3": "throw $r10"
                    },
                    {
                        "version<2.0": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r2) -> throw $r8"
                    },
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyInputStreamToFile(java.io.InputStream,java.io.File)>($r1, r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0) -> throw $r8"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyInputStreamToFile(java.io.InputStream,java.io.File)>($r1, r2) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File,boolean)>(r0, 0) -> throw $r8"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyInputStreamToFile(java.io.InputStream,java.io.File)>($r1, r2)",
                "invokeUnit_history": [
                    {
                        "version<1.3": null
                    },
                    {
                        "version<2.0": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.io.FileOutputStream openOutputStream(java.io.File)>(r2)"
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\Qdirectory is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile must not be null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(parameter0) is 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.6": [
                            [
                                "staticinvoke <org.apache.commons.io.Java7Support: boolean isAtLeastJava7()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0) -> $r2 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r1, null) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.6": "$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r8"
                    },
                    {
                        "version<2.7": "$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File delete(java.io.File)>(r0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void cleanDirectory(java.io.File)>(r0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "$z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File delete(java.io.File)>(r0)"
                    }
                ],
                "throwUnit": "throw $r8",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: boolean directoryContains(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_directoryContains is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: boolean isEmpty(java.lang.String)>(parameter_0_in_method_directoryContains) is 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: boolean isEmpty(java.lang.String)>(parameter_1_in_method_directoryContains) is 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_directoryContains is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter_0_in_method_directoryContains is not null",
                                "parameter_1_in_method_directoryContains is not null",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "parameter_0_in_method_directoryContains is null"
                            ],
                            [
                                "parameter_0_in_method_directoryContains is not null",
                                "parameter_1_in_method_directoryContains is not null",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "parameter_1_in_method_directoryContains is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_0_in_method_directoryContains is not null",
                                "parameter_1_in_method_directoryContains is not null",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "parameter_1_in_method_directoryContains is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_directoryContains is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_directoryContains is null",
                            "parameter_1_in_method_directoryContains is null"
                        ]
                    }
                ],
                "callChain": "$z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3) -> $z2 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.7": "$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3) -> $z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> throw $r1"
                    },
                    {
                        "version<2.9.0": "$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3) -> $z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    },
                    {
                        "version<2.12.0": "$z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3) -> $z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z2 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "$z3 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>($r2, $r3)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QNot a directory: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void forceDelete(java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QCannot delete file: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUnable to delete file: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "This is a rethrow exception after an exception with type java.io.IOException is caught."
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [],
                "keyPreCondition_history": [
                    {
                        "version<1.4": [
                            "virtualinvoke parameter0.<java.io.File: boolean delete()>() is 0"
                        ]
                    },
                    {
                        "version<2.7": [
                            "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0"
                        ]
                    }
                ],
                "callChain": "throw $r20",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r5"
                    },
                    {
                        "version<2.9.0": "throw $r17"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void forceDeleteOnExit(java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.6": [
                            [
                                "staticinvoke <org.apache.commons.io.Java7Support: boolean isAtLeastJava7()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.6": "staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectoryOnExit(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r8"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectoryOnExit(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectoryOnExit(java.io.File)>(r0) -> $z1 = staticinvoke <org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>(r0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectoryOnExit(java.io.File)>(r0)"
                    }
                ],
                "throwUnit": "throw $r8",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void deleteDirectoryOnExit(java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.io.File getFile(java.io.File,java.lang.String[])>",
        "modifier": "public",
        "added_version": "v2.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.1",
                "exceptionName_history": [],
                "message": "\\Qnames is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\Qnames must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"names\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r4"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.1",
                "exceptionName_history": [],
                "message": "\\Qdirectory is null\\E",
                "message_history": [
                    {
                        "version<2.5": "\\Qdirectorydirectory must not be null\\E"
                    },
                    {
                        "version<2.7": "\\Qdirectory must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"directory\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r5"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.io.File getFile(java.lang.String[])>",
        "modifier": "public",
        "added_version": "v2.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.1",
                "exceptionName_history": [],
                "message": "\\Qnames is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\Qnames must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"names\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r4"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QThe reference file '\\E[\\s\\S]*\\Q' doesn't exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, \"reference\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, \"reference\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r2",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: boolean isSymlink(java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.6": [
                            [
                                "staticinvoke <org.apache.commons.io.Java7Support: boolean isAtLeastJava7()>() is 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.6": "throw $r8"
                    },
                    {
                        "version<2.7": "throw $r2"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r8",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
        "modifier": "public",
        "added_version": "v1.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QfileFilter is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QParameter 'fileFilter' is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"fileFilter\")",
                "callChain_history": [
                    {
                        "version<2.0": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> throw $r9"
                    },
                    {
                        "version<2.2": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> throw $r12"
                    },
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.5": "\\QParameter 'directory' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.0": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> throw $r10"
                    },
                    {
                        "version<2.2": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> throw $r13"
                    },
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.util.Iterator iterateFiles(java.io.File,java.lang.String[],boolean)>",
        "modifier": "public",
        "added_version": "v1.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QfileFilter is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QParameter 'fileFilter' is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_0_in_method_<init> is not null",
                        "parameter_1_in_method_listFiles is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_1_in_method_listFiles is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"fileFilter\")",
                "callChain_history": [
                    {
                        "version<2.0": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r9"
                    },
                    {
                        "version<2.2": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r12"
                    },
                    {
                        "version<2.7": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.5": "\\QParameter 'directory' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.0": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r10"
                    },
                    {
                        "version<2.2": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r13"
                    },
                    {
                        "version<2.7": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0) -> $r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r2 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>(r0, r1, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.util.Iterator iterateFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
        "modifier": "public",
        "added_version": "v2.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QfileFilter is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QParameter 'fileFilter' is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"fileFilter\")",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.5": "\\QParameter 'directory' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1, r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r3",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QfileFilter is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QParameter 'fileFilter' is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"fileFilter\")",
                "callChain_history": [
                    {
                        "version<2.0": "throw $r9"
                    },
                    {
                        "version<2.2": "throw $r12"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.2": null
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r9",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.5": "\\QParameter 'directory' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.0": "throw $r10"
                    },
                    {
                        "version<2.2": "throw $r13"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.2": null
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,java.lang.String[],boolean)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QfileFilter is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QParameter 'fileFilter' is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_0_in_method_<init> is not null",
                        "parameter_1_in_method_listFiles is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_1_in_method_listFiles is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"fileFilter\")",
                "callChain_history": [
                    {
                        "version<2.0": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r9"
                    },
                    {
                        "version<2.2": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r12"
                    },
                    {
                        "version<2.7": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.5": "\\QParameter 'directory' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> $r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 0) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.0": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r10"
                    },
                    {
                        "version<2.2": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> throw $r13"
                    },
                    {
                        "version<2.7": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r4 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>(r3, $r5, $r7_2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: java.util.Collection listFiles(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.util.Collection listFilesAndDirs(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter)>",
        "modifier": "public",
        "added_version": "v2.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QfileFilter is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QParameter 'fileFilter' is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"fileFilter\")",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.2",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QParameter 'directory' is not a directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.5": "\\QParameter 'directory' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FileUtils: java.util.Collection innerListFilesOrDirectories(java.io.File,org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.filefilter.IOFileFilter,boolean)>(r0, r1, r2, 1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r3",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void validateListFilesParameters(java.io.File,org.apache.commons.io.filefilter.IOFileFilter)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUnknown I/O error listing contents of directory: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QFailed to list contents of \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is not 0",
                        "parameter1 is not null",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r6 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>(r0, r1, r6, z3, r27_2) -> throw $r27"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List,java.nio.file.CopyOption[])>(r0, r1, r6, z3, r28_2, r7) -> throw $r28"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> $r7 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File[] listFiles(java.io.File,java.io.FileFilter)>(r0, r4) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r27",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.util.List)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_copyDirectory is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.2": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter_2_in_method_copyDirectory is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r33"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r33",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.2": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r27"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r27",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "org.apache.commons.io.FileExistsException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [
                    {
                        "version<2.0": "java.io.IOException"
                    }
                ],
                "message": "\\QFile element in parameter '%s' already exists: '%s'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void requireAbsent(java.io.File,java.lang.String)>(r1, \"destDir\") -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.2": "throw $r10"
                    },
                    {
                        "version<2.5": "throw $r19"
                    },
                    {
                        "version<2.9.0": "throw $r24"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void requireAbsent(java.io.File,java.lang.String)>(r1, \"destDir\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 4
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qdestination is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destination\")",
                "callChain_history": [
                    {
                        "version<2.2": "throw $r28"
                    },
                    {
                        "version<2.5": "throw $r37"
                    },
                    {
                        "version<2.7": "throw $r42"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r28",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")",
                "callChain_history": [
                    {
                        "version<2.2": "throw $r29"
                    },
                    {
                        "version<2.5": "throw $r38"
                    },
                    {
                        "version<2.7": "throw $r43"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r29",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.11.0",
                "exceptionName_history": [],
                "message": "\\Qdirectory is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qsource is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                        "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean setLastModified(long)>(parameter_1_in_method_setLastModified) is not 0",
                        "virtualinvoke parameter_0_in_method_copyFile.<java.io.File: boolean isFile()>() is not 0",
                        "parameter_0_in_method_copyFile is not null",
                        "parameter_1_in_method_copyFile is not null",
                        "parameter_2_in_method_requireEqualSizes cmp parameter_3_in_method_requireEqualSizes is not 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.2": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "parameter0 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"directory\")",
                "callChain_history": [
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> throw $r34"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void deleteDirectory(java.io.File)>(r0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r34",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void moveDirectoryToDirectory(java.io.File,java.io.File,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QCannot create directory '\\E[\\s\\S]*\\Q'.\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "parameter2 is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.8.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File mkdirs(java.io.File)>(r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File mkdirs(java.io.File)>(r1)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 3
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.11.0",
                "exceptionName_history": [],
                "message": "\\QtargetFile is null\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_copyDirectory is not 0",
                        "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_moveDirectory is not null",
                        "virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
                        "virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                        "virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "parameter_1_in_method_moveDirectory is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: java.nio.file.Path toPath()>() is not null",
                                "parameter_2_in_method_copyDirectory is not 0",
                                "virtualinvoke parameter0.<java.io.File: java.io.File[] listFiles()>() is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_1_in_method_moveDirectory is not null",
                                "virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean canWrite()>() is not 0",
                                "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter_1_in_method_moveDirectory) is 0",
                                "virtualinvoke virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean startsWith(java.lang.String)>(virtualinvoke virtualinvoke virtualinvoke new java.lang.StringBuilder.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>()).<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(<java.io.File: java.lang.String separator>).<java.lang.StringBuilder: java.lang.String toString()>()) is 0",
                                "virtualinvoke parameter_1_in_method_moveDirectory.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_1_in_method_moveDirectory is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_moveDirectory is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, r12_2, z1, r5) -> staticinvoke <org.apache.commons.io.FileUtils: boolean setTimes(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"targetFile\")",
                "callChain_history": [
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean)>(r0, r1, null, z0) -> staticinvoke <org.apache.commons.io.FileUtils: void copyDirectory(java.io.File,java.io.File,java.io.FileFilter,boolean,java.nio.file.CopyOption[])>(r0, r1, r2, z0, $r3) -> staticinvoke <org.apache.commons.io.FileUtils: void doCopyDirectory(java.io.File,java.io.File,java.io.FileFilter,java.util.List,boolean,java.nio.file.CopyOption[])>(r0, r1, r4, $r6, z1, $r14_2) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,java.io.File)>(r0, r3) -> staticinvoke <org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>(r1, $l0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>(r0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void setLastModified(java.io.File,long)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void moveDirectory(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qdestination is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination directory must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destination\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r18"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r18",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r19"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r19",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=0]\\E",
                "message_history": [
                    {
                        "version<2.11.0": "\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=\\E[\\s\\S]*\\Q]\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter2 is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.8.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter2 is 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                        ]
                    }
                ],
                "callChain": "throw $r4",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r10"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 2
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qtarget is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke virtualinvoke parameter0.<java.io.File: java.lang.String getCanonicalPath()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter1.<java.io.File: java.lang.String getCanonicalPath()>()) is 0",
                        "virtualinvoke parameter_0_in_method_mkdirs.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, 0, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r39"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r37"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r8"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"target\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireCanWrite(java.io.File,java.lang.String)>(r1, \"destFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r39",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QsrcFile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    },
                    {
                        "version<2.9.0": "\\Qsource is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, 0, r2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)",
                "callChain_history": [
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r40"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r38"
                    },
                    {
                        "version<2.7": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r9"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireFile(java.io.File,java.lang.String)>(r0, \"srcFile\") -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, r1)"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r40",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QSource '\\E[\\s\\S]*\\Q' does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean renameTo(java.io.File)>(parameter1) is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, 0, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.1": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r33"
                    },
                    {
                        "version<2.5": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> throw $r31"
                    },
                    {
                        "version<2.8.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>(r0, r1, 1) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean,java.nio.file.CopyOption[])>(r0, r1, z0, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void checkFileRequirements(java.io.File,java.io.File)>(r0, r1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireFileCopy(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r0, \"source\") -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r33",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void copyFile(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "org.apache.commons.io.FileExistsException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [
                    {
                        "version<2.0": "java.io.IOException"
                    }
                ],
                "message": "\\QFile element in parameter '%s' already exists: '%s'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' already exists\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isFile()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireAbsent(java.io.File,java.lang.String)>(r1, \"destFile\") -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r16"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void requireAbsent(java.io.File,java.lang.String)>(r1, null) -> throw $r1"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r16",
                "throwUnitOrder": 4
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qdestination is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destination\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r34"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destination\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r34",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2) -> staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r35"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFile(java.io.File,java.io.File,java.nio.file.CopyOption[])>(r0, r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r35",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QCannot create directory '\\E[\\s\\S]*\\Q'.\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "parameter2 is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.8.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File mkdirs(java.io.File)>(r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File mkdirs(java.io.File)>(r1)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 3
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=\\E[\\s\\S]*\\Q]\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.8.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r1, \"destDir\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r10"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r1, \"destDir\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitOrder": 2
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qdestination is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination directory must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destination\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r18"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r18",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r19"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r19",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: void moveToDirectory(java.io.File,java.io.File,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qdestination is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QDestination must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"destination\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r8"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r8",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qsource is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QSource must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"source\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r9"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void validateMoveParameters(java.io.File,java.io.File)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.7": null
                    }
                ],
                "throwUnit": "throw $r9",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "2.8.0",
                "removed_version": "2.11.0",
                "exceptionName_history": [],
                "message": "\\QCannot create directory '\\E[\\s\\S]*\\Q'.\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination '\\E[\\s\\S]*\\Q' is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                        "parameter2 is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File mkdirs(java.io.File)>(r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z1) -> throw $r4"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>"
            },
            {
                "exceptionName": "java.io.FileNotFoundException",
                "modifier": "public",
                "added_version": "2.8.0",
                "removed_version": "2.11.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QDestination directory '\\E[\\s\\S]*\\Q' does not exist [createDestDir=\\E[\\s\\S]*\\Q]\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ],
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0",
                                "parameter2 is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean mkdirs()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExistsChecked(java.io.File,java.lang.String)>(r1, \"destDir\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z1) -> throw $r10"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>(r0, r1, z1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void moveFileToDirectory(java.io.File,java.io.File,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: long sizeOf(java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, \"file\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r5"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, \"file\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.math.BigInteger sizeOfAsBigInteger(java.io.File)>",
        "modifier": "public",
        "added_version": "v2.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.4",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, \"file\") -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r7"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, \"file\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "throw $r7",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "throw $r7"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")",
                "invokeUnit_history": [
                    {
                        "version<2.4": null
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")"
                    }
                ],
                "throwUnit": "throw $r7",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "throw $r12"
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")",
                "invokeUnit_history": [
                    {
                        "version<2.4": null
                    },
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")"
                    }
                ],
                "throwUnit": "throw $r12",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileUtils",
        "methodSignature": "<org.apache.commons.io.FileUtils: java.math.BigInteger sizeOfDirectoryAsBigInteger(java.io.File)>",
        "modifier": "public",
        "added_version": "v2.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.4",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.4",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0)"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\")"
                    }
                ],
                "throwUnit": "throw $r6",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileSystemUtils",
        "methodSignature": "<org.apache.commons.io.FileSystemUtils: long freeSpace(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_freeSpaceOS is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_freeSpaceOS is 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.1",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QPath must not be null\\E",
                "message_history": [
                    {
                        "version<2.5": "\\QPath must not be empty\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2) -> throw $r5",
                "callChain_history": [
                    {
                        "version<1.2": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int)>(r0, $i0) -> throw $r4"
                    },
                    {
                        "version<2.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean)>(r0, $i0, 0) -> throw $r4"
                    },
                    {
                        "version<2.9.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L) -> throw $r4"
                    }
                ],
                "invokeUnit": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i0, 0, $r2)",
                "invokeUnit_history": [
                    {
                        "version<1.2": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int)>(r0, $i0)"
                    },
                    {
                        "version<2.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean)>(r0, $i0, 0)"
                    },
                    {
                        "version<2.9.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i0, 0, -1L)"
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileSystemUtils",
        "methodSignature": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb()>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_freeSpaceKb is not null",
                        "parameter_2_in_method_freeSpaceOS is not 0",
                        "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_freeSpaceKb is not null",
                        "parameter_2_in_method_freeSpaceOS is 0",
                        "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QPath must not be null\\E",
                "message_history": [
                    {
                        "version<2.5": "\\QPath must not be empty\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_freeSpaceKb is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_freeSpaceKb is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> throw $r5",
                "callChain_history": [
                    {
                        "version<2.9.0": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L) -> $l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4"
                    }
                ],
                "invokeUnit": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>(-1L)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileSystemUtils",
        "methodSignature": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(long)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_freeSpaceKb is not null",
                        "parameter_2_in_method_freeSpaceOS is not 0",
                        "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_freeSpaceKb is not null",
                        "parameter_2_in_method_freeSpaceOS is 0",
                        "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_freeSpaceKb.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QPath must not be null\\E",
                "message_history": [
                    {
                        "version<2.5": "\\QPath must not be empty\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_freeSpaceKb is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_freeSpaceKb is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> throw $r5",
                "callChain_history": [
                    {
                        "version<2.9.0": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4"
                    }
                ],
                "invokeUnit": "$l1 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>($r1, l0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileSystemUtils",
        "methodSignature": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_freeSpaceOS is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_freeSpaceOS is 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.2",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QPath must not be null\\E",
                "message_history": [
                    {
                        "version<2.5": "\\QPath must not be empty\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> throw $r5",
                "callChain_history": [
                    {
                        "version<2.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean)>(r0, $i0, 1) -> throw $r4"
                    },
                    {
                        "version<2.9.0": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L) -> $l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4"
                    }
                ],
                "invokeUnit": "$l0 = staticinvoke <org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>(r0, -1L)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "$l1 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean)>(r0, $i0, 1)"
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileSystemUtils",
        "methodSignature": "<org.apache.commons.io.FileSystemUtils: long freeSpaceKb(java.lang.String,long)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_freeSpaceOS is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l3 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_freeSpaceOS is 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> $l4_1 = virtualinvoke r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceWindows(java.lang.String,java.time.Duration)>(r0, r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>(r0, 0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QPath must not be null\\E",
                "message_history": [
                    {
                        "version<2.5": "\\QPath must not be empty\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2) -> throw $r5",
                "callChain_history": [
                    {
                        "version<2.9.0": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0) -> throw $r4"
                    }
                ],
                "invokeUnit": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,java.time.Duration)>(r0, $i1, 1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "$l2 = virtualinvoke $r1.<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>(r0, $i1, 1, l0)"
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileSystemUtils: long freeSpaceOS(java.lang.String,int,boolean,long)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.file.PathUtils",
        "methodSignature": "<org.apache.commons.io.file.PathUtils: boolean isNewer(java.nio.file.Path,long,java.nio.file.LinkOption[])>",
        "modifier": "public",
        "added_version": "v2.9.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\Qpath is null\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\Qfile is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "staticinvoke <org.apache.commons.io.file.PathUtils: boolean notExists(java.nio.file.Path,java.nio.file.LinkOption[])>(parameter0, newarray (java.nio.file.LinkOption)[0]) is 0",
                        "parameter0 is not null",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.file.PathUtils: boolean isNewer(java.nio.file.Path,java.nio.file.attribute.FileTime,java.nio.file.LinkOption[])>(r0, $r1, r2) -> $i0 = staticinvoke <org.apache.commons.io.file.PathUtils: int compareLastModifiedTimeTo(java.nio.file.Path,java.nio.file.attribute.FileTime,java.nio.file.LinkOption[])>(r0, r2, r3) -> $r2 = staticinvoke <org.apache.commons.io.file.PathUtils: java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path,java.nio.file.LinkOption[])>(r0, r1) -> $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"path\")",
                "callChain_history": [
                    {
                        "version<2.12.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.file.PathUtils: boolean isNewer(java.nio.file.Path,java.nio.file.attribute.FileTime,java.nio.file.LinkOption[])>(r0, $r1, r2)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": null
                    }
                ],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.XmlStreamReader",
        "methodSignature": "<org.apache.commons.io.input.XmlStreamReader: void <init>(java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"file\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "$r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2)"
                    },
                    {
                        "version<2.11.0": "$r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r2, \"file\")"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "$r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2)",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.XmlStreamReader",
        "methodSignature": "<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URL)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qconn is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\Qconm is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_0_in_method_<init> is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_<init> is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r4, null) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"conn\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r4, null) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"conm\")"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>($r4, null)",
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"conm\")",
                "throwUnitInMethod": "<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.XmlStreamReader",
        "methodSignature": "<org.apache.commons.io.input.XmlStreamReader: void <init>(java.net.URLConnection,java.lang.String)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QurlConnection is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\Qconm is null\\E"
                    },
                    {
                        "version<2.12.0": "\\Qconn is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"urlConnection\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"conm\")"
                    },
                    {
                        "version<2.12.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"conn\")"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"conm\")",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.FileFilterUtils",
        "methodSignature": "<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeCVSAware(org.apache.commons.io.filefilter.IOFileFilter)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QThe wildcard must not be null\\E",
                "message_history": [
                    {
                        "version<1.3": "\\QThe name must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter cvsFilter> is null",
                        "parameter_0_in_method_nameFileFilter is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_nameFileFilter is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\"CVS\") -> specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4",
                "callChain_history": [
                    {
                        "version<1.3": "$r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\"CVS\") -> specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\"CVS\")",
                "invokeUnit_history": [],
                "throwUnit": "throw $r3",
                "throwUnitInMethod": "<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.FileFilterUtils",
        "methodSignature": "<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter makeSVNAware(org.apache.commons.io.filefilter.IOFileFilter)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.1",
                "removed_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QThe wildcard must not be null\\E",
                "message_history": [
                    {
                        "version<1.3": "\\QThe name must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter svnFilter> is null",
                        "parameter_0_in_method_nameFileFilter is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_nameFileFilter is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\".svn\") -> specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4",
                "callChain_history": [
                    {
                        "version<1.3": "$r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\".svn\") -> specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> throw $r3"
                    }
                ],
                "invokeUnit": "$r6 = staticinvoke <org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>(\".svn\")",
                "invokeUnit_history": [],
                "throwUnit": "throw $r3",
                "throwUnitInMethod": "<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.FileFilterUtils",
        "methodSignature": "<org.apache.commons.io.filefilter.FileFilterUtils: org.apache.commons.io.filefilter.IOFileFilter nameFileFilter(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QThe wildcard must not be null\\E",
                "message_history": [
                    {
                        "version<1.3": "\\QThe name must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r5",
                "callChain_history": [
                    {
                        "version<1.3": "specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> throw $r3"
                    },
                    {
                        "version<2.9.0": "specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1) -> specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4"
                    }
                ],
                "invokeUnit": "specialinvoke $r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>(r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r3",
                "throwUnitInMethod": "<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String concat(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger than 0",
                        "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r14 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) smaller or equal 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int length()>() is 0",
                        "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r13 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_normalize is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) smaller or equal 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int length()>() is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(virtualinvoke parameter0.<java.lang.String: char charAt(int)>(virtualinvoke parameter0.<java.lang.String: int length()>() - 1)) is not 0",
                        "virtualinvoke parameter_0_in_method_normalize.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_normalize.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r11) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r11) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r12 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r11)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_normalize is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter1) smaller or equal 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int length()>() is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: boolean isSeparator(char)>(virtualinvoke parameter0.<java.lang.String: char charAt(int)>(virtualinvoke parameter0.<java.lang.String: int length()>() - 1)) is 0",
                        "virtualinvoke parameter_0_in_method_normalize.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_normalize.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r7 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>($r6)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean directoryContains(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v2.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: boolean isEmpty(java.lang.String)>(parameter0) is 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: boolean isEmpty(java.lang.String)>(parameter1) is 0",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter0 is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter0 is null",
                            "parameter1 is null"
                        ]
                    }
                ],
                "callChain": "$z2 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.7": "$z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z2 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$z0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0, r1)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "parameter_1_in_method_doNormalize is not 92",
                        "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r5) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkEquals is not null",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                        "parameter_1_in_method_doNormalize is not 92",
                        "parameter_1_in_method_checkEquals is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.4": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkEquals is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkEquals is null",
                            "parameter_1_in_method_checkEquals is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r5_2, r6_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<1.4": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r2_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0_2, r1_2) -> throw $r1"
                    },
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r4_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2_2, r3_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QError normalizing one or both of the file names is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QError normalizing one or both of the file names\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null",
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r1, \"Error normalizing one or both of the file names\")",
                "callChain_history": [
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> throw $r2"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "parameter2 is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "parameter_1_in_method_doNormalize is not 92",
                        "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "parameter2 is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r6)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter2 is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r5) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r5)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r2)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkEquals is not null",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter2 is 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                        "parameter_1_in_method_doNormalize is not 92",
                        "parameter_1_in_method_checkEquals is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.4": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkEquals is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkEquals is null",
                            "parameter_1_in_method_checkEquals is null"
                        ]
                    }
                ],
                "callChain": "$z1 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r5_2, r6_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<1.4": "$z1 = virtualinvoke r2_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0_2, r1_2) -> throw $r1"
                    },
                    {
                        "version<2.7": "$z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$z1 = virtualinvoke r4_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2_2, r3_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z1 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r5_2, r6_2)",
                "invokeUnit_history": [
                    {
                        "version<1.4": "$z1 = virtualinvoke r2_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0_2, r1_2)"
                    },
                    {
                        "version<2.7": "$z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2)"
                    },
                    {
                        "version<2.12.0": "$z1 = virtualinvoke r4_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2_2, r3_2)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QError normalizing one or both of the file names is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QError normalizing one or both of the file names\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter2 is not 0",
                        "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is not 0",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter2 is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null",
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                        ]
                    }
                ],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r1, \"Error normalizing one or both of the file names\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r2"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean equalsNormalized(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "parameter_1_in_method_doNormalize is not 92",
                        "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r5) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkEquals is not null",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                        "parameter_1_in_method_doNormalize is not 92",
                        "parameter_1_in_method_checkEquals is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.4": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkEquals is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkEquals is null",
                            "parameter_1_in_method_checkEquals is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r5_2, r6_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<1.4": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r2_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0_2, r1_2) -> throw $r1"
                    },
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r4_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2_2, r3_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QError normalizing one or both of the file names is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QError normalizing one or both of the file names\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null",
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r1, \"Error normalizing one or both of the file names\")",
                "callChain_history": [
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> throw $r2"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean equalsNormalizedOnSystem(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "parameter_1_in_method_doNormalize is not 92",
                        "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r5) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkEquals is not null",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                        "parameter_1_in_method_doNormalize is not 92",
                        "parameter_1_in_method_checkEquals is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.4": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkEquals is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkEquals is null",
                            "parameter_1_in_method_checkEquals is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r5_2, r6_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<1.4": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r2_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0_2, r1_2) -> throw $r1"
                    },
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> $z1 = virtualinvoke r4_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2_2, r3_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QError normalizing one or both of the file names is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QError normalizing one or both of the file names\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null",
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r1, \"Error normalizing one or both of the file names\")",
                "callChain_history": [
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2) -> throw $r2"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 1, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean equalsOnSystem(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "parameter0 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "parameter_1_in_method_doNormalize is not 92",
                        "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 is not null",
                                "parameter0 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r4 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r6) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r3) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r5) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $r0 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(r2) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkEquals is not null",
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                        "parameter_1_in_method_doNormalize is not 92",
                        "parameter_1_in_method_checkEquals is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<1.4": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is not null",
                                "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) smaller than 0",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkEquals is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkEquals is null",
                            "parameter_1_in_method_checkEquals is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke $r2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r5_2, r6_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<1.4": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r2_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r0_2, r1_2) -> throw $r1"
                    },
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r5_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3_2, r4_2) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> $z1 = virtualinvoke r4_2.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2_2, r3_2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QError normalizing one or both of the file names is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QError normalizing one or both of the file names\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is not null",
                        "parameter_2_in_method_equals is not 0",
                        "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is not 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.5": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is not null",
                                "parameter_2_in_method_equals is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is not null",
                                "virtualinvoke parameter1.<java.lang.String: char charAt(int)>(0) is not 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter0) is null",
                            "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>(parameter1) is null"
                        ]
                    }
                ],
                "callChain": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r1, \"Error normalizing one or both of the file names\")",
                "callChain_history": [
                    {
                        "version<2.7": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2) -> throw $r2"
                    }
                ],
                "invokeUnit": "$z0 = staticinvoke <org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>(r0, r1, 0, $r2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: boolean equals(java.lang.String,java.lang.String,boolean,org.apache.commons.io.IOCase)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String getBaseName(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_removeExtension is not null",
                        "virtualinvoke parameter_0_in_method_removeExtension.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_removeExtension.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>($r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String getFullPath(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
                        "parameter_1_in_method_doGetFullPath is not 0",
                        "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>($r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>($r1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String getFullPathNoEndSeparator(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
                        "parameter_1_in_method_doGetFullPath is not 0",
                        "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>($r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0) -> $r3 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>(r0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>($r1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>(r0, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doGetFullPath(java.lang.String,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String getName(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String getPath(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) + parameter_1_in_method_doGetPath",
                        "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) larger or equal 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) + parameter_1_in_method_doGetPath",
                                "virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1) -> $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>($r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>($r1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String getPathNoEndSeparator(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) + parameter_1_in_method_doGetPath",
                        "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) larger or equal 0",
                                "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller than staticinvoke <org.apache.commons.io.FilenameUtils: int indexOfLastSeparator(java.lang.String)>(parameter0) + parameter_1_in_method_doGetPath",
                                "virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter_0_in_method_failIfNullBytePresent.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0) -> $r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>($r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>($r1) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>($r1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>(r0, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doGetPath(java.lang.String,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String getPrefix(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) larger or equal 0",
                        "staticinvoke <org.apache.commons.io.FilenameUtils: int getPrefixLength(java.lang.String)>(parameter0) smaller or equal virtualinvoke parameter0.<java.lang.String: int length()>()",
                        "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_requireNonNullChars.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>($r1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>($r1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r2 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>($r1)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>($r1)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.util.Collection)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: boolean isExtension(java.lang.String,java.lang.String[])>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String normalize(java.lang.String,boolean)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 1)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 1)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String normalizeNoEndSeparator(java.lang.String,boolean)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 0) -> staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$r1 = staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>(r0, $c0_2, 0)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: java.lang.String doNormalize(java.lang.String,char,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FilenameUtils",
        "methodSignature": "<org.apache.commons.io.FilenameUtils: java.lang.String removeExtension(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QNull character present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNull byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "0 smaller than virtualinvoke parameter0.<java.lang.String: int length()>()",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.lang.String: int indexOf(int)>(0) larger or equal 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.9.0": [
                            "virtualinvoke parameter0.<java.lang.String: char charAt(int)>(0) is 0"
                        ]
                    }
                ],
                "callChain": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0) -> throw $r1"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.FilenameUtils: java.lang.String requireNonNullChars(java.lang.String)>(r0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>(r0)"
                    },
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.FilenameUtils: void requireNonNullChars(java.lang.String)>(r0)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FilenameUtils: void failIfNullBytePresent(java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOUtils",
        "methodSignature": "<org.apache.commons.io.IOUtils: java.io.BufferedInputStream buffer(java.io.InputStream)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QinputStream is null\\E",
                "message_history": [
                    {
                        "version<2.7": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"inputStream\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r1"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOUtils",
        "methodSignature": "<org.apache.commons.io.IOUtils: java.io.BufferedInputStream buffer(java.io.InputStream,int)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QinputStream is null\\E",
                "message_history": [
                    {
                        "version<2.7": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"inputStream\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r1"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOUtils",
        "methodSignature": "<org.apache.commons.io.IOUtils: java.io.BufferedOutputStream buffer(java.io.OutputStream)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QoutputStream is null\\E",
                "message_history": [
                    {
                        "version<2.7": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"outputStream\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r1"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOUtils",
        "methodSignature": "<org.apache.commons.io.IOUtils: java.io.BufferedOutputStream buffer(java.io.OutputStream,int)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QoutputStream is null\\E",
                "message_history": [
                    {
                        "version<2.7": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"outputStream\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r1"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOUtils",
        "methodSignature": "<org.apache.commons.io.IOUtils: void skipFully(java.io.Reader,long)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.EOFException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QChars to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.2": "\\QBytes to skip: \\E[\\s\\S]*\\Q actual: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 larger or equal 0",
                        "staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter1) cmp parameter1 is not 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "staticinvoke <org.apache.commons.io.IOUtils: long skip(java.io.Reader,long)>(parameter0, parameter1) cmp parameter1 is not 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r1",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOUtils",
        "methodSignature": "<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
        "modifier": "public",
        "added_version": "v2.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "2.1",
                "exceptionName_history": [],
                "message": "\\QUnexpected read size, current: \\E[\\s\\S]*\\Q, expected: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.6": "\\QUnexpected readed size. current: \\E[\\s\\S]*\\Q, excepted: \\E[\\s\\S]*"
                    },
                    {
                        "version<2.9.0": "\\QUnexpected read size. current: \\E[\\s\\S]*\\Q, expected: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 is not 0",
                        "parameter0 is not null",
                        "0 is not parameter1"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.13.0": [
                            [
                                "parameter1 larger or equal 0",
                                "parameter1 is not 0",
                                "0 is not parameter1"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "0 is not parameter1"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r4 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(org.apache.commons.io.function.IOTriFunction,int)>($r3, i0) -> throw $r22",
                "callChain_history": [
                    {
                        "version<2.13.0": "throw $r18"
                    }
                ],
                "invokeUnit": "$r4 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(org.apache.commons.io.function.IOTriFunction,int)>($r3, i0)",
                "invokeUnit_history": [
                    {
                        "version<2.13.0": null
                    }
                ],
                "throwUnit": "throw $r18",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOUtils",
        "methodSignature": "<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,long)>",
        "modifier": "public",
        "added_version": "v2.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.io.IOException",
                "modifier": "public",
                "added_version": "2.1",
                "exceptionName_history": [],
                "message": "\\QUnexpected read size, current: \\E[\\s\\S]*\\Q, expected: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.6": "\\QUnexpected readed size. current: \\E[\\s\\S]*\\Q, excepted: \\E[\\s\\S]*"
                    },
                    {
                        "version<2.9.0": "\\QUnexpected read size. current: \\E[\\s\\S]*\\Q, expected: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_toByteArray larger or equal 0",
                        "parameter_1_in_method_toByteArray is not 0",
                        "parameter0 is not null",
                        "parameter1 cmp 2147483647L smaller or equal 0",
                        "0 is not parameter_1_in_method_toByteArray"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.13.0": [
                            [
                                "parameter_1_in_method_toByteArray larger or equal 0",
                                "parameter_1_in_method_toByteArray is not 0",
                                "parameter1 cmp 2147483647L smaller or equal 0",
                                "0 is not parameter_1_in_method_toByteArray"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "0 is not parameter_1_in_method_toByteArray"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>(r0, $i2) -> $r4 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(org.apache.commons.io.function.IOTriFunction,int)>($r3, i0) -> throw $r22",
                "callChain_history": [
                    {
                        "version<2.13.0": "$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>(r0, $i2) -> throw $r18"
                    }
                ],
                "invokeUnit": "$r1 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>(r0, $i2)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r18",
                "throwUnitInMethod": "<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>(r1, r2, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    },
                    {
                        "version<2.12.0": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)"
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    },
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>(r1, r2, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    },
                    {
                        "version<2.12.0": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)"
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>(r1, r2, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    },
                    {
                        "version<2.12.0": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)"
                    }
                ],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "$r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_<init> is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    },
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.Charset,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_<init> is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.OutputStreamWriter initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    },
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>($r1, r3, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.Charset,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_<init> is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.nio.charset.CharsetEncoder,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.9.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_<init> is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>($r1, r3, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.nio.charset.CharsetEncoder,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_<init> is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, 0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.FileWriterWithEncoding",
        "methodSignature": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.lang.String,java.lang.String,boolean)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qencoding is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QEncoding is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"encoding\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r9"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r9",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "removed_version": "2.8.0",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QFile is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_<init> is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_0_in_method_<init> is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0) -> $r3 = staticinvoke <org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>(r1, r2, z0) -> throw $r10"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>($r1, r3, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r10",
                "throwUnitInMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: java.io.Writer initWriter(java.io.File,java.lang.Object,boolean)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.FileWriterWithEncoding: void <init>(java.io.File,java.lang.String,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.SizeFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> throw $r7"
                    },
                    {
                        "version<2.9.0": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r7",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter0.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> throw $r12"
                    },
                    {
                        "version<2.9.0": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6"
                    },
                    {
                        "version<2.12.0": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r12",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.4": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_0_in_method_sizeOf.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "parameter_0_in_method_isSymlink is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "parameter0 is not null",
                                "parameter_0_in_method_sizeOfDirectory0 is not null",
                                "parameter_0_in_method_sizeOf0 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> throw $r7"
                    },
                    {
                        "version<2.9.0": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r7",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                        "parameter0 is not null",
                        "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.4": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_0_in_method_sizeOf.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_0_in_method_isSymlink is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is not 0",
                                "parameter0 is not null",
                                "virtualinvoke parameter0.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_0_in_method_sizeOfDirectory0 is not null",
                                "parameter_0_in_method_sizeOf0 is not null",
                                "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter1.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> throw $r12"
                    },
                    {
                        "version<2.9.0": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6"
                    },
                    {
                        "version<2.12.0": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r12",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.SizeFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.lang.Object,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_compare is not null",
                        "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> throw $r7"
                    },
                    {
                        "version<2.9.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r7",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_compare is not null",
                        "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> throw $r12"
                    },
                    {
                        "version<2.9.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6"
                    },
                    {
                        "version<2.12.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l3 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r0) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r12",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QParameter '\\E[\\s\\S]*\\Q' is not a directory: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q is not a directory\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_compare is not null",
                        "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                        "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "parameter_0_in_method_compare is not null",
                        "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.4": [
                            [
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_0_in_method_sizeOf.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "parameter_0_in_method_isSymlink is not null",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_1_in_method_compare is not null",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "parameter_0_in_method_compare is not null",
                                "parameter_0_in_method_sizeOfDirectory0 is not null",
                                "parameter_0_in_method_sizeOf0 is not null",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> throw $r7"
                    },
                    {
                        "version<2.9.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r1"
                    },
                    {
                        "version<2.12.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectory(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r7",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QFile system element for parameter '\\E[\\s\\S]*\\Q' does not exist: '\\E[\\s\\S]*\\Q'\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*\\Q does not exist\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_compare is not null",
                        "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                        "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                        "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                        "parameter_0_in_method_compare is not null",
                        "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                        "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.4": [
                            [
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_0_in_method_sizeOf.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.7": [
                            [
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_0_in_method_isSymlink is not null",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    },
                    {
                        "version<2.12.0": [
                            [
                                "parameter_1_in_method_compare is not null",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "@this: org.apache.commons.io.comparator.SizeFileComparator.<org.apache.commons.io.comparator.SizeFileComparator: boolean sumDirectoryContents> is not 0",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is not 0",
                                "parameter_0_in_method_compare is not null",
                                "virtualinvoke parameter_0_in_method_compare.<java.io.File: boolean isDirectory()>() is not 0",
                                "parameter_0_in_method_sizeOfDirectory0 is not null",
                                "parameter_0_in_method_sizeOf0 is not null",
                                "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke parameter_1_in_method_compare.<java.io.File: boolean exists()>() is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.4": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> throw $r12"
                    },
                    {
                        "version<2.9.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> staticinvoke <org.apache.commons.io.FileUtils: void checkDirectory(java.io.File)>(r0) -> throw $r6"
                    },
                    {
                        "version<2.12.0": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $l5 = staticinvoke <org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>(r1) -> $r1 = staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireDirectoryExists(java.io.File,java.lang.String)>(r0, \"directory\") -> staticinvoke <org.apache.commons.io.FileUtils: java.io.File requireExists(java.io.File,java.lang.String)>(r0, r1) -> throw $r2"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r12",
                "throwUnitInMethod": "<org.apache.commons.io.FileUtils: long sizeOfDirectory(java.io.File)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.comparator.SizeFileComparator: int compare(java.io.File,java.io.File)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularBufferInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal bufferSize: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid bufferSize: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_1_in_method_<init> smaller or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter_1_in_method_<init> smaller or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_<init> smaller or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>(r1, 8192) -> throw $r5",
                "callChain_history": [],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>(r1, 8192)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularBufferInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal bufferSize: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid bufferSize: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 smaller or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 smaller or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 smaller or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r5",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularBufferInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read()>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter_0_in_method_haveBytes",
                        "parameter_2_in_method_add smaller than 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter_0_in_method_haveBytes",
                                "parameter_2_in_method_add smaller than 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_2_in_method_add smaller than 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r11",
                "callChain_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r11"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter_0_in_method_haveBytes",
                        "parameter_1_in_method_add smaller than 0"
                    ],
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter_0_in_method_haveBytes",
                        "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter_0_in_method_haveBytes",
                                "parameter_1_in_method_add smaller than 0"
                            ],
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter_0_in_method_haveBytes",
                                "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_add smaller than 0",
                    "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularBufferInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter2",
                        "parameter1 larger or equal 0",
                        "parameter2 larger or equal 0",
                        "parameter0 is not null",
                        "parameter_2_in_method_add smaller than 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter2",
                                "parameter1 larger or equal 0",
                                "parameter2 larger or equal 0",
                                "parameter0 is not null",
                                "parameter_2_in_method_add smaller than 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_2_in_method_add smaller than 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(i1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r11",
                "callChain_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(i1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r11"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(i1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter2",
                        "parameter1 larger or equal 0",
                        "parameter2 larger or equal 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_add smaller than 0"
                    ],
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter2",
                        "parameter1 larger or equal 0",
                        "parameter2 larger or equal 0",
                        "parameter0 is not null",
                        "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter2",
                                "parameter1 larger or equal 0",
                                "parameter2 larger or equal 0",
                                "parameter0 is not null",
                                "parameter_1_in_method_add smaller than 0"
                            ],
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter2",
                                "parameter1 larger or equal 0",
                                "parameter2 larger or equal 0",
                                "parameter0 is not null",
                                "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_add smaller than 0",
                    "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(i1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(i1) -> virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>(i1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean haveBytes(int)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QtargetBuffer is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QBuffer is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"targetBuffer\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularBufferInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read(byte[])>",
        "modifier": "public",
        "added_version": "v2.7",
        "removed_version": "v2.12.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QtargetBuffer is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QBuffer is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"targetBuffer\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")"
                    }
                ],
                "invokeUnit": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: int read(byte[],int,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.MagicNumberFileFilter",
        "methodSignature": "<org.apache.commons.io.filefilter.MagicNumberFileFilter: boolean accept(java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.11.0",
                "removed_version": "2.13.0",
                "exceptionName_history": [],
                "message": "\\QThis statement would have triggered an Exception: virtualinvoke l3#2_1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack32)\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QThis statement would have triggered an Exception: virtualinvoke l3#2_1.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack30)\\E"
                    }
                ],
                "preConditions": [
                    [
                        "This is a rethrow exception after an exception with type java.lang.Throwable is caught."
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "throw r15",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw r15",
                "throwUnitOrder": 1
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.6",
                "removed_version": "2.10.0",
                "exceptionName_history": [],
                "message": "\\QThis statement would have triggered an Exception: virtualinvoke l3#2_2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack31)\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QThis statement would have triggered an Exception: virtualinvoke l3#2_2.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack29)\\E"
                    }
                ],
                "preConditions": [
                    [
                        "This is a rethrow exception after an exception with type java.lang.Throwable is caught."
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "throw r14",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw r15"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw r15",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.SwappedDataInputStream",
        "methodSignature": "<org.apache.commons.io.input.SwappedDataInputStream: java.lang.String readLine()>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "[\\s\\S]*\\Q not supported\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QOperation not supported: readLine()\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "throw $r0",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r0",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.SwappedDataInputStream",
        "methodSignature": "<org.apache.commons.io.input.SwappedDataInputStream: java.lang.String readUTF()>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "1.0",
                "exceptionName_history": [],
                "message": "[\\s\\S]*\\Q not supported\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QOperation not supported: readUTF()\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "throw $r0",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r0",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.DeferredFileOutputStream",
        "methodSignature": "<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.1",
                "exceptionName_history": [],
                "message": "\\QInitial buffer size must be at least 0.\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QNegative initial size: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_5_in_method_<init> smaller than 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.6": [
                            [
                                "parameter_0_in_method_<init> smaller than 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_5_in_method_<init> smaller than 0"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.6": [
                            "parameter_0_in_method_<init> smaller than 0"
                        ]
                    }
                ],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, 1024) -> $i2 = staticinvoke <org.apache.commons.io.output.DeferredFileOutputStream: int checkBufferSize(int)>(i1) -> throw $r0",
                "callChain_history": [
                    {
                        "version<2.0": "specialinvoke $r2.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>()>() -> specialinvoke r0.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(1024) -> throw $r2"
                    },
                    {
                        "version<2.6": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File)>(i0, r1, null, null, null) -> specialinvoke $r2.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>()>() -> specialinvoke r0.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(1024) -> throw $r2"
                    },
                    {
                        "version<2.7": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, 1024) -> specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1) -> throw $r2"
                    },
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, 1024) -> specialinvoke $r5.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>(i1) -> throw $r1"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, 1024)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "specialinvoke $r2.<org.apache.commons.io.output.ByteArrayOutputStream: void <init>()>()"
                    },
                    {
                        "version<2.6": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File)>(i0, r1, null, null, null)"
                    }
                ],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.output.ByteArrayOutputStream: void <init>(int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.ByteArrayOutputStream: void <init>()>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.DeferredFileOutputStream",
        "methodSignature": "<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,int,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.6",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QInitial buffer size must be at least 0.\\E",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInitial buffer size must be atleast 0.\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 smaller than 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter1 larger or equal 0",
                                "parameter1 smaller than 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 smaller than 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, i1) -> $i2 = staticinvoke <org.apache.commons.io.output.DeferredFileOutputStream: int checkBufferSize(int)>(i1) -> throw $r0",
                "callChain_history": [
                    {
                        "version<2.12.0": "throw $r2"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.DeferredFileOutputStream: void <init>(int,java.io.File,java.lang.String,java.lang.String,java.io.File,int)>(i0, r1, null, null, null, i1)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": null
                    }
                ],
                "throwUnit": "throw $r2",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.PeekableInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.PeekableInputStream: void <init>(java.io.InputStream)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal bufferSize: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid bufferSize: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_1_in_method_<init> smaller or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter_1_in_method_<init> smaller or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_<init> smaller or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream)>(r1) -> specialinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>(r1, 8192) -> throw $r5",
                "callChain_history": [],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream)>(r1)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.PeekableInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.PeekableInputStream: void <init>(java.io.InputStream,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal bufferSize: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid bufferSize: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 smaller or equal 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "parameter1 smaller or equal 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 smaller or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>(r1, i0) -> throw $r5",
                "callChain_history": [],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>(r1, i0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void <init>(java.io.InputStream,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.PeekableInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[])>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter_2_in_method_add smaller than 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                                "parameter0 is not null",
                                "parameter_2_in_method_add smaller than 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_2_in_method_add smaller than 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0) -> virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r11",
                "callChain_history": [
                    {
                        "version<2.9.0": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r11"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>()"
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter_1_in_method_add smaller than 0"
                    ],
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                                "parameter0 is not null",
                                "parameter_1_in_method_add smaller than 0"
                            ],
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                                "parameter0 is not null",
                                "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_add smaller than 0",
                    "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0) -> virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r1"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>()"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_peek larger or equal 0",
                        "parameter_1_in_method_peek smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter_2_in_method_peek smaller than 0"
                    ],
                    [
                        "parameter_1_in_method_peek larger or equal 0",
                        "parameter_1_in_method_peek smaller than parameter0.length",
                        "parameter_2_in_method_peek larger or equal 0",
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter_2_in_method_peek larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_2_in_method_peek smaller than 0",
                    "parameter_2_in_method_peek larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0) -> $z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, i4, i5) -> throw $r18",
                "callChain_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, 0, $i4) -> throw $r18"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, 0, $i4)"
                    }
                ],
                "throwUnit": "throw $r18",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter_1_in_method_peek smaller than 0"
                    ],
                    [
                        "parameter_1_in_method_peek larger or equal 0",
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter_1_in_method_peek larger or equal parameter0.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_1_in_method_peek smaller than 0",
                    "parameter_1_in_method_peek larger or equal parameter0.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0) -> $z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, i4, i5) -> throw $r16",
                "callChain_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, 0, $i4) -> throw $r16"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, 0, $i4)"
                    }
                ],
                "throwUnit": "throw $r16",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QsourceBuffer is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QBuffer is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"sourceBuffer\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")"
                    }
                ],
                "invokeUnit": "$z0 = virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>(r0, 0, $i0)",
                "invokeUnit_history": [
                    {
                        "version<2.9.0": null
                    }
                ],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.PeekableInputStream",
        "methodSignature": "<org.apache.commons.io.input.buffer.PeekableInputStream: boolean peek(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter_2_in_method_add smaller than 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                                "parameter0 is not null",
                                "parameter_2_in_method_add smaller than 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_2_in_method_add smaller than 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r11",
                "callChain_history": [
                    {
                        "version<2.9.0": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r11"
                    }
                ],
                "invokeUnit": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>()",
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter_1_in_method_add smaller than 0"
                    ],
                    [
                        "parameter_1_in_method_add larger or equal 0",
                        "parameter_0_in_method_add is not null",
                        "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eof> is 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()), 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                                "parameter0 is not null",
                                "parameter_1_in_method_add smaller than 0"
                            ],
                            [
                                "parameter_1_in_method_add larger or equal 0",
                                "parameter_0_in_method_add is not null",
                                "@this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: boolean eofSeen> is 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>() larger than 0",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: java.io.InputStream in>.<java.io.InputStream: int read(byte[],int,int)>(newarray (byte)[virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()], 0, virtualinvoke @this: org.apache.commons.io.input.buffer.CircularBufferInputStream.<org.apache.commons.io.input.buffer.CircularBufferInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getSpace()>()) larger than 0",
                                "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                                "virtualinvoke @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: org.apache.commons.io.input.buffer.CircularByteBuffer buffer>.<org.apache.commons.io.input.buffer.CircularByteBuffer: int getCurrentNumberOfBytes()>() smaller than parameter0.length",
                                "parameter0 is not null",
                                "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_add smaller than 0",
                    "parameter_1_in_method_add larger or equal parameter_0_in_method_add.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>($r2, 0, $i1) -> throw $r1",
                "callChain_history": [
                    {
                        "version<2.9.0": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>() -> virtualinvoke $r4.<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>(r2, 0, $i1) -> throw $r1"
                    }
                ],
                "invokeUnit": "virtualinvoke r1.<org.apache.commons.io.input.buffer.PeekableInputStream: void fillBuffer()>()",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularBufferInputStream: void fillBuffer()>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter2 smaller than 0"
                    ],
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 smaller than parameter0.length",
                        "parameter2 larger or equal 0",
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter2 larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter2 smaller than 0",
                    "parameter2 larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, i4, i5) -> throw $r18",
                "callChain_history": [],
                "invokeUnit": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, i4, i5)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r18",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>"
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter1 smaller than 0"
                    ],
                    [
                        "parameter1 larger or equal 0",
                        "parameter0 is not null",
                        "parameter0.length smaller or equal @this: org.apache.commons.io.input.buffer.PeekableInputStream.<org.apache.commons.io.input.buffer.PeekableInputStream: int bufferSize>",
                        "parameter_1_in_method_add larger or equal 0",
                        "@this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: int currentNumberOfBytes> + parameter_2_in_method_add smaller or equal @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length",
                        "parameter_2_in_method_add larger or equal 0",
                        "parameter_1_in_method_add smaller than parameter_0_in_method_add.length",
                        "parameter_0_in_method_add is not null",
                        "parameter1 larger or equal parameter0.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 smaller than 0",
                    "parameter1 larger or equal parameter0.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, i4, i5) -> throw $r16",
                "callChain_history": [],
                "invokeUnit": "$z0 = virtualinvoke $r3.<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>(r0, i4, i5)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r16",
                "throwUnitInMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QsourceBuffer is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QBuffer is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"sourceBuffer\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"Buffer\")",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.NameFileFilter",
        "methodSignature": "<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.0",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QThe wildcard must not be null\\E",
                "message_history": [
                    {
                        "version<1.3": "\\QThe name must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2) -> throw $r5",
                "callChain_history": [
                    {
                        "version<1.3": "throw $r3"
                    },
                    {
                        "version<2.9.0": "specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null) -> throw $r4"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, $r2)",
                "invokeUnit_history": [
                    {
                        "version<1.3": null
                    },
                    {
                        "version<2.9.0": "specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(r1, null)"
                    }
                ],
                "throwUnit": "throw $r3",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.NameFileFilter",
        "methodSignature": "<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_acceptBaseName is not null",
                        "0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
                        "parameter_1_in_method_checkEquals is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
                                "parameter_0_in_method_checkEquals is null"
                            ],
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    },
                    {
                        "version<2.9.0": [
                            [
                                "parameter_0_in_method_checkEquals is not null",
                                "0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkEquals is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkEquals is null",
                            "parameter_1_in_method_checkEquals is null"
                        ]
                    }
                ],
                "callChain": "$z0 = specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: boolean acceptBaseName(java.lang.String)>($r2) -> $z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.0": "$z0 = virtualinvoke $r6.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, $r5) -> throw $r1"
                    },
                    {
                        "version<2.7": "$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, r4) -> throw $r1"
                    },
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, r4) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z0 = specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: boolean acceptBaseName(java.lang.String)>($r2)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "$z0 = virtualinvoke $r6.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, $r5)"
                    },
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>($r1, r4)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.NameFileFilter",
        "methodSignature": "<org.apache.commons.io.filefilter.NameFileFilter: boolean accept(java.io.File,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 is not null",
                        "0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
                        "parameter_1_in_method_checkEquals is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
                                "parameter1 is null"
                            ],
                            [
                                "parameter1 is not null",
                                "0 smaller than @this: org.apache.commons.io.filefilter.NameFileFilter.<org.apache.commons.io.filefilter.NameFileFilter: java.lang.String[] names>.length",
                                "parameter_1_in_method_checkEquals is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkEquals is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter1 is null",
                            "parameter_1_in_method_checkEquals is null"
                        ]
                    }
                ],
                "callChain": "$z0 = specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: boolean acceptBaseName(java.lang.String)>(r1) -> $z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.0": "$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2, $r4) -> throw $r1"
                    },
                    {
                        "version<2.7": "$z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2) -> throw $r1"
                    },
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")"
                    }
                ],
                "invokeUnit": "$z0 = specialinvoke r0.<org.apache.commons.io.filefilter.NameFileFilter: boolean acceptBaseName(java.lang.String)>(r1)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "$z0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r2, $r4)"
                    },
                    {
                        "version<2.9.0": "$z0 = virtualinvoke $r4.<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>(r3, r2)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.WriterOutputStream",
        "methodSignature": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>.<java.nio.charset.Charset: java.lang.String name()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                        "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                        "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                                "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                                "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 8192, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r12",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>"
            },
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 8192, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r14",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.WriterOutputStream",
        "methodSignature": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>.<java.nio.charset.Charset: java.lang.String name()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                        "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                        "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                                "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                                "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 8192, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r12",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>"
            },
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 8192, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r14",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.WriterOutputStream",
        "methodSignature": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>.<java.nio.charset.Charset: java.lang.String name()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                        "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                        "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                                "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                                "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r12",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0)"
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>"
            },
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r14",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.WriterOutputStream",
        "methodSignature": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder)>",
        "modifier": "public",
        "added_version": "v2.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>.<java.nio.charset.Charset: java.lang.String name()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                        "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                        "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                                "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                                "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 8192, 0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r12",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>"
            },
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 8192, 0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r14",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.WriterOutputStream",
        "methodSignature": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>",
        "modifier": "public",
        "added_version": "v2.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>.<java.nio.charset.Charset: java.lang.String name()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                        "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                        "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                                "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                                "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r12",
                "callChain_history": [
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3)"
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>"
            },
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r14",
                "callChain_history": [
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13"
                    }
                ],
                "invokeUnit": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.WriterOutputStream",
        "methodSignature": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>.<java.nio.charset.Charset: java.lang.String name()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                        "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                        "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                                "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                                "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 8192, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r12",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>"
            },
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 8192, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r14",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 8192, 0)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>(r1, r2, 1024, 0)"
                    }
                ],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.WriterOutputStream",
        "methodSignature": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.lang.String,int,boolean)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16>.<java.nio.charset.Charset: java.lang.String name()>().<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                        "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                        "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "virtualinvoke \"UTF-16\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke parameter_0_in_method_checkIbmJdkWithBrokenUTF16.<java.nio.charset.Charset: java.lang.String name()>()) is not 0",
                                "0 larger or equal virtualinvoke \"v\\u00e9s\".<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(parameter_0_in_method_checkIbmJdkWithBrokenUTF16).length",
                                "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke \"v\\u00e9s\".<java.lang.String: boolean equals(java.lang.Object)>(virtualinvoke staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer allocate(int)>(virtualinvoke \"v\\u00e9s\".<java.lang.String: int length()>()).<java.nio.CharBuffer: java.lang.String toString()>()) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r12",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r11"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>"
            },
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QUTF-16 requested when runninng on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r9, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r4) -> throw $r14",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0) -> specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.CharsetDecoder,int,boolean)>(r1, $r8, i0, z0) -> staticinvoke <org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>($r3) -> throw $r13"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>(r1, $r3, i0, z0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r13",
                "throwUnitInMethod": "<org.apache.commons.io.output.WriterOutputStream: void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.WriterOutputStream: void <init>(java.io.Writer,java.nio.charset.Charset,int,boolean)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.CharSequenceInputStream",
        "methodSignature": "<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[])>",
        "modifier": "public",
        "added_version": "v2.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\Qarray is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QByte array is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"array\")",
                "callChain_history": [
                    {
                        "version<2.7": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r20"
                    }
                ],
                "invokeUnit": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r20",
                "throwUnitInMethod": "<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.CharSequenceInputStream",
        "methodSignature": "<org.apache.commons.io.input.CharSequenceInputStream: int read(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\Qarray is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QByte array is null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"array\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r20"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r20",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.CharSequenceInputStream",
        "methodSignature": "<org.apache.commons.io.input.CharSequenceInputStream: void reset()>",
        "modifier": "public",
        "added_version": "v2.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalStateException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QUnexpected CharBuffer position: actual=\\E[\\s\\S]*\\Q expected=\\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.8.0": "\\QUnexpected CharBuffer postion: actual=\\E[\\s\\S]*\\Q expected=\\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "@this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int cBufMark> is not -1",
                        "virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.CharBuffer cBuf>.<java.nio.CharBuffer: int position()>() is not @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int cBufMark>"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.12.0": [
                            [
                                "@this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int mark_cbuf> is not -1",
                                "virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.CharBuffer cbuf>.<java.nio.CharBuffer: int position()>() is not @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int mark_cbuf>"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.CharBuffer cBuf>.<java.nio.CharBuffer: int position()>() is not @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int cBufMark>"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.12.0": [
                            "virtualinvoke @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: java.nio.CharBuffer cbuf>.<java.nio.CharBuffer: int position()>() is not @this: org.apache.commons.io.input.CharSequenceInputStream.<org.apache.commons.io.input.CharSequenceInputStream: int mark_cbuf>"
                        ]
                    }
                ],
                "callChain": "throw $r20",
                "callChain_history": [
                    {
                        "version<2.6": "throw $r21"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r21",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularByteBuffer",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void add(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter2 smaller than 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter2 smaller than 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r11",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitOrder": 2
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 smaller than 0"
                    ],
                    [
                        "parameter1 larger or equal 0",
                        "parameter0 is not null",
                        "parameter1 larger or equal parameter0.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 smaller than 0",
                    "parameter1 larger or equal parameter0.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r1",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularByteBuffer",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularByteBuffer: boolean peek(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter2 smaller than 0"
                    ],
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 smaller than parameter0.length",
                        "parameter2 larger or equal 0",
                        "parameter0 is not null",
                        "parameter2 larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter2 smaller than 0",
                    "parameter2 larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r18",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r18",
                "throwUnitOrder": 2
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 smaller than 0"
                    ],
                    [
                        "parameter1 larger or equal 0",
                        "parameter0 is not null",
                        "parameter1 larger or equal parameter0.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 smaller than 0",
                    "parameter1 larger or equal parameter0.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r16",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r16",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.buffer.CircularByteBuffer",
        "methodSignature": "<org.apache.commons.io.input.buffer.CircularByteBuffer: void read(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QtargetBuffer is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"targetBuffer\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal length: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid length: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 smaller than parameter0.length",
                        "parameter0 is not null",
                        "parameter2 smaller than 0"
                    ],
                    [
                        "parameter1 larger or equal 0",
                        "parameter1 smaller than parameter0.length",
                        "parameter2 larger or equal 0",
                        "parameter0 is not null",
                        "parameter2 larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter2 smaller than 0",
                    "parameter2 larger than @this: org.apache.commons.io.input.buffer.CircularByteBuffer.<org.apache.commons.io.input.buffer.CircularByteBuffer: byte[] buffer>.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r6",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r6",
                "throwUnitOrder": 2
            },
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\QIllegal offset: \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QInvalid offset: \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 smaller than 0"
                    ],
                    [
                        "parameter1 larger or equal 0",
                        "parameter0 is not null",
                        "parameter1 larger or equal parameter0.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 smaller than 0",
                    "parameter1 larger or equal parameter0.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r1",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.ExtensionFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkCompareTo is not null",
                        "virtualinvoke parameter_0_in_method_getExtension.<java.lang.String: int indexOf(int,int)>(58, staticinvoke <org.apache.commons.io.FilenameUtils: int getAdsCriticalOffset(java.lang.String)>(parameter_0_in_method_getExtension)) is not -1",
                        "parameter_1_in_method_checkCompareTo is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter_0_in_method_checkCompareTo is null"
                            ],
                            [
                                "parameter_0_in_method_checkCompareTo is not null",
                                "parameter_1_in_method_checkCompareTo is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkCompareTo is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkCompareTo is null",
                            "parameter_1_in_method_checkCompareTo is null"
                        ]
                    }
                ],
                "callChain": "$i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.7": "$i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> throw $r1"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.ExtensionFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.lang.Object,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkCompareTo is not null",
                        "virtualinvoke parameter_0_in_method_getExtension.<java.lang.String: int indexOf(int,int)>(58, staticinvoke <org.apache.commons.io.FilenameUtils: int getAdsCriticalOffset(java.lang.String)>(parameter_0_in_method_getExtension)) is not -1",
                        "parameter_1_in_method_checkCompareTo is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter_0_in_method_checkCompareTo is null"
                            ],
                            [
                                "parameter_0_in_method_checkCompareTo is not null",
                                "parameter_1_in_method_checkCompareTo is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkCompareTo is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkCompareTo is null",
                            "parameter_1_in_method_checkCompareTo is null"
                        ]
                    }
                ],
                "callChain": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.0": "$i0 = virtualinvoke $r9.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r5, $r7) -> throw $r1"
                    },
                    {
                        "version<2.7": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r7.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r2, $r5) -> throw $r1"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.ExtensionFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "$i0 = virtualinvoke $r9.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r5, $r7)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.NullReader",
        "methodSignature": "<org.apache.commons.io.input.NullReader: void mark(int)>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QMark not supported\\E"
                    }
                ],
                "preConditions": [
                    [
                        "@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r1",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.NullReader",
        "methodSignature": "<org.apache.commons.io.input.NullReader: void reset()>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QMark not supported\\E"
                    }
                ],
                "preConditions": [
                    [
                        "@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "@this: org.apache.commons.io.input.NullReader.<org.apache.commons.io.input.NullReader: boolean markSupported> is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r10",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r11"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.NullInputStream",
        "methodSignature": "<org.apache.commons.io.input.NullInputStream: void mark(int)>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QMark not supported\\E"
                    }
                ],
                "preConditions": [
                    [
                        "@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r1",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.NullInputStream",
        "methodSignature": "<org.apache.commons.io.input.NullInputStream: void reset()>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QMark not supported\\E"
                    }
                ],
                "preConditions": [
                    [
                        "@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "@this: org.apache.commons.io.input.NullInputStream.<org.apache.commons.io.input.NullInputStream: boolean markSupported> is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r10",
                "callChain_history": [
                    {
                        "version<2.9.0": "throw $r11"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r11",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream",
        "methodSignature": "<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: void <init>(byte[])>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\Qdata is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"data\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1)"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1)",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream",
        "methodSignature": "<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: void <init>(byte[],int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\Qdata is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"data\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1)"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1)",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream",
        "methodSignature": "<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: void <init>(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\Qdata is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 larger or equal 0",
                        "parameter2 larger or equal 0",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.9.0": [
                            [
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"data\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1)"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1)",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream",
        "methodSignature": "<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: int read(byte[])>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\Qdest is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i1 = virtualinvoke r1.<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: int read(byte[],int,int)>(r0, 0, $i0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"dest\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "$i1 = virtualinvoke r1.<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: int read(byte[],int,int)>(r0, 0, $i0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)"
                    }
                ],
                "invokeUnit": "$i1 = virtualinvoke r1.<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: int read(byte[],int,int)>(r0, 0, $i0)",
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)",
                "throwUnitInMethod": "<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: int read(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: int read(byte[],int,int)>"
            },
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\Qdest is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"dest\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.UnsynchronizedByteArrayInputStream",
        "methodSignature": "<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream: int read(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.7",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.7",
                "exceptionName_history": [],
                "message": "\\Qdest is null\\E",
                "message_history": [
                    {
                        "version<2.9.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"dest\")",
                "callChain_history": [
                    {
                        "version<2.9.0": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.ReaderInputStream",
        "methodSignature": "<org.apache.commons.io.input.ReaderInputStream: int read(byte[])>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\Qarray is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QByte array must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"array\")",
                "callChain_history": [
                    {
                        "version<2.7": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r16"
                    }
                ],
                "invokeUnit": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r16",
                "throwUnitInMethod": "<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>"
            },
            {
                "exceptionName": "java.lang.IndexOutOfBoundsException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\QArray size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_read smaller than 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_read larger or equal 0",
                        "parameter_1_in_method_read smaller than 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter_2_in_method_read larger or equal 0",
                        "parameter_1_in_method_read larger or equal 0",
                        "parameter_1_in_method_read + parameter_2_in_method_read larger than parameter0.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_2_in_method_read smaller than 0",
                    "parameter_1_in_method_read smaller than 0",
                    "parameter_1_in_method_read + parameter_2_in_method_read larger than parameter0.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r15",
                "callChain_history": [
                    {
                        "version<2.7": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r18"
                    },
                    {
                        "version<2.12.0": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0) -> throw $r16"
                    }
                ],
                "invokeUnit": "$i1 = virtualinvoke r0.<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>(r1, 0, $i0)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r18",
                "throwUnitInMethod": "<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.ReaderInputStream",
        "methodSignature": "<org.apache.commons.io.input.ReaderInputStream: int read(byte[],int,int)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\Qarray is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QByte array must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"array\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r16"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r16",
                "throwUnitOrder": 0
            },
            {
                "exceptionName": "java.lang.IndexOutOfBoundsException",
                "modifier": "public",
                "added_version": "2.2",
                "exceptionName_history": [],
                "message": "\\QArray size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QArray Size=\\E[\\s\\S]*\\Q, offset=\\E[\\s\\S]*\\Q, length=\\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter2 smaller than 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter2 larger or equal 0",
                        "parameter1 smaller than 0"
                    ],
                    [
                        "parameter0 is not null",
                        "parameter2 larger or equal 0",
                        "parameter1 larger or equal 0",
                        "parameter1 + parameter2 larger than parameter0.length"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter2 smaller than 0",
                    "parameter1 smaller than 0",
                    "parameter1 + parameter2 larger than parameter0.length"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r15",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r18"
                    },
                    {
                        "version<2.12.0": "throw $r16"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r18",
                "throwUnitOrder": 1
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.PathFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkCompareTo is not null",
                        "parameter_1_in_method_checkCompareTo is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter_0_in_method_checkCompareTo is null"
                            ],
                            [
                                "parameter_0_in_method_checkCompareTo is not null",
                                "parameter_1_in_method_checkCompareTo is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkCompareTo is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkCompareTo is null",
                            "parameter_1_in_method_checkCompareTo is null"
                        ]
                    }
                ],
                "callChain": "$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.7": "$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.PathFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.PathFileComparator: int compare(java.lang.Object,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkCompareTo is not null",
                        "parameter_1_in_method_checkCompareTo is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter_0_in_method_checkCompareTo is null"
                            ],
                            [
                                "parameter_0_in_method_checkCompareTo is not null",
                                "parameter_1_in_method_checkCompareTo is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkCompareTo is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkCompareTo is null",
                            "parameter_1_in_method_checkCompareTo is null"
                        ]
                    }
                ],
                "callChain": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.0": "$i0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r6, $r7) -> throw $r1"
                    },
                    {
                        "version<2.7": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.PathFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "$i0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r6, $r7)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.NameFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkCompareTo is not null",
                        "parameter_1_in_method_checkCompareTo is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter_0_in_method_checkCompareTo is null"
                            ],
                            [
                                "parameter_0_in_method_checkCompareTo is not null",
                                "parameter_1_in_method_checkCompareTo is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkCompareTo is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkCompareTo is null",
                            "parameter_1_in_method_checkCompareTo is null"
                        ]
                    }
                ],
                "callChain": "$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.7": "$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.comparator.NameFileComparator",
        "methodSignature": "<org.apache.commons.io.comparator.NameFileComparator: int compare(java.lang.Object,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_0_in_method_checkCompareTo is not null",
                        "parameter_1_in_method_checkCompareTo is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter_0_in_method_checkCompareTo is null"
                            ],
                            [
                                "parameter_0_in_method_checkCompareTo is not null",
                                "parameter_1_in_method_checkCompareTo is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter_1_in_method_checkCompareTo is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter_0_in_method_checkCompareTo is null",
                            "parameter_1_in_method_checkCompareTo is null"
                        ]
                    }
                ],
                "callChain": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.0": "$i0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r6, $r7) -> throw $r1"
                    },
                    {
                        "version<2.7": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3) -> $i0 = virtualinvoke $r2.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r3, $r5) -> throw $r1"
                    }
                ],
                "invokeUnit": "$i0 = virtualinvoke r0.<org.apache.commons.io.comparator.NameFileComparator: int compare(java.io.File,java.io.File)>($r4, $r3)",
                "invokeUnit_history": [
                    {
                        "version<2.0": "$i0 = virtualinvoke $r5.<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>($r6, $r7)"
                    }
                ],
                "throwUnit": "throw $r1",
                "throwUnitInMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.LineIterator",
        "methodSignature": "<org.apache.commons.io.LineIterator: void remove()>",
        "modifier": "public",
        "added_version": "v1.2",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "1.2",
                "exceptionName_history": [],
                "message": "\\Qremove not supported\\E",
                "message_history": [
                    {
                        "version<2.9.0": "\\QRemove unsupported on LineIterator\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "throw $r0",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r0",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaningTracker",
        "methodSignature": "<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe file must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r5"
                    }
                ],
                "invokeUnit": "virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitInMethod": "<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaningTracker",
        "methodSignature": "<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe file must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r5"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaningTracker",
        "methodSignature": "<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qpath is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe path must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"path\")",
                "callChain_history": [
                    {
                        "version<2.7": "virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r4"
                    }
                ],
                "invokeUnit": "virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null)",
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaningTracker",
        "methodSignature": "<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qpath is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe path must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"path\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r4"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaner",
        "methodSignature": "<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe file must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, null) -> throw $r4"
                    },
                    {
                        "version<2.7": "virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r5"
                    }
                ],
                "invokeUnit": "virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, null)"
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitInMethod": "<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaner",
        "methodSignature": "<org.apache.commons.io.FileCleaner: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qfile is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe file must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"file\")",
                "callChain_history": [
                    {
                        "version<1.4": "throw $r4"
                    },
                    {
                        "version<2.7": "virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> throw $r5"
                    }
                ],
                "invokeUnit": "virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.io.File,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2)",
                "invokeUnit_history": [
                    {
                        "version<1.4": null
                    }
                ],
                "throwUnit": "throw $r4",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaner",
        "methodSignature": "<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object)>",
        "modifier": "public",
        "added_version": "v1.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qpath is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe path must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"path\")",
                "callChain_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, null) -> throw $r3"
                    },
                    {
                        "version<2.7": "virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>(r0, r1) -> virtualinvoke r0.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r1, r2, null) -> throw $r4"
                    }
                ],
                "invokeUnit": "virtualinvoke $r2.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object)>(r0, r1)",
                "invokeUnit_history": [
                    {
                        "version<1.4": "staticinvoke <org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, null)"
                    }
                ],
                "throwUnit": "throw $r3",
                "throwUnitInMethod": "<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.FileCleaner",
        "methodSignature": "<org.apache.commons.io.FileCleaner: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qpath is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe path must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"path\")",
                "callChain_history": [
                    {
                        "version<1.4": "throw $r3"
                    },
                    {
                        "version<2.7": "virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2) -> throw $r4"
                    }
                ],
                "invokeUnit": "virtualinvoke $r3.<org.apache.commons.io.FileCleaningTracker: void track(java.lang.String,java.lang.Object,org.apache.commons.io.FileDeleteStrategy)>(r0, r1, r2)",
                "invokeUnit_history": [
                    {
                        "version<1.4": null
                    }
                ],
                "throwUnit": "throw $r3",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.CharSequenceReader",
        "methodSignature": "<org.apache.commons.io.input.CharSequenceReader: int read(char[],int,int)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qarray is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QCharacter array is missing\\E"
                    }
                ],
                "preConditions": [
                    [
                        "@this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: int idx> smaller than specialinvoke @this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: int end()>()",
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "@this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: int idx> smaller than interfaceinvoke @this: org.apache.commons.io.input.CharSequenceReader.<org.apache.commons.io.input.CharSequenceReader: java.lang.CharSequence charSequence>.<java.lang.CharSequence: int length()>()",
                                "parameter0 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"array\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r13"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r13",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.WildcardFilter",
        "methodSignature": "<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.util.List)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.1",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QThe wildcard list must not be null\\E",
                "message_history": [
                    {
                        "version<1.3": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r5",
                "callChain_history": [
                    {
                        "version<1.4": "throw $r5"
                    },
                    {
                        "version<2.0": "throw $r6"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.WildcardFilter",
        "methodSignature": "<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.1",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QThe wildcard must not be null\\E",
                "message_history": [
                    {
                        "version<1.3": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r3",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r3",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.filefilter.WildcardFilter",
        "methodSignature": "<org.apache.commons.io.filefilter.WildcardFilter: void <init>(java.lang.String[])>",
        "modifier": "public",
        "added_version": "v1.1",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "1.1",
                "removed_version": "2.12.0",
                "exceptionName_history": [],
                "message": "\\QThe wildcard array must not be null\\E",
                "message_history": [
                    {
                        "version<1.3": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is null"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter0 is null"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r4",
                "callChain_history": [
                    {
                        "version<2.0": "throw $r2"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOCase",
        "methodSignature": "<org.apache.commons.io.IOCase: int checkCompareTo(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.4",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.4",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter0 is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter0 is null",
                            "parameter1 is null"
                        ]
                    }
                ],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r1"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.IOCase",
        "methodSignature": "<org.apache.commons.io.IOCase: boolean checkEquals(java.lang.String,java.lang.String)>",
        "modifier": "public",
        "added_version": "v1.3",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.NullPointerException",
                "modifier": "public",
                "added_version": "1.3",
                "exceptionName_history": [],
                "message": "\\Qstr2 is null\\E",
                "message_history": [
                    {
                        "version<2.7": "\\QThe strings must not be null\\E"
                    }
                ],
                "preConditions": [
                    [
                        "parameter0 is not null",
                        "parameter1 is null"
                    ]
                ],
                "preConditions_history": [
                    {
                        "version<2.7": [
                            [
                                "parameter0 is null"
                            ],
                            [
                                "parameter0 is not null",
                                "parameter1 is null"
                            ]
                        ]
                    }
                ],
                "keyPreCondition": [
                    "parameter1 is null"
                ],
                "keyPreCondition_history": [
                    {
                        "version<2.7": [
                            "parameter0 is null",
                            "parameter1 is null"
                        ]
                    }
                ],
                "callChain": "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"str2\")",
                "callChain_history": [
                    {
                        "version<2.7": "throw $r1"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r1",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.BOMInputStream",
        "methodSignature": "<org.apache.commons.io.input.BOMInputStream: boolean hasBOM(org.apache.commons.io.ByteOrderMark)>",
        "modifier": "public",
        "added_version": "v2.0",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.0",
                "exceptionName_history": [],
                "message": "\\QStream not configured to detect \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.12.0": "\\QStream not configure to detect \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "interfaceinvoke @this: org.apache.commons.io.input.BOMInputStream.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>.<java.util.List: boolean contains(java.lang.Object)>(parameter0) is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "interfaceinvoke @this: org.apache.commons.io.input.BOMInputStream.<org.apache.commons.io.input.BOMInputStream: java.util.List boms>.<java.util.List: boolean contains(java.lang.Object)>(parameter0) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r4",
                "callChain_history": [
                    {
                        "version<2.12.0": "throw $r5"
                    }
                ],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.ChunkedOutputStream",
        "methodSignature": "<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QchunkSize <= 0\\E",
                "message_history": [
                    {
                        "version<2.13.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter_1_in_method_<init> smaller or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter_1_in_method_<init> smaller or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "specialinvoke r0.<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 8192) -> throw $r2",
                "callChain_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 4096) -> throw $r2"
                    }
                ],
                "invokeUnit": "specialinvoke r0.<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 8192)",
                "invokeUnit_history": [
                    {
                        "version<2.12.0": "specialinvoke r0.<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>(r1, 4096)"
                    }
                ],
                "throwUnit": "throw $r2",
                "throwUnitInMethod": "<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>",
                "throwUnitOrder": -1,
                "invokedMethod": "<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>"
            }
        ]
    },
    {
        "className": "org.apache.commons.io.output.ChunkedOutputStream",
        "methodSignature": "<org.apache.commons.io.output.ChunkedOutputStream: void <init>(java.io.OutputStream,int)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "\\QchunkSize <= 0\\E",
                "message_history": [
                    {
                        "version<2.13.0": "[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "parameter1 smaller or equal 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "parameter1 smaller or equal 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r2",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r2",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.UnixLineEndingInputStream",
        "methodSignature": "<org.apache.commons.io.input.UnixLineEndingInputStream: void mark(int)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QMark notsupported\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "throw $r0",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r0",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.input.WindowsLineEndingInputStream",
        "methodSignature": "<org.apache.commons.io.input.WindowsLineEndingInputStream: void mark(int)>",
        "modifier": "public",
        "added_version": "v2.5",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.UnsupportedOperationException",
                "modifier": "public",
                "added_version": "2.5",
                "exceptionName_history": [],
                "message": "[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.9.0": "\\QMark not supported\\E"
                    }
                ],
                "preConditions": [
                    [
                        "Direct Throw Without Any Condition"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [],
                "keyPreCondition_history": [],
                "callChain": "throw $r0",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r0",
                "throwUnitOrder": 0
            }
        ]
    },
    {
        "className": "org.apache.commons.io.ByteOrderParser",
        "methodSignature": "<org.apache.commons.io.ByteOrderParser: java.nio.ByteOrder parseByteOrder(java.lang.String)>",
        "modifier": "public",
        "added_version": "v2.6",
        "lifetime_label": "live in last version v2.13.0",
        "exceptions": [
            {
                "exceptionName": "java.lang.IllegalArgumentException",
                "modifier": "public",
                "added_version": "2.6",
                "exceptionName_history": [],
                "message": "\\QUnsupported byte order setting: \\E[\\s\\S]*\\Q, expected one of \\E[\\s\\S]*\\Q, \\E[\\s\\S]*",
                "message_history": [
                    {
                        "version<2.8.0": "\\QUnsupported byte order setting: \\E[\\s\\S]*\\Q, expeced one of \\E[\\s\\S]*\\Q, \\E[\\s\\S]*"
                    }
                ],
                "preConditions": [
                    [
                        "virtualinvoke virtualinvoke <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>.<java.nio.ByteOrder: java.lang.String toString()>().<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0",
                        "virtualinvoke virtualinvoke <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>.<java.nio.ByteOrder: java.lang.String toString()>().<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
                    ]
                ],
                "preConditions_history": [],
                "keyPreCondition": [
                    "virtualinvoke virtualinvoke <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>.<java.nio.ByteOrder: java.lang.String toString()>().<java.lang.String: boolean equals(java.lang.Object)>(parameter0) is 0"
                ],
                "keyPreCondition_history": [],
                "callChain": "throw $r5",
                "callChain_history": [],
                "invokeUnit": null,
                "invokeUnit_history": [],
                "throwUnit": "throw $r5",
                "throwUnitOrder": 0
            }
        ]
    }
]